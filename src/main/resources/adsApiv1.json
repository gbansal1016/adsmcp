{
  "openapi": "3.0.2",
  "info": {
    "title": "AmazonAdsAPI",
    "version": "v1"
  },
  "paths": {
    "/adsApi/v1/create/adAssociations": {
      "post": {
        "description": "Creates AdAssociations.",
        "operationId": "CreateAdAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdAssociationRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreateAdAssociation 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdAssociationMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "false"
            }
          ]
        },
        "tags": [
          "AdAssociations"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdAssociations"
        ]
      }
    },
    "/adsApi/v1/create/adGroups": {
      "post": {
        "description": "Creates AdGroups.",
        "operationId": "CreateAdGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdGroupRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreateAdGroup 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "AdGroups"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdGroups"
        ]
      }
    },
    "/adsApi/v1/create/ads": {
      "post": {
        "description": "Creates Ads.",
        "operationId": "CreateAd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreateAd 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Ads"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Ads"
        ]
      }
    },
    "/adsApi/v1/create/campaigns": {
      "post": {
        "description": "Creates Campaigns.",
        "operationId": "CreateCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreateCampaign 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Campaigns"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/adsApi/v1/create/portfolios": {
      "post": {
        "description": "Creates Portfolios.",
        "operationId": "CreatePortfolio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePortfolioRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreatePortfolio 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "1p",
        "x-amazon-advertising-access-control": {
          "access-type": "closed-beta",
          "clientId-allowlist": [
            "amzn.advertising.789c1d8c810d00310802573afa5aebfe8b3d4a082127518474d7474af211650f21258c894b97e8c9e399c5c2dedab3e7f395782e0beffca37e9a6c1304",
            "amzn.advertising.789c258c810d0031080257e2da5aebfe8bbdf286187222e8c0b51684e2e9646b8802d458e7aa12d5ecd5b11e19966d39ff201597a5266edbede7f47fe04e5cc2fc7ee66b1869"
          ]
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Portfolios"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Portfolios"
        ]
      }
    },
    "/adsApi/v1/create/targets": {
      "post": {
        "description": "Creates Targets.",
        "operationId": "CreateTarget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTargetRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "CreateTarget 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Targets"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Targets"
        ]
      }
    },
    "/adsApi/v1/delete/adAssociations": {
      "post": {
        "description": "Archives or deletes AdAssociations.",
        "operationId": "DeleteAdAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAdAssociationRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "DeleteAdAssociation 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdAssociationMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "false"
            }
          ]
        },
        "tags": [
          "AdAssociations"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdAssociations"
        ]
      }
    },
    "/adsApi/v1/delete/adGroups": {
      "post": {
        "description": "Archives or deletes AdGroups.",
        "operationId": "DeleteAdGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAdGroupRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "DeleteAdGroup 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "AdGroups"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdGroups"
        ]
      }
    },
    "/adsApi/v1/delete/ads": {
      "post": {
        "description": "Archives or deletes Ads.",
        "operationId": "DeleteAd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "DeleteAd 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Ads"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Ads"
        ]
      }
    },
    "/adsApi/v1/delete/campaigns": {
      "post": {
        "description": "Archives or deletes Campaigns.",
        "operationId": "DeleteCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCampaignRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "DeleteCampaign 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Campaigns"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/adsApi/v1/delete/targets": {
      "post": {
        "description": "Archives or deletes Targets.",
        "operationId": "DeleteTarget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTargetRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "DeleteTarget 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Targets"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Targets"
        ]
      }
    },
    "/adsApi/v1/query/adAssociations": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryAdAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAdAssociationRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryAdAssociation 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdAssociationSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "false"
            }
          ]
        },
        "tags": [
          "AdAssociations"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdAssociations"
        ]
      }
    },
    "/adsApi/v1/query/adGroups": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryAdGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAdGroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryAdGroup 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdGroupSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "AdGroups"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdGroups"
        ]
      }
    },
    "/adsApi/v1/query/ads": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryAd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAdRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryAd 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Ads"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Ads"
        ]
      }
    },
    "/adsApi/v1/query/campaigns": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCampaignRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryCampaign 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Campaigns"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/adsApi/v1/query/portfolios": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryPortfolio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPortfolioRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryPortfolio 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "1p",
        "x-amazon-advertising-access-control": {
          "access-type": "closed-beta",
          "clientId-allowlist": [
            "amzn.advertising.789c1d8c810d00310802573afa5aebfe8b3d4a082127518474d7474af211650f21258c894b97e8c9e399c5c2dedab3e7f395782e0beffca37e9a6c1304",
            "amzn.advertising.789c258c810d0031080257e2da5aebfe8bbdf286187222e8c0b51684e2e9646b8802d458e7aa12d5ecd5b11e19966d39ff201597a5266edbede7f47fe04e5cc2fc7ee66b1869"
          ]
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Portfolios"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Portfolios"
        ]
      }
    },
    "/adsApi/v1/query/targets": {
      "post": {
        "description": "A search read, allowing use of more complex filters.",
        "operationId": "QueryTarget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTargetRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "QueryTarget 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Targets"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Targets"
        ]
      }
    },
    "/adsApi/v1/update/adAssociations": {
      "post": {
        "description": "Updates AdAssociations. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdateAdAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdAssociationRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdateAdAssociation 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdAssociationMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "false"
            }
          ]
        },
        "tags": [
          "AdAssociations"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdAssociations"
        ]
      }
    },
    "/adsApi/v1/update/adGroups": {
      "post": {
        "description": "Updates AdGroups. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdateAdGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdGroupRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdateAdGroup 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "AdGroups"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "AdGroups"
        ]
      }
    },
    "/adsApi/v1/update/ads": {
      "post": {
        "description": "Updates Ads. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdateAd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdateAd 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Ads"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Ads"
        ]
      }
    },
    "/adsApi/v1/update/campaigns": {
      "post": {
        "description": "Updates Campaigns. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdateCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCampaignRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdateCampaign 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Campaigns"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/adsApi/v1/update/portfolios": {
      "post": {
        "description": "Updates Portfolios. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdatePortfolio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortfolioRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdatePortfolio 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "1p",
        "x-amazon-advertising-access-control": {
          "access-type": "closed-beta",
          "clientId-allowlist": [
            "amzn.advertising.789c1d8c810d00310802573afa5aebfe8b3d4a082127518474d7474af211650f21258c894b97e8c9e399c5c2dedab3e7f395782e0beffca37e9a6c1304",
            "amzn.advertising.789c258c810d0031080257e2da5aebfe8bbdf286187222e8c0b51684e2e9646b8802d458e7aa12d5ecd5b11e19966d39ff201597a5266edbede7f47fe04e5cc2fc7ee66b1869"
          ]
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Portfolios"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Portfolios"
        ]
      }
    },
    "/adsApi/v1/update/targets": {
      "post": {
        "description": "Updates Targets. Behaves as PATCH unless otherwise stated.",
        "operationId": "UpdateTarget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTargetRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/ClientIdHeader"
          },
          {
            "$ref": "#/components/parameters/ScopeHeader"
          }
        ],
        "responses": {
          "207": {
            "description": "UpdateTarget 207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetMultiStatusResponseWithPartialErrors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFound 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "ContentTooLarge 413 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTooLargeResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            }
          },
          "502": {
            "description": "BadGateway 502 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGatewayResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableError 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableErrorResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeout 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutResponseContent"
                }
              }
            }
          }
        },
        "x-advertising-documentation-access-control": "3p",
        "x-amazon-advertising-access-control": {
          "access-type": "public"
        },
        "x-amazon-advertising-authorization": {
          "permissions": [
            "advertiser_campaign_edit",
            "advertiser_campaign_view"
          ],
          "rules": [
            {
              "resourceType": "GLOBAL_AD_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            },
            {
              "resourceType": "DSP_ACCOUNT",
              "resourceLocation": {
                "parameterName": "Amazon-Ads-AccountId",
                "in": "header"
              },
              "overridePermissions": [
                "advertiser_campaign_edit",
                "advertiser_campaign_view"
              ],
              "allowFallback": "true"
            }
          ]
        },
        "tags": [
          "Targets"
        ]
      },
      "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
      "x-amazon-advertising-product": "Amazon Ads API",
      "x-amazon-advertising-product-description": "Amazon Advertising API",
      "x-amazon-advertising-stage": [
        "beta",
        "gamma",
        "prod"
      ],
      "x-amazon-api-owner": {
        "email": "acm-api-dev@amazon.com",
        "cti": {
          "category": "Performance Advertising",
          "type": "Campaign Management",
          "item": "AdsCampaignManagementService",
          "assignedGroup": "AdsCampaignManagementService",
          "assignedFolder": "d99b3a22-2fcb-46e8-afc1-e5f4104b1549"
        },
        "tags": [
          "Targets"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AcrossGroupOperator": {
        "type": "string",
        "description": "| AcrossGroupOperator | Description |\n| --- | --- |\n| `ANY` |  |\n| `ALL` |  |",
        "enum": [
          "ANY",
          "ALL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Ad": {
        "type": "object",
        "properties": {
          "adId": {
            "type": "string",
            "description": "The identifier of the ad."
          },
          "adGroupId": {
            "type": "string",
            "description": "The ad group associated with the ad."
          },
          "campaignId": {
            "type": "string",
            "description": "The campaign associated with the ad. It's a read-only field."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "name": {
            "type": "string",
            "description": "The name of the ad."
          },
          "creationDateTime": {
            "type": "string",
            "description": "The date time that the ad was created.",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The date time that the ad was last updated.",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "creative": {
            "$ref": "#/components/schemas/Creative"
          },
          "activeCreative": {
            "$ref": "#/components/schemas/Creative"
          },
          "adType": {
            "$ref": "#/components/schemas/AdType"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the ad"
          }
        },
        "required": [
          "adId",
          "adProduct",
          "adType",
          "creationDateTime",
          "creative",
          "lastUpdatedDateTime",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAdGroupIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAdIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAdProductFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdProduct"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| AdProduct | Description |\n| --- | --- |\n| `SPONSORED_PRODUCTS` |  |\n| `SPONSORED_BRANDS` |  |\n| `AMAZON_DSP` |  |\n| `FULL_FUNNEL` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociation": {
        "type": "object",
        "properties": {
          "adAssociationId": {
            "type": "string",
            "description": "The unique identifier of the ad association."
          },
          "adGroupId": {
            "type": "string",
            "description": "The ad group associated with the ad."
          },
          "adId": {
            "type": "string",
            "description": "The ad Id  associated with the ad."
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the ad association.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the ad association.",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "weight": {
            "type": "integer",
            "description": "The relative percentage of traffic which would be directed to the associated Ad Creative in the Ad Group.",
            "format": "int32"
          }
        },
        "required": [
          "adAssociationId",
          "adGroupId",
          "adId",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationAdAssociationIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationAdGroupIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationAdIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationCreate": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "type": "string",
            "description": "The ad group associated with the ad."
          },
          "adId": {
            "type": "string",
            "description": "The ad Id  associated with the ad."
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the ad association.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the ad association.",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          },
          "weight": {
            "type": "integer",
            "description": "The relative percentage of traffic which would be directed to the associated Ad Creative in the Ad Group.",
            "format": "int32"
          }
        },
        "required": [
          "adGroupId",
          "adId",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationMultiStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdAssociationMultiStatusSuccess"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 20,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 19,
            "minimum": 0,
            "format": "int32"
          },
          "adAssociation": {
            "$ref": "#/components/schemas/AdAssociation"
          }
        },
        "required": [
          "adAssociation",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "adAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdAssociation"
            },
            "maxItems": 100,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdAssociationUpdate": {
        "type": "object",
        "properties": {
          "adAssociationId": {
            "type": "string",
            "description": "The unique identifier of the ad association."
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "adAssociationId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdCampaignIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdChoicesPosition": {
        "type": "string",
        "description": "| AdChoicesPosition | Description |\n| --- | --- |\n| `BOTTOM_LEFT` |  |\n| `BOTTOM_RIGHT` |  |\n| `TOP_LEFT` |  |\n| `TOP_RIGHT` |  |",
        "enum": [
          "BOTTOM_LEFT",
          "BOTTOM_RIGHT",
          "TOP_LEFT",
          "TOP_RIGHT"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdCreate": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "type": "string",
            "description": "The ad group associated with the ad."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          },
          "name": {
            "type": "string",
            "description": "The name of the ad."
          },
          "creative": {
            "$ref": "#/components/schemas/CreateCreative"
          },
          "adType": {
            "$ref": "#/components/schemas/AdType"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the ad"
          }
        },
        "required": [
          "adProduct",
          "adType",
          "creative",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroup": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "type": "string",
            "description": "The unique identifier of the ad group."
          },
          "campaignId": {
            "type": "string",
            "description": "The unique identifier of the campaign the ad group belongs to."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "name": {
            "type": "string",
            "description": "The name of the ad group."
          },
          "creationDateTime": {
            "type": "string",
            "description": "The date time that the ad group was created.",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The date time that the ad group was last updated.",
            "format": "date-time"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the ad group.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the ad group.",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "inventoryType": {
            "$ref": "#/components/schemas/InventoryType"
          },
          "creativeRotationType": {
            "$ref": "#/components/schemas/CreativeRotationType"
          },
          "bid": {
            "$ref": "#/components/schemas/AdGroupBid"
          },
          "optimization": {
            "$ref": "#/components/schemas/Optimization"
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "An object containing budget details for the ad group."
          },
          "pacing": {
            "$ref": "#/components/schemas/Pacing"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Frequency"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "An object containing frequency details for the ad group."
          },
          "targetingSettings": {
            "$ref": "#/components/schemas/TargetingSettings"
          },
          "advertisedProductCategoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 0,
            "description": "The array of identifiers of product categories associated with the ad group. For VIDEO ad group type only one parent product category or multiple sub-categories from one parent product category are allowed."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fee"
            },
            "maxItems": 100,
            "minItems": 0,
            "description": "The fees associated with the ad group."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the ad group"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "The purchase order number associated with the ad group."
          }
        },
        "required": [
          "adGroupId",
          "adProduct",
          "campaignId",
          "creationDateTime",
          "lastUpdatedDateTime",
          "name",
          "state",
          "status"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupAdGroupIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupAdProductFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdProduct"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| AdProduct | Description |\n| --- | --- |\n| `SPONSORED_PRODUCTS` |  |\n| `SPONSORED_BRANDS` |  |\n| `AMAZON_DSP` |  |\n| `FULL_FUNNEL` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupBid": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "baseBid": {
            "type": "number",
            "description": "The lower bound bid used for the ads in the ad group.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "maxAverageBid": {
            "type": "number",
            "description": "The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).",
            "format": "double"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupBudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "dailyMinSpendValue": {
            "type": "number",
            "description": "Denotes the daily minimum spend on the ad group in local currency.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupCampaignIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupCreate": {
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string",
            "description": "The unique identifier of the campaign the ad group belongs to."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          },
          "name": {
            "type": "string",
            "description": "The name of the ad group."
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the ad group.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the ad group.",
            "format": "date-time"
          },
          "inventoryType": {
            "$ref": "#/components/schemas/InventoryType"
          },
          "creativeRotationType": {
            "$ref": "#/components/schemas/CreativeRotationType"
          },
          "bid": {
            "$ref": "#/components/schemas/CreateAdGroupBid"
          },
          "optimization": {
            "$ref": "#/components/schemas/CreateOptimization"
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateBudget"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "An object containing budget details for the ad group."
          },
          "pacing": {
            "$ref": "#/components/schemas/CreatePacing"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFrequency"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "An object containing frequency details for the ad group."
          },
          "targetingSettings": {
            "$ref": "#/components/schemas/CreateTargetingSettings"
          },
          "advertisedProductCategoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 0,
            "description": "The array of identifiers of product categories associated with the ad group. For VIDEO ad group type only one parent product category or multiple sub-categories from one parent product category are allowed."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFee"
            },
            "maxItems": 100,
            "minItems": 0,
            "description": "The fees associated with the ad group."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the ad group"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "The purchase order number associated with the ad group."
          }
        },
        "required": [
          "adProduct",
          "campaignId",
          "name",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupMarketplaceScopeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceScope"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupMultiStatusResponseWithPartialErrors": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupMultiStatusSuccess"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "partialSuccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupPartialIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "adGroup": {
            "$ref": "#/components/schemas/AdGroup"
          }
        },
        "required": [
          "adGroup",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupNameFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/AdGroupNameFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupNameFilterType": {
        "type": "string",
        "description": "| AdGroupNameFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupPartialIndex": {
        "type": "object",
        "properties": {
          "adGroup": {
            "$ref": "#/components/schemas/AdGroup"
          },
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "required": [
          "adGroup",
          "errors",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupStateFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "maxItems": 3,
            "minItems": 1,
            "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "adGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroup"
            },
            "maxItems": 5000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdGroupUpdate": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "type": "string",
            "description": "The unique identifier of the ad group."
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "name": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "inventoryType": {
            "$ref": "#/components/schemas/InventoryType"
          },
          "creativeRotationType": {
            "$ref": "#/components/schemas/CreativeRotationType"
          },
          "bid": {
            "$ref": "#/components/schemas/UpdateAdGroupBid"
          },
          "optimization": {
            "$ref": "#/components/schemas/UpdateOptimization"
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBudget"
            },
            "maxItems": 3,
            "minItems": 0
          },
          "pacing": {
            "$ref": "#/components/schemas/UpdatePacing"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateFrequency"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "targetingSettings": {
            "$ref": "#/components/schemas/UpdateTargetingSettings"
          },
          "advertisedProductCategoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateFee"
            },
            "maxItems": 100,
            "minItems": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTag"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "purchaseOrderNumber": {
            "type": "string"
          }
        },
        "required": [
          "adGroupId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdInitiationTarget": {
        "type": "object",
        "description": "Target based on how the video ad will be started.",
        "properties": {
          "videoInitiationType": {
            "$ref": "#/components/schemas/VideoInitiationType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdMarketplaceScopeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceScope"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdMultiStatusResponseWithPartialErrors": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdMultiStatusSuccess"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "partialSuccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPartialIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "ad": {
            "$ref": "#/components/schemas/Ad"
          }
        },
        "required": [
          "ad",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdNameFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/AdNameFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdNameFilterType": {
        "type": "string",
        "description": "| AdNameFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdPartialIndex": {
        "type": "object",
        "properties": {
          "ad": {
            "$ref": "#/components/schemas/Ad"
          },
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "required": [
          "ad",
          "errors",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdPlayerSize": {
        "type": "string",
        "description": "| AdPlayerSize | Description |\n| --- | --- |\n| `SMALL` |  |\n| `MEDIUM` |  |\n| `LARGE` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "SMALL",
          "MEDIUM",
          "LARGE",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdPlayerSizeTarget": {
        "type": "object",
        "description": "Target based on the size of the ad player.",
        "properties": {
          "adPlayerSize": {
            "$ref": "#/components/schemas/AdPlayerSize"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdProduct": {
        "type": "string",
        "description": "| AdProduct | Description |\n| --- | --- |\n| `SPONSORED_PRODUCTS` |  |\n| `SPONSORED_BRANDS` |  |\n| `AMAZON_DSP` |  |\n| `FULL_FUNNEL` |  |",
        "enum": [
          "SPONSORED_PRODUCTS",
          "SPONSORED_BRANDS",
          "AMAZON_DSP",
          "FULL_FUNNEL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdStateFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "maxItems": 3,
            "minItems": 1,
            "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "ads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ad"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdType": {
        "type": "string",
        "description": "| AdType | Description |\n| --- | --- |\n| `DISPLAY` | A creative that features one or more custom images. |\n| `VIDEO` | A creative that features one or more videos. |\n| `AUDIO` | A creative that features one or more audio assets. |\n| `THIRD_PARTY` | A creative that is served from a third party ad server. |\n| `COMPONENT` | A creative that can features a collection of videos, images, and products. |\n| `PRODUCT_AD` | A creative built based on a specified product. |",
        "enum": [
          "DISPLAY",
          "VIDEO",
          "AUDIO",
          "THIRD_PARTY",
          "COMPONENT",
          "PRODUCT_AD"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdUpdate": {
        "type": "object",
        "properties": {
          "adId": {
            "type": "string",
            "description": "The identifier of the ad."
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "name": {
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/UpdateCreative"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTag"
            },
            "maxItems": 50,
            "minItems": 0
          }
        },
        "required": [
          "adId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdvertisedProductMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "productId": {
            "type": "string",
            "description": "The identifier of the product advertised."
          },
          "resolvedProductId": {
            "type": "string",
            "description": "The identifier of product associated with the advertised product. It's a read-only field."
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/GlobalStoreSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdvertisedProducts": {
        "type": "object",
        "properties": {
          "productIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          },
          "productId": {
            "type": "string",
            "description": "The identifier of the advertised product."
          },
          "resolvedProductIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          },
          "resolvedProductId": {
            "type": "string",
            "description": "The identifier of product associated with the advertised product. It's a read-only field."
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/GlobalStoreSettings"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvertisedProductMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of advertised product selectively applied at the given marketplace level"
          }
        },
        "required": [
          "productIdType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AdvertiserDomainList": {
        "type": "object",
        "description": "Targets domains based on list inherited from the advertiser.",
        "properties": {
          "inheritFromAdvertiser": {
            "type": "boolean",
            "description": "Set to TRUE to inherit domain list from advertiser."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AmazonViewability": {
        "type": "object",
        "properties": {
          "viewabilityTier": {
            "$ref": "#/components/schemas/ViewabilityTier"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AppTarget": {
        "type": "object",
        "description": "Target based on user application.",
        "properties": {
          "appId": {
            "type": "string",
            "description": "The app identifier being targeted."
          },
          "appType": {
            "$ref": "#/components/schemas/AppType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AppType": {
        "type": "string",
        "description": "| AppType | Description |\n| --- | --- |\n| `MOBILE` |  |\n| `STREAMING_TV` |  |",
        "enum": [
          "MOBILE",
          "STREAMING_TV"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AssetBasedCreativeCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "assetBasedCreativeCallToActionSettings",
            "properties": {
              "assetBasedCreativeCallToActionSettings": {
                "$ref": "#/components/schemas/AssetBasedCreativeCallToActionSettings"
              }
            },
            "required": [
              "assetBasedCreativeCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AssetBasedCreativeCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetBasedCreativeCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for AssetBasedCreative."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AssetBasedCreativeCallToActionType": {
        "type": "string",
        "description": "| AssetBasedCreativeCallToActionType | Description |\n| --- | --- |\n| `SHOP_NOW` |  |\n| `BUY_NOW` |  |\n| `PRE_ORDER_NOW` |  |\n| `LEARN_MORE` |  |\n| `SEE_DETAILS` |  |\n| `DISCOVER_MORE` |  |\n| `DOWNLOAD_NOW` |  |\n| `GET_APP` |  |\n| `SUBSCRIBE_NOW` |  |\n| `SIGN_UP_NOW` |  |\n| `BOOK_NOW` |  |\n| `EXPLORE_NOW` |  |\n| `GET_QUOTE` |  |",
        "enum": [
          "SHOP_NOW",
          "BUY_NOW",
          "PRE_ORDER_NOW",
          "LEARN_MORE",
          "SEE_DETAILS",
          "DISCOVER_MORE",
          "DOWNLOAD_NOW",
          "GET_APP",
          "SUBSCRIBE_NOW",
          "SIGN_UP_NOW",
          "BOOK_NOW",
          "EXPLORE_NOW",
          "GET_QUOTE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AssetBasedCreativeSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The logos to use for the Asset Based Creative experience."
          },
          "customVideos": {
            "$ref": "#/components/schemas/Video"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Asset Based Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Asset Based Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Asset Based Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/AssetBasedCreativeCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Size"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AudienceBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given audience and bid adjustment settings.",
            "format": "int32"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the Audience to apply bid adjustment."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AudienceTarget": {
        "type": "object",
        "description": "Target based on a specified audience ID.",
        "properties": {
          "audienceId": {
            "$ref": "#/components/schemas/MarketplaceStringValue"
          },
          "groupId": {
            "type": "string",
            "description": "The string identifying a group of audiences. Only numbers formatted as strings are accepted (e.g. '1'). To add audiences to a new group, choose any string not currently being used on this ad group. To add audiences to an existing group, use the existing groupId from this ad group. You may specify up to 10 include groups and 1 exclude group."
          },
          "inGroupOperator": {
            "$ref": "#/components/schemas/InGroupOperator"
          },
          "acrossGroupOperator": {
            "$ref": "#/components/schemas/AcrossGroupOperator"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Audio": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the audio asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the audio asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AudioCreative": {
        "type": "object",
        "properties": {
          "standardAudioSettings": {
            "$ref": "#/components/schemas/StandardAudioExperienceSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AutoCreationSettings": {
        "type": "object",
        "properties": {
          "autoCreateTargets": {
            "type": "boolean",
            "description": "Gives Amazon permission to automatically create targets associated with the campaign based on the products being advertised."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AutomatedTargetingTactic": {
        "type": "string",
        "description": "| AutomatedTargetingTactic | Description |\n| --- | --- |\n| `REMARKETING` |  |\n| `RETENTION` |  |\n| `PROSPECTING` |  |\n| `CUSTOMER_ACQUISITION` |  |\n| `AWARENESS` |  |",
        "enum": [
          "REMARKETING",
          "RETENTION",
          "PROSPECTING",
          "CUSTOMER_ACQUISITION",
          "AWARENESS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "AverageCompletionAndFullyViewableRateTargetingType": {
        "type": "string",
        "description": "The type of average completion and fully viewable rate targeting.\n| AverageCompletionAndFullyViewableRateTargetingType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_10` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_20` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_25` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_30` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_35` |  |\n| `AVG_COMPLETION_FULLY_VIEWABLE_GTE_40` |  |",
        "enum": [
          "ALLOW_ALL",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_10",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_20",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_25",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_30",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_35",
          "AVG_COMPLETION_FULLY_VIEWABLE_GTE_40"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BadGatewayResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BadRequestResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BidAdjustments": {
        "type": "object",
        "properties": {
          "placementBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlacementBidAdjustment"
            },
            "maxItems": 4,
            "minItems": 0,
            "description": "Bid adjustments based on ad placements."
          },
          "audienceBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Bid Adjustments based on the audiences"
          },
          "shopperSegmentBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopperSegmentBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Legacy SB field (marked for deprecation)"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BidSettings": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "bidAdjustments": {
            "$ref": "#/components/schemas/BidAdjustments"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BidStrategy": {
        "type": "string",
        "description": "| BidStrategy | Description |\n| --- | --- |\n| `MANUAL` | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |\n| `SALES_UP_AND_DOWN` | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. |\n| `SALES_DOWN_ONLY` |  |\n| `NEW_TO_BRAND` |  |\n| `SPEND_BUDGET_IN_FULL` |  |\n| `RULE_BASED` |  |\n| `PRIORITIZE_KPI_TARGET` |  |\n| `USE_CAMPAIGN_STRATEGY` |  |",
        "enum": [
          "MANUAL",
          "SALES_UP_AND_DOWN",
          "SALES_DOWN_ONLY",
          "NEW_TO_BRAND",
          "SPEND_BUDGET_IN_FULL",
          "RULE_BASED",
          "PRIORITIZE_KPI_TARGET",
          "USE_CAMPAIGN_STRATEGY"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandExposureViewabilityTargetingType": {
        "type": "string",
        "description": "The type of brand exposure viewability targeting.\n| BrandExposureViewabilityTargetingType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `BRAND_EXPOSURE_VIEWABILITY_GTE_15_SEC_AVG_DURATION` |  |\n| `BRAND_EXPOSURE_VIEWABILITY_GTE_10_SEC_AVG_DURATION` |  |\n| `BRAND_EXPOSURE_VIEWABILITY_GTE_5_SEC_AVG_DURATION` |  |",
        "enum": [
          "ALLOW_ALL",
          "BRAND_EXPOSURE_VIEWABILITY_GTE_15_SEC_AVG_DURATION",
          "BRAND_EXPOSURE_VIEWABILITY_GTE_10_SEC_AVG_DURATION",
          "BRAND_EXPOSURE_VIEWABILITY_GTE_5_SEC_AVG_DURATION"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandStoreCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "brandStoreCallToActionSettings",
            "properties": {
              "brandStoreCallToActionSettings": {
                "$ref": "#/components/schemas/BrandStoreCallToActionSettings"
              }
            },
            "required": [
              "brandStoreCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandStoreCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandStoreCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for BrandStore."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandStoreCallToActionType": {
        "type": "string",
        "description": "| BrandStoreCallToActionType | Description |\n| --- | --- |\n| `SHOP_NOW` |  |\n| `BUY_NOW` |  |\n| `LEARN_MORE` |  |\n| `SEE_DETAILS` |  |\n| `DISCOVER_MORE` |  |",
        "enum": [
          "SHOP_NOW",
          "BUY_NOW",
          "LEARN_MORE",
          "SEE_DETAILS",
          "DISCOVER_MORE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandStoreSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/Image"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Brand Store Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Brand Store Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Brand Store Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/BrandStoreCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Size"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BrandSuitabilityRiskLevelType": {
        "type": "string",
        "description": "The Double Verify brand suitability risk level.\n| BrandSuitabilityRiskLevelType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `HIGH` |  |\n| `HIGH_MEDIUM` |  |\n| `HIGH_MEDIUM_LOW` |  |",
        "enum": [
          "ALLOW_ALL",
          "HIGH",
          "HIGH_MEDIUM",
          "HIGH_MEDIUM_LOW"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Budget": {
        "type": "object",
        "properties": {
          "recurrenceTimePeriod": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "budgetType": {
            "$ref": "#/components/schemas/BudgetType"
          },
          "budgetValue": {
            "$ref": "#/components/schemas/BudgetValue"
          }
        },
        "required": [
          "budgetType",
          "budgetValue",
          "recurrenceTimePeriod"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BudgetAllocation": {
        "type": "string",
        "description": "| BudgetAllocation | Description |\n| --- | --- |\n| `AUTO` |  |\n| `MANUAL` |  |",
        "enum": [
          "AUTO",
          "MANUAL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "offAmazonBudgetControlStrategy": {
            "$ref": "#/components/schemas/OffAmazonBudgetControlStrategy"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BudgetType": {
        "type": "string",
        "description": "| BudgetType | Description |\n| --- | --- |\n| `MONETARY` |  |",
        "enum": [
          "MONETARY"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "BudgetValue": {
        "oneOf": [
          {
            "type": "object",
            "title": "monetaryBudgetValue",
            "properties": {
              "monetaryBudgetValue": {
                "$ref": "#/components/schemas/MonetaryBudgetValue"
              }
            },
            "required": [
              "monetaryBudgetValue"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string",
            "description": "A unique identifier for a campaign."
          },
          "portfolioId": {
            "type": "string",
            "description": "The ID of the portfolio associated with the campaign."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "maxItems": 249,
            "minItems": 0,
            "description": "The list of country codes representing countries in which the campaign is applicable"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign."
          },
          "skanAppId": {
            "type": "string",
            "description": "StoreKit AdNetwork application ID. Represents iTunes application ID with which SKAN-enabled campaigns are associated."
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the campaign.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the campaign.",
            "format": "date-time"
          },
          "creationDateTime": {
            "type": "string",
            "description": "The date time that the campaign was created.",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The date time that the campaign was last updated.",
            "format": "date-time"
          },
          "targetsAmazonDeal": {
            "type": "boolean",
            "description": "If the campaign is targeting an Amazon deal, the value will be true, and the campaign and ad group(s) will be read-only."
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "brandId": {
            "type": "string",
            "description": "This is the ID of the brand that the campaign is associated with."
          },
          "productCategoryId": {
            "type": "string",
            "description": "This is the ID of the product category that the campaign is associated with."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the campaign"
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The object containing budget details for the campaign (for campaigns that support multiple budgets)."
          },
          "optimizations": {
            "$ref": "#/components/schemas/CampaignOptimizations"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Frequency"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Any frequency caps associated with the campaign."
          },
          "costType": {
            "$ref": "#/components/schemas/CostType"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "autoCreationSettings": {
            "$ref": "#/components/schemas/AutoCreationSettings"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fee"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Any fees associated with the campaign."
          },
          "flights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignFlight"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Flight details associated with the campaign."
          },
          "isMultiAdGroupsEnabled": {
            "type": "boolean",
            "description": "A read-only field that indicates whether a campaign supports multiple adGroups."
          },
          "siteRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteRestriction"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Restrict the ad to a particular site"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "The purchase order number associated with the campaign."
          }
        },
        "required": [
          "adProduct",
          "campaignId",
          "creationDateTime",
          "lastUpdatedDateTime",
          "name",
          "state",
          "status"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignAdProductFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdProduct"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| AdProduct | Description |\n| --- | --- |\n| `SPONSORED_PRODUCTS` |  |\n| `SPONSORED_BRANDS` |  |\n| `AMAZON_DSP` |  |\n| `FULL_FUNNEL` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignCampaignIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignCreate": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "The ID of the portfolio associated with the campaign."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "maxItems": 249,
            "minItems": 0,
            "description": "The list of country codes representing countries in which the campaign is applicable"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign."
          },
          "skanAppId": {
            "type": "string",
            "description": "StoreKit AdNetwork application ID. Represents iTunes application ID with which SKAN-enabled campaigns are associated."
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the campaign.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the campaign.",
            "format": "date-time"
          },
          "brandId": {
            "type": "string",
            "description": "This is the ID of the brand that the campaign is associated with."
          },
          "productCategoryId": {
            "type": "string",
            "description": "This is the ID of the product category that the campaign is associated with."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the campaign"
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateBudget"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The object containing budget details for the campaign (for campaigns that support multiple budgets)."
          },
          "optimizations": {
            "$ref": "#/components/schemas/CreateCampaignOptimizations"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFrequency"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Any frequency caps associated with the campaign."
          },
          "costType": {
            "$ref": "#/components/schemas/CostType"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "autoCreationSettings": {
            "$ref": "#/components/schemas/CreateAutoCreationSettings"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFee"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Any fees associated with the campaign."
          },
          "flights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCampaignFlight"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Flight details associated with the campaign."
          },
          "siteRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteRestriction"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Restrict the ad to a particular site"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "The purchase order number associated with the campaign."
          }
        },
        "required": [
          "adProduct",
          "name",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignFlight": {
        "type": "object",
        "properties": {
          "flightId": {
            "type": "string",
            "description": "The ID associated with the flight."
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date of the flight.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignGoalFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Goal"
            },
            "maxItems": 3,
            "minItems": 1,
            "description": "| Goal | Description |\n| --- | --- |\n| `AWARENESS` | Indicates a goal of driving awareness. |\n| `CONSIDERATION` | Indicates a goal of driving consideration. |\n| `CONVERSIONS` | Indicates a goal of driving conversions. |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignMarketplaceScopeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceScope"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignMultiStatusResponseWithPartialErrors": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMultiStatusSuccess"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "partialSuccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignPartialIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "required": [
          "campaign",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignNameFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/CampaignNameFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignNameFilterType": {
        "type": "string",
        "description": "| CampaignNameFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignOptimizations": {
        "type": "object",
        "properties": {
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "goalSettings": {
            "$ref": "#/components/schemas/GoalSettings"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/BudgetSettings"
          },
          "primaryInventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryInventoryType"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Primary inventory type of the campaign for filtering KPIs and recommending tactics."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignPartialIndex": {
        "type": "object",
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "required": [
          "campaign",
          "errors",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignPortfolioIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignStateFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "maxItems": 3,
            "minItems": 1,
            "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "maxItems": 5000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CampaignUpdate": {
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string",
            "description": "A unique identifier for a campaign."
          },
          "portfolioId": {
            "type": "string",
            "nullable": true
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "maxItems": 249,
            "minItems": 0,
            "description": "| CountryCode | Description |\n| --- | --- |\n| `AE` |  |\n| `AT` |  |\n| `AU` |  |\n| `BE` |  |\n| `BH` |  |\n| `BR` |  |\n| `CA` |  |\n| `CH` |  |\n| `DE` |  |\n| `DK` |  |\n| `EG` |  |\n| `ES` |  |\n| `FI` |  |\n| `FR` |  |\n| `GB` |  |\n| `IE` |  |\n| `IL` |  |\n| `IN` |  |\n| `IT` |  |\n| `JO` |  |\n| `JP` |  |\n| `KW` |  |\n| `LU` |  |\n| `MA` |  |\n| `MK` |  |\n| `MX` |  |\n| `NL` |  |\n| `NO` |  |\n| `NZ` |  |\n| `OM` |  |\n| `PL` |  |\n| `QA` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "name": {
            "type": "string"
          },
          "skanAppId": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTag"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBudget"
            },
            "maxItems": 3,
            "minItems": 0
          },
          "optimizations": {
            "$ref": "#/components/schemas/UpdateCampaignOptimizations"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateFrequency"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateFee"
            },
            "maxItems": 2,
            "minItems": 0
          },
          "flights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCampaignFlight"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "siteRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteRestriction"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "| SiteRestriction | Description |\n| --- | --- |\n| `AMAZON_BUSINESS` | Restrict the ad to only show on Amazon Business. |\n| `AMAZON_HAUL` | Restrict the ad to only show on Amazon Haul. |"
          },
          "purchaseOrderNumber": {
            "type": "string"
          }
        },
        "required": [
          "campaignId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CardCreativeElement": {
        "type": "object",
        "properties": {
          "headline": {
            "type": "string",
            "description": "The headline used for the card."
          },
          "landingPage": {
            "$ref": "#/components/schemas/StoreSpotlightLandingPage"
          },
          "products": {
            "$ref": "#/components/schemas/AdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ClickToAppDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The app that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ClickToUrlDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ClickToUrlVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          },
          "url": {
            "type": "string",
            "description": "The url to redirect the user via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ComponentCreative": {
        "type": "object",
        "properties": {
          "responsiveEcommerceSettings": {
            "$ref": "#/components/schemas/ResponsiveEcommerceSettings"
          },
          "brandStoreSettings": {
            "$ref": "#/components/schemas/BrandStoreSettings"
          },
          "assetBasedCreativeSettings": {
            "$ref": "#/components/schemas/AssetBasedCreativeSettings"
          },
          "productVideoSettings": {
            "$ref": "#/components/schemas/ProductVideoSettings"
          },
          "storeSpotlightSettings": {
            "$ref": "#/components/schemas/StoreSpotlightSettings"
          },
          "productCollectionSettings": {
            "$ref": "#/components/schemas/ProductCollectionSettings"
          },
          "dynamicCollectionSettings": {
            "$ref": "#/components/schemas/DynamicCollectionSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ComponentInventoryType": {
        "type": "string",
        "description": "| ComponentInventoryType | Description |\n| --- | --- |\n| `NATIVE` |  |\n| `DISPLAY` |  |",
        "enum": [
          "NATIVE",
          "DISPLAY"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentCategoryTarget": {
        "type": "object",
        "description": "Target based on the category of content being viewed.",
        "properties": {
          "contentCategoryId": {
            "type": "string",
            "description": "The content category ID being targeted."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentGenre": {
        "type": "string",
        "description": "| ContentGenre | Description |\n| --- | --- |\n| `ACTION` |  |\n| `ADVENTURE` |  |\n| `ANIMATION` |  |\n| `BIOGRAPHY` |  |\n| `COMEDY` |  |\n| `CRIME` |  |\n| `DOCUMENTARY` |  |\n| `DRAMA` |  |\n| `FAMILY` |  |\n| `FANTASY` |  |\n| `FILM_NOIR` |  |\n| `GAME_SHOW` |  |\n| `HISTORY` |  |\n| `HORROR` |  |\n| `MUSICAL` |  |\n| `MYSTERY` |  |\n| `NEWS` |  |\n| `REALITY_TV` |  |\n| `ROMANCE` |  |\n| `SCIENCE_FICTION` |  |\n| `SHORT` |  |\n| `SPORT` |  |\n| `SUPER_HERO` |  |\n| `TALK_SHOW` |  |\n| `THRILLER` |  |\n| `WAR` |  |\n| `WESTERN` |  |\n| `GENRE_NOT_AVAILABLE` |  |",
        "enum": [
          "ACTION",
          "ADVENTURE",
          "ANIMATION",
          "BIOGRAPHY",
          "COMEDY",
          "CRIME",
          "DOCUMENTARY",
          "DRAMA",
          "FAMILY",
          "FANTASY",
          "FILM_NOIR",
          "GAME_SHOW",
          "HISTORY",
          "HORROR",
          "MUSICAL",
          "MYSTERY",
          "NEWS",
          "REALITY_TV",
          "ROMANCE",
          "SCIENCE_FICTION",
          "SHORT",
          "SPORT",
          "SUPER_HERO",
          "TALK_SHOW",
          "THRILLER",
          "WAR",
          "WESTERN",
          "GENRE_NOT_AVAILABLE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentGenreTarget": {
        "type": "object",
        "description": "Target based on the genre of content being viewed.",
        "properties": {
          "contentGenre": {
            "$ref": "#/components/schemas/ContentGenre"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentInstreamPosition": {
        "type": "string",
        "description": "| ContentInstreamPosition | Description |\n| --- | --- |\n| `PRE_ROLL` |  |\n| `MID_ROLL` |  |\n| `POST_ROLL` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "PRE_ROLL",
          "MID_ROLL",
          "POST_ROLL",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentInstreamPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified content instream position",
        "properties": {
          "instreamPosition": {
            "$ref": "#/components/schemas/ContentInstreamPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentOutstreamPosition": {
        "type": "string",
        "description": "| ContentOutstreamPosition | Description |\n| --- | --- |\n| `STANDALONE` |  |\n| `ACCOMPANYING_CONTENT` |  |\n| `INTERSTITIAL` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "STANDALONE",
          "ACCOMPANYING_CONTENT",
          "INTERSTITIAL",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentOutstreamPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified content outstream position",
        "properties": {
          "outstreamPosition": {
            "$ref": "#/components/schemas/ContentOutstreamPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentRating": {
        "oneOf": [
          {
            "type": "object",
            "title": "dspContentRating",
            "properties": {
              "dspContentRating": {
                "$ref": "#/components/schemas/DspContentRating"
              }
            },
            "required": [
              "dspContentRating"
            ]
          },
          {
            "type": "object",
            "title": "twitchContentRating",
            "properties": {
              "twitchContentRating": {
                "$ref": "#/components/schemas/TwitchContentRating"
              }
            },
            "required": [
              "twitchContentRating"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentRatingTarget": {
        "type": "object",
        "description": "Target based on the rating of content being viewed.",
        "properties": {
          "contentRatingType": {
            "$ref": "#/components/schemas/ContentRatingTypes"
          },
          "contentRatingTypeDetails": {
            "$ref": "#/components/schemas/ContentRating"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentRatingTypes": {
        "type": "string",
        "description": "| ContentRatingTypes | Description |\n| --- | --- |\n| `DSP_CONTENT_RATING` |  |\n| `TWITCH_CONTENT_RATING` |  |",
        "enum": [
          "DSP_CONTENT_RATING",
          "TWITCH_CONTENT_RATING"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ContentTooLargeResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CostType": {
        "type": "string",
        "description": "| CostType | Description |\n| --- | --- |\n| `CPC` | Cost per click. |\n| `VCPM` | Cost per thousand views. |",
        "enum": [
          "CPC",
          "VCPM"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CountryCode": {
        "type": "string",
        "description": "| CountryCode | Description |\n| --- | --- |\n| `AE` |  |\n| `AT` |  |\n| `AU` |  |\n| `BE` |  |\n| `BH` |  |\n| `BR` |  |\n| `CA` |  |\n| `CH` |  |\n| `DE` |  |\n| `DK` |  |\n| `EG` |  |\n| `ES` |  |\n| `FI` |  |\n| `FR` |  |\n| `GB` |  |\n| `IE` |  |\n| `IL` |  |\n| `IN` |  |\n| `IT` |  |\n| `JO` |  |\n| `JP` |  |\n| `KW` |  |\n| `LU` |  |\n| `MA` |  |\n| `MK` |  |\n| `MX` |  |\n| `NL` |  |\n| `NO` |  |\n| `NZ` |  |\n| `OM` |  |\n| `PL` |  |\n| `QA` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |",
        "enum": [
          "AE",
          "AT",
          "AU",
          "BE",
          "BH",
          "BR",
          "CA",
          "CH",
          "DE",
          "DK",
          "EG",
          "ES",
          "FI",
          "FR",
          "GB",
          "IE",
          "IL",
          "IN",
          "IT",
          "JO",
          "JP",
          "KW",
          "LU",
          "MA",
          "MK",
          "MX",
          "NL",
          "NO",
          "NZ",
          "OM",
          "PL",
          "QA",
          "SA",
          "SE",
          "SG",
          "TR",
          "US"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdAssociationRequest": {
        "type": "object",
        "properties": {
          "adAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdAssociationCreate"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdGroupBid": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "baseBid": {
            "type": "number",
            "description": "The lower bound bid used for the ads in the ad group.",
            "format": "double"
          },
          "maxAverageBid": {
            "type": "number",
            "description": "The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).",
            "format": "double"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdGroupBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdGroupBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdGroupBudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "dailyMinSpendValue": {
            "type": "number",
            "description": "Denotes the daily minimum spend on the ad group in local currency.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdGroupRequest": {
        "type": "object",
        "properties": {
          "adGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupCreate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdInitiationTarget": {
        "type": "object",
        "description": "Target based on how the video ad will be started.",
        "properties": {
          "videoInitiationType": {
            "$ref": "#/components/schemas/VideoInitiationType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdPlayerSizeTarget": {
        "type": "object",
        "description": "Target based on the size of the ad player.",
        "properties": {
          "adPlayerSize": {
            "$ref": "#/components/schemas/AdPlayerSize"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdRequest": {
        "type": "object",
        "properties": {
          "ads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdCreate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdvertisedProductMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "productId": {
            "type": "string",
            "description": "The identifier of the product advertised."
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/CreateGlobalStoreSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdvertisedProducts": {
        "type": "object",
        "properties": {
          "productIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          },
          "productId": {
            "type": "string",
            "description": "The identifier of the advertised product."
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/CreateGlobalStoreSettings"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdvertisedProductMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of advertised product selectively applied at the given marketplace level"
          }
        },
        "required": [
          "productIdType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAdvertiserDomainList": {
        "type": "object",
        "description": "Targets domains based on list inherited from the advertiser.",
        "properties": {
          "inheritFromAdvertiser": {
            "type": "boolean",
            "description": "Set to TRUE to inherit domain list from advertiser."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAmazonViewability": {
        "type": "object",
        "properties": {
          "viewabilityTier": {
            "$ref": "#/components/schemas/ViewabilityTier"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAppTarget": {
        "type": "object",
        "description": "Target based on user application.",
        "properties": {
          "appId": {
            "type": "string",
            "description": "The app identifier being targeted."
          },
          "appType": {
            "$ref": "#/components/schemas/AppType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAssetBasedCreativeCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "assetBasedCreativeCallToActionSettings",
            "properties": {
              "assetBasedCreativeCallToActionSettings": {
                "$ref": "#/components/schemas/CreateAssetBasedCreativeCallToActionSettings"
              }
            },
            "required": [
              "assetBasedCreativeCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAssetBasedCreativeCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetBasedCreativeCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for AssetBasedCreative."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAssetBasedCreativeSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The logos to use for the Asset Based Creative experience."
          },
          "customVideos": {
            "$ref": "#/components/schemas/CreateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Asset Based Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Asset Based Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Asset Based Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/CreateAssetBasedCreativeCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAudienceBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given audience and bid adjustment settings.",
            "format": "int32"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the Audience to apply bid adjustment."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAudienceTarget": {
        "type": "object",
        "description": "Target based on a specified audience ID.",
        "properties": {
          "audienceId": {
            "$ref": "#/components/schemas/CreateMarketplaceStringValue"
          },
          "groupId": {
            "type": "string",
            "description": "The string identifying a group of audiences. Only numbers formatted as strings are accepted (e.g. '1'). To add audiences to a new group, choose any string not currently being used on this ad group. To add audiences to an existing group, use the existing groupId from this ad group. You may specify up to 10 include groups and 1 exclude group."
          },
          "inGroupOperator": {
            "$ref": "#/components/schemas/InGroupOperator"
          },
          "acrossGroupOperator": {
            "$ref": "#/components/schemas/AcrossGroupOperator"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAudio": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the audio asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the audio asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAudioCreative": {
        "type": "object",
        "properties": {
          "standardAudioSettings": {
            "$ref": "#/components/schemas/CreateStandardAudioExperienceSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateAutoCreationSettings": {
        "type": "object",
        "properties": {
          "autoCreateTargets": {
            "type": "boolean",
            "description": "Gives Amazon permission to automatically create targets associated with the campaign based on the products being advertised."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBidAdjustments": {
        "type": "object",
        "properties": {
          "placementBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlacementBidAdjustment"
            },
            "maxItems": 4,
            "minItems": 0,
            "description": "Bid adjustments based on ad placements."
          },
          "audienceBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAudienceBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Bid Adjustments based on the audiences"
          },
          "shopperSegmentBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateShopperSegmentBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Legacy SB field (marked for deprecation)"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBidSettings": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "bidAdjustments": {
            "$ref": "#/components/schemas/CreateBidAdjustments"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBrandStoreCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "brandStoreCallToActionSettings",
            "properties": {
              "brandStoreCallToActionSettings": {
                "$ref": "#/components/schemas/CreateBrandStoreCallToActionSettings"
              }
            },
            "required": [
              "brandStoreCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBrandStoreCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandStoreCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for BrandStore."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBrandStoreSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/CreateImage"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Brand Store Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Brand Store Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Brand Store Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/CreateBrandStoreCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBudget": {
        "type": "object",
        "properties": {
          "recurrenceTimePeriod": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "budgetType": {
            "$ref": "#/components/schemas/BudgetType"
          },
          "budgetValue": {
            "$ref": "#/components/schemas/CreateBudgetValue"
          }
        },
        "required": [
          "budgetType",
          "budgetValue",
          "recurrenceTimePeriod"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "offAmazonBudgetControlStrategy": {
            "$ref": "#/components/schemas/OffAmazonBudgetControlStrategy"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateBudgetValue": {
        "oneOf": [
          {
            "type": "object",
            "title": "monetaryBudgetValue",
            "properties": {
              "monetaryBudgetValue": {
                "$ref": "#/components/schemas/CreateMonetaryBudgetValue"
              }
            },
            "required": [
              "monetaryBudgetValue"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCampaignFlight": {
        "type": "object",
        "properties": {
          "flightId": {
            "type": "string",
            "description": "The ID associated with the flight."
          },
          "budget": {
            "$ref": "#/components/schemas/CreateBudget"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date of the flight.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCampaignOptimizations": {
        "type": "object",
        "properties": {
          "bidSettings": {
            "$ref": "#/components/schemas/CreateBidSettings"
          },
          "goalSettings": {
            "$ref": "#/components/schemas/CreateGoalSettings"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/CreateBudgetSettings"
          },
          "primaryInventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryInventoryType"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Primary inventory type of the campaign for filtering KPIs and recommending tactics."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCampaignRequest": {
        "type": "object",
        "properties": {
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignCreate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCardCreativeElement": {
        "type": "object",
        "properties": {
          "headline": {
            "type": "string",
            "description": "The headline used for the card."
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreateStoreSpotlightLandingPage"
          },
          "products": {
            "$ref": "#/components/schemas/CreateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateClickToAppDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The app that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateClickToUrlDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateClickToUrlVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          },
          "url": {
            "type": "string",
            "description": "The url to redirect the user via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateComponentCreative": {
        "type": "object",
        "properties": {
          "responsiveEcommerceSettings": {
            "$ref": "#/components/schemas/CreateResponsiveEcommerceSettings"
          },
          "brandStoreSettings": {
            "$ref": "#/components/schemas/CreateBrandStoreSettings"
          },
          "assetBasedCreativeSettings": {
            "$ref": "#/components/schemas/CreateAssetBasedCreativeSettings"
          },
          "productVideoSettings": {
            "$ref": "#/components/schemas/CreateProductVideoSettings"
          },
          "storeSpotlightSettings": {
            "$ref": "#/components/schemas/CreateStoreSpotlightSettings"
          },
          "productCollectionSettings": {
            "$ref": "#/components/schemas/CreateProductCollectionSettings"
          },
          "dynamicCollectionSettings": {
            "$ref": "#/components/schemas/CreateDynamicCollectionSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentCategoryTarget": {
        "type": "object",
        "description": "Target based on the category of content being viewed.",
        "properties": {
          "contentCategoryId": {
            "type": "string",
            "description": "The content category ID being targeted."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentGenreTarget": {
        "type": "object",
        "description": "Target based on the genre of content being viewed.",
        "properties": {
          "contentGenre": {
            "$ref": "#/components/schemas/ContentGenre"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentInstreamPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified content instream position",
        "properties": {
          "instreamPosition": {
            "$ref": "#/components/schemas/ContentInstreamPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentOutstreamPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified content outstream position",
        "properties": {
          "outstreamPosition": {
            "$ref": "#/components/schemas/ContentOutstreamPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentRating": {
        "oneOf": [
          {
            "type": "object",
            "title": "dspContentRating",
            "properties": {
              "dspContentRating": {
                "$ref": "#/components/schemas/CreateDspContentRating"
              }
            },
            "required": [
              "dspContentRating"
            ]
          },
          {
            "type": "object",
            "title": "twitchContentRating",
            "properties": {
              "twitchContentRating": {
                "$ref": "#/components/schemas/CreateTwitchContentRating"
              }
            },
            "required": [
              "twitchContentRating"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateContentRatingTarget": {
        "type": "object",
        "description": "Target based on the rating of content being viewed.",
        "properties": {
          "contentRatingType": {
            "$ref": "#/components/schemas/ContentRatingTypes"
          },
          "contentRatingTypeDetails": {
            "$ref": "#/components/schemas/CreateContentRating"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCreative": {
        "oneOf": [
          {
            "type": "object",
            "title": "audioCreative",
            "properties": {
              "audioCreative": {
                "$ref": "#/components/schemas/CreateAudioCreative"
              }
            },
            "required": [
              "audioCreative"
            ]
          },
          {
            "type": "object",
            "title": "displayCreative",
            "properties": {
              "displayCreative": {
                "$ref": "#/components/schemas/CreateDisplayCreative"
              }
            },
            "required": [
              "displayCreative"
            ]
          },
          {
            "type": "object",
            "title": "thirdPartyCreative",
            "properties": {
              "thirdPartyCreative": {
                "$ref": "#/components/schemas/CreateThirdPartyCreative"
              }
            },
            "required": [
              "thirdPartyCreative"
            ]
          },
          {
            "type": "object",
            "title": "videoCreative",
            "properties": {
              "videoCreative": {
                "$ref": "#/components/schemas/CreateVideoCreative"
              }
            },
            "required": [
              "videoCreative"
            ]
          },
          {
            "type": "object",
            "title": "componentCreative",
            "properties": {
              "componentCreative": {
                "$ref": "#/components/schemas/CreateComponentCreative"
              }
            },
            "required": [
              "componentCreative"
            ]
          },
          {
            "type": "object",
            "title": "productCreative",
            "properties": {
              "productCreative": {
                "$ref": "#/components/schemas/CreateProductCreative"
              }
            },
            "required": [
              "productCreative"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateCreativeTrackingUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A url to be triggered for tracking events."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDVBrandSafetyContentCategoriesWithRiskMap": {
        "type": "object",
        "description": "A map from content categories to risk level to exclude from targeting. Available keys are: [ADULT_CONTENT, ALCOHOL, CRIME, DEATH_INJURIES, DISASTER_AVIATION, DISASTER_MAN_MADE, DISASTER_NATURAL, DISASTER_TERRORIST_EVENTS, DISASTER_VEHICLE, HATE_SPEECH, PROFANITY, SUBSTANCE_ABUSE, TOBACCO_ECIGARETTES, VIOLENCE_EXTREME_GRAPHIC].",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/BrandSuitabilityRiskLevelType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDayPartTarget": {
        "type": "object",
        "description": "Target based on time of day.",
        "properties": {
          "timeOfDay": {
            "$ref": "#/components/schemas/CreateTimeOfDay"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDeviceTarget": {
        "type": "object",
        "description": "Target based on user device.",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "mobileEnvironment": {
            "$ref": "#/components/schemas/MobileEnvironment"
          },
          "mobileDevice": {
            "$ref": "#/components/schemas/MobileDevice"
          },
          "deviceOrientation": {
            "$ref": "#/components/schemas/DeviceOrientation"
          },
          "mobileOs": {
            "$ref": "#/components/schemas/MobileOs"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDisplayCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "clickToUrlDisplayCallToActionSettings",
            "properties": {
              "clickToUrlDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/CreateClickToUrlDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlDisplayCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToAppDisplayCallToActionSettings",
            "properties": {
              "clickToAppDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/CreateClickToAppDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToAppDisplayCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDisplayCreative": {
        "type": "object",
        "properties": {
          "standardDisplaySettings": {
            "$ref": "#/components/schemas/CreateStandardDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDomainFileTarget": {
        "type": "object",
        "description": "Targets domains based on list provided via file upload.",
        "properties": {
          "domainFileId": {
            "type": "string",
            "description": "The ID associated to the domain file to target. Read-only and created based on the inputted domainFileKey."
          },
          "domainFileKey": {
            "type": "string",
            "description": "The URL of the domain to target."
          },
          "domainFileName": {
            "type": "string",
            "description": "The name of the file."
          },
          "domainFileUrl": {
            "type": "string",
            "description": "The file containing the domains uploaded. It expires in one hour."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDomainListTarget": {
        "type": "object",
        "description": "Targets domains based on an existing domain list.",
        "properties": {
          "domainListId": {
            "type": "string",
            "description": "The ID of the domain list to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDomainNameTarget": {
        "type": "object",
        "description": "Targets domains based on URL.",
        "properties": {
          "domainName": {
            "type": "string",
            "description": "The URL of the domain to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDomainTarget": {
        "type": "object",
        "description": "Target based on a specified domain.",
        "properties": {
          "domainTargetType": {
            "$ref": "#/components/schemas/DomainTargetTypes"
          },
          "domainTargetDetails": {
            "$ref": "#/components/schemas/CreateDomainTargetDetails"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDomainTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "domainListTarget",
            "properties": {
              "domainListTarget": {
                "$ref": "#/components/schemas/CreateDomainListTarget"
              }
            },
            "required": [
              "domainListTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainNameTarget",
            "properties": {
              "domainNameTarget": {
                "$ref": "#/components/schemas/CreateDomainNameTarget"
              }
            },
            "required": [
              "domainNameTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainFileTarget",
            "properties": {
              "domainFileTarget": {
                "$ref": "#/components/schemas/CreateDomainFileTarget"
              }
            },
            "required": [
              "domainFileTarget"
            ]
          },
          {
            "type": "object",
            "title": "advertiserDomainList",
            "properties": {
              "advertiserDomainList": {
                "$ref": "#/components/schemas/CreateAdvertiserDomainList"
              }
            },
            "required": [
              "advertiserDomainList"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyAuthenticAttention": {
        "type": "object",
        "properties": {
          "universalAttention": {
            "type": "boolean",
            "description": "One omni-channel segment that is informed by data from all DV campaigns to help avoid serving ads on generally poor performing apps and domains."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyAuthenticBrandSafety": {
        "type": "object",
        "properties": {
          "doubleVerifySegmentId": {
            "type": "string",
            "pattern": "^51[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyBrandSafety": {
        "type": "object",
        "properties": {
          "appStarRating": {
            "$ref": "#/components/schemas/DVBrandSafetyAppStarRatingType"
          },
          "contentCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoryType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of content categories to exclude from targeting."
          },
          "appAgeRating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyAppAgeRatingType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of app age ratings to be used for excluding apps. For example, TEENS_12_PLUS will only exclude apps with content rated for everyone ages 12 and over. UNKNOWN will exclude apps with content unrated or unknown to Double Verify."
          },
          "excludeAppsWithInsufficientRating": {
            "type": "boolean",
            "description": "Set to true to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime)."
          },
          "contentCategoriesWithRisk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDVBrandSafetyContentCategoriesWithRiskMap"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "unknownContent": {
            "type": "boolean",
            "description": "Set to true to exclude unknown content."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyCustomContextualSegmentId": {
        "type": "object",
        "properties": {
          "doubleVerifySegmentId": {
            "type": "string",
            "pattern": "^52[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeImpressions": {
            "type": "boolean",
            "description": "Set to true to exclude impressions delivered to devices identified to be fraudulent or invalid."
          },
          "excludeAppsAndSites": {
            "$ref": "#/components/schemas/ExcludeAppsAndSitesType"
          },
          "blockAppAndSites": {
            "type": "boolean",
            "description": "Set to true to block applications and sites with insufficient historical fraud and invalid traffic statistics. This will not be applicable if ALLOW_ALL is chosen."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyStandardDisplayBrandSafety": {
        "type": "object",
        "properties": {
          "contentCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoryType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of content categories to exclude from targeting."
          },
          "contentCategoriesWithRisk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDVBrandSafetyContentCategoriesWithRiskMap"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "unknownContent": {
            "type": "boolean",
            "description": "Set to true to exclude unknown content."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDoubleVerifyViewability": {
        "type": "object",
        "properties": {
          "averageCompletionAndFullyViewableRateTargeting": {
            "$ref": "#/components/schemas/AverageCompletionAndFullyViewableRateTargetingType"
          },
          "brandExposureViewabilityTargeting": {
            "$ref": "#/components/schemas/BrandExposureViewabilityTargetingType"
          },
          "mrcViewabilityTargeting": {
            "$ref": "#/components/schemas/MrcViewabilityTargetingType"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Set to true to include impressions where impressions can't be measured."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDspContentRating": {
        "type": "object",
        "properties": {
          "dspContentRating": {
            "$ref": "#/components/schemas/DspContentRatingEnum"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateDynamicCollectionSettings": {
        "type": "object",
        "description": "A collection of multi-format creative assets intended for use across a group of products.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdvertisedProducts"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "The products to be used in the ad."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateFee": {
        "type": "object",
        "properties": {
          "feeType": {
            "$ref": "#/components/schemas/FeeType"
          },
          "addToBudgetSpentAmount": {
            "type": "boolean",
            "description": "Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports."
          },
          "thirdPartyProvider": {
            "$ref": "#/components/schemas/FeesThirdPartyProvider"
          },
          "feeValue": {
            "type": "number",
            "description": "The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateFoldPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified fold position",
        "properties": {
          "foldPosition": {
            "$ref": "#/components/schemas/FoldPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateFormatProperties": {
        "type": "object",
        "properties": {
          "top": {
            "type": "integer",
            "description": "The number of pixels from the top of the image where the crop should begin.",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "description": "The number of pixels from the left of the image where the crop should begin.",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "The width (in pixels) of the cropped image.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height (in pixels) of the cropped image.",
            "format": "int32"
          },
          "applyBorder": {
            "type": "boolean",
            "description": "Apply a boarder to the image to fit rules for some supplies."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateFrequency": {
        "type": "object",
        "properties": {
          "timeUnit": {
            "$ref": "#/components/schemas/TimeUnit"
          },
          "timeCount": {
            "type": "integer",
            "maximum": 60,
            "minimum": 1,
            "description": "The value associated with the time and unit of time for this frequency cap.",
            "format": "int32"
          },
          "eventMaxCount": {
            "type": "integer",
            "maximum": 99000,
            "minimum": 1,
            "description": "The maximum number of times an EventType is served per user.",
            "format": "int32"
          },
          "frequencyTargetingSetting": {
            "$ref": "#/components/schemas/FrequencyTargetingSetting"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateGlobalStoreSettings": {
        "type": "object",
        "properties": {
          "catalogSourceMarketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateGoalSettings": {
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/Goal"
          },
          "kpi": {
            "$ref": "#/components/schemas/KPI"
          },
          "kpiValue": {
            "type": "number",
            "description": "The value of the KPI that the campaign is working to optimize.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateImage": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the image asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the image asset."
          },
          "formatProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFormatProperties"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The cropping and positioning properties associated with the asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceBrandSafety": {
        "type": "object",
        "properties": {
          "iasBrandSafetyOffensiveLanguage": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "excludeContent": {
            "type": "boolean",
            "description": "Set to true to exclude content that Integral Ad Science is not able to rate."
          },
          "iasBrandSafetyAlcohol": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyIllegalDownloads": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyHateSpeech": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyIllegalDrugs": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyAdult": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyViolence": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyGambling": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceContextualAvoidance": {
        "type": "object",
        "properties": {
          "avoidanceSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual avoidance segment"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceContextualTargeting": {
        "type": "object",
        "properties": {
          "topicalSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual topical targeting segment"
          },
          "verticalSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual vertical targeting segment"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "targetSetting": {
            "$ref": "#/components/schemas/IASFraudInvalidTrafficType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceQualitySync": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "string",
            "pattern": "^4[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateIntegralAdScienceViewability": {
        "type": "object",
        "description": "The IAS viewability standard.",
        "properties": {
          "standard": {
            "$ref": "#/components/schemas/IASViewabilityStandardType"
          },
          "viewabilityTargeting": {
            "$ref": "#/components/schemas/ViewabilityTierType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateInventorySourceTarget": {
        "type": "object",
        "description": "Target based on the source of the inventory.",
        "properties": {
          "inventorySourceType": {
            "$ref": "#/components/schemas/InventorySourceType"
          },
          "inventorySourceId": {
            "$ref": "#/components/schemas/CreateMarketplaceStringValue"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateKeywordTarget": {
        "type": "object",
        "description": "Targets a specific customer search term.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/KeywordMatchType"
          },
          "keyword": {
            "type": "string",
            "description": "The customer search term or text to target"
          },
          "nativeLanguageKeyword": {
            "type": "string",
            "description": "The unlocalized keyword text in the preferred locale of the advertiser."
          },
          "nativeLanguageLocale": {
            "$ref": "#/components/schemas/LanguageLocale"
          }
        },
        "required": [
          "keyword",
          "matchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateLandingPageAsins": {
        "type": "object",
        "properties": {
          "asins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "description": "For landing page of type ASIN_LIST, the list of ASINs used to create the landing page."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateLearnMoreVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to drive users to learn more via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateLocationTarget": {
        "type": "object",
        "description": "Target based on geographic location.",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "The ID of the geographic location to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateMarketplaceStringValue": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "The default value. Either the default value or the marketplace settings should always be specified"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateStringMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The marketplace specific value pairs. Either the default value or the marketplace settings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateMonetaryBudget": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The monetary amount of the budget cap in the given currency.",
            "format": "double"
          }
        },
        "required": [
          "value"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateMonetaryBudgetMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "monetaryBudget": {
            "$ref": "#/components/schemas/CreateMonetaryBudget"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateMonetaryBudgetValue": {
        "type": "object",
        "properties": {
          "monetaryBudget": {
            "$ref": "#/components/schemas/CreateMonetaryBudget"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMonetaryBudgetMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of Monetary Budget values selectively applied at the given marketplace level"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateNativeContentPositionTarget": {
        "type": "object",
        "description": "Targets ads to a specific native content position",
        "properties": {
          "nativePosition": {
            "$ref": "#/components/schemas/NativeContentPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateNewsGuardBrandGuardMisinformationSafety": {
        "type": "object",
        "properties": {
          "avoidanceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsGuardBrandGuardMisinformationSafetyType"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The unique identifiers of misinformation targets"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateNewsGuardBrandGuardTrustedNewsTargeting": {
        "type": "object",
        "description": "Only applicable for Web supply.",
        "properties": {
          "targetingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsGuardBrandGuardTrustedNewsTargetingType"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The unique identifiers of trusted news targets"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateOnlineVideoSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/CreateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/CreateVideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/CreateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateOptimization": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/CreateAdGroupBudgetSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreatePacing": {
        "type": "object",
        "properties": {
          "deliveryProfile": {
            "$ref": "#/components/schemas/DeliveryProfile"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreatePixalateFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeIpAddressAndUserAgents": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from IPV4 and IPV6 addresses and user agents identified to be fraudulent or invalid."
          },
          "excludeOttAndMobileDevices": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from OTT and Mobile devices identified to be fraudulent or invalid."
          },
          "excludeRemovedAppsFromAppStores": {
            "type": "boolean",
            "description": "Set to true to exlude traffic from Apps that have been removed from the google play and apple app stores in the last 6 months."
          },
          "excludeAppsAndDomains": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from Apps and Domains identified to be fraudulent or invalid."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreatePlacementBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given placement and bid adjustment settings.",
            "format": "int32"
          },
          "placement": {
            "$ref": "#/components/schemas/Placement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreatePortfolioRequest": {
        "type": "object",
        "properties": {
          "portfolios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioCreate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCategoryRefinement": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "string",
            "description": "The product category ID to target."
          },
          "productCategoryIdResolved": {
            "type": "string",
            "description": "The resolved product category."
          },
          "productBrandId": {
            "type": "string",
            "description": "The brand ID to target."
          },
          "productBrandIdResolved": {
            "type": "string",
            "description": "The resolved name of the brand."
          },
          "productPriceLessThan": {
            "type": "number",
            "description": "Refinement to target products with a price less than the value within the product category.",
            "format": "double"
          },
          "productPriceGreaterThan": {
            "type": "number",
            "description": "Refinement to target products with a price greater than the value within the product category.",
            "format": "double"
          },
          "productRatingLessThan": {
            "type": "number",
            "description": "Refinement to target products with a rating less than the value within the product category.",
            "format": "double"
          },
          "productRatingGreaterThan": {
            "type": "number",
            "description": "Refinement to target products with a rating greater than the value within the product category.",
            "format": "double"
          },
          "productAgeRangeId": {
            "type": "string",
            "description": "The age range ID to target."
          },
          "productAgeRangeIdResolved": {
            "type": "string",
            "description": "The resolved age range to target."
          },
          "productPrimeShippingEligible": {
            "type": "boolean",
            "description": "Target based on if a product is Prime-shipping eligible."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCategoryRefinementMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/CreateProductCategoryRefinement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCategoryRefinementValue": {
        "type": "object",
        "properties": {
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/CreateProductCategoryRefinement"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateProductCategoryRefinementMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "Marketplace specific product category refinements. Either the value or the marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCategoryTarget": {
        "type": "object",
        "description": "Targets a specific customer search term.",
        "properties": {
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/CreateProductCategoryRefinementValue"
          },
          "productGenreRefinement": {
            "$ref": "#/components/schemas/CreateProductGenreRefinement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCollectionLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/ProductCollectionLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL associated to the landing page. Read only if landingPageType is ASIN_LIST"
          },
          "landingPageAsins": {
            "$ref": "#/components/schemas/CreateLandingPageAsins"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCollectionSettings": {
        "type": "object",
        "description": "An ad creative that contains multiple products and a custom image.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the ad."
          },
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreateProductCollectionLandingPage"
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The set of custom images featured in the ad."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCreative": {
        "type": "object",
        "properties": {
          "productCreativeSettings": {
            "$ref": "#/components/schemas/CreateProductCreativeSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductCreativeSettings": {
        "type": "object",
        "description": "An ad with a creative built based on the product being advertised.",
        "properties": {
          "advertisedProduct": {
            "$ref": "#/components/schemas/CreateAdvertisedProducts"
          },
          "headline": {
            "type": "string",
            "description": "The headline/custom text associated with the ad creative."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductGenreRefinement": {
        "type": "object",
        "properties": {
          "productGenreId": {
            "type": "string",
            "description": "The product genre ID to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductMarketplaceSetting": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product id applicable at the specified marketplace."
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductTarget": {
        "type": "object",
        "description": "Targets a specific product.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/ProductMatchType"
          },
          "product": {
            "$ref": "#/components/schemas/CreateProductValue"
          },
          "productIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          }
        },
        "required": [
          "matchType",
          "product",
          "productIdType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductValue": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product identifier. Either the product id or the marketplace settings should always be specified"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateProductMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The product ids at specific marketplace level. Either the product id or the marketplace settings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateProductVideoSettings": {
        "type": "object",
        "description": "An ad with a creative that includes a video.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreateVideoLandingPage"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the video ad."
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateVideo"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The video assets used in the ad."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateResponsiveEcommerceSettings": {
        "type": "object",
        "properties": {
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAdvertisedProducts"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The products advertised for the Responsive eCommerce experience."
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/CreateImage"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "string",
            "description": "The headline to use for the Responsive eCommerce experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimer to use for the Responsive eCommerce experience."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "recAdVariations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceAdVariations"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The rendering variations selected for the Responsive eCommerce experience."
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          },
          "supportedThirdPartySellers": {
            "$ref": "#/components/schemas/SupportedThirdPartySellers"
          },
          "creativePropertiesToOptimize": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceCreativePropertiesToOptimize"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The CreativeProperty Amazon will enhance or generate based on various factors like audience, placement etc."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateShopperSegmentBidAdjustment": {
        "type": "object",
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateSize": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "The width of the creative placement.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height of the creative placement.",
            "format": "int32"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStandardAudioExperienceSettings": {
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/CreateAdvertisedProducts"
          },
          "audio": {
            "$ref": "#/components/schemas/CreateAudio"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded. Urls cannot exceed 2048 characters."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStandardDisplaySettings": {
        "type": "object",
        "properties": {
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The custom images to use for the standard display experience."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "callToAction": {
            "$ref": "#/components/schemas/CreateDisplayCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateState": {
        "type": "string",
        "description": "| CreateState | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |",
        "enum": [
          "ENABLED",
          "PAUSED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStoreSpotlightLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/StoreSpotlightLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStoreSpotlightSettings": {
        "type": "object",
        "description": "An ad creative that contains ASINs within a brand Store.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreateStoreSpotlightLandingPage"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCardCreativeElement"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The sub-elements of the creative. Each card highlights a different ASIN associated to a brand Store."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStreamingTvSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/CreateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/CreateVideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/CreateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateStringMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "value": {
            "type": "string",
            "description": "The value applicable at the specified marketplace."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTag": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          },
          "value": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTargetBid": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTargetBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTargetBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "keywordTarget",
            "properties": {
              "keywordTarget": {
                "$ref": "#/components/schemas/CreateKeywordTarget"
              }
            },
            "required": [
              "keywordTarget"
            ]
          },
          {
            "type": "object",
            "title": "productTarget",
            "properties": {
              "productTarget": {
                "$ref": "#/components/schemas/CreateProductTarget"
              }
            },
            "required": [
              "productTarget"
            ]
          },
          {
            "type": "object",
            "title": "productCategoryTarget",
            "properties": {
              "productCategoryTarget": {
                "$ref": "#/components/schemas/CreateProductCategoryTarget"
              }
            },
            "required": [
              "productCategoryTarget"
            ]
          },
          {
            "type": "object",
            "title": "audienceTarget",
            "properties": {
              "audienceTarget": {
                "$ref": "#/components/schemas/CreateAudienceTarget"
              }
            },
            "required": [
              "audienceTarget"
            ]
          },
          {
            "type": "object",
            "title": "locationTarget",
            "properties": {
              "locationTarget": {
                "$ref": "#/components/schemas/CreateLocationTarget"
              }
            },
            "required": [
              "locationTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainTarget",
            "properties": {
              "domainTarget": {
                "$ref": "#/components/schemas/CreateDomainTarget"
              }
            },
            "required": [
              "domainTarget"
            ]
          },
          {
            "type": "object",
            "title": "appTarget",
            "properties": {
              "appTarget": {
                "$ref": "#/components/schemas/CreateAppTarget"
              }
            },
            "required": [
              "appTarget"
            ]
          },
          {
            "type": "object",
            "title": "deviceTarget",
            "properties": {
              "deviceTarget": {
                "$ref": "#/components/schemas/CreateDeviceTarget"
              }
            },
            "required": [
              "deviceTarget"
            ]
          },
          {
            "type": "object",
            "title": "dayPartTarget",
            "properties": {
              "dayPartTarget": {
                "$ref": "#/components/schemas/CreateDayPartTarget"
              }
            },
            "required": [
              "dayPartTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentCategoryTarget",
            "properties": {
              "contentCategoryTarget": {
                "$ref": "#/components/schemas/CreateContentCategoryTarget"
              }
            },
            "required": [
              "contentCategoryTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentGenreTarget",
            "properties": {
              "contentGenreTarget": {
                "$ref": "#/components/schemas/CreateContentGenreTarget"
              }
            },
            "required": [
              "contentGenreTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentRatingTarget",
            "properties": {
              "contentRatingTarget": {
                "$ref": "#/components/schemas/CreateContentRatingTarget"
              }
            },
            "required": [
              "contentRatingTarget"
            ]
          },
          {
            "type": "object",
            "title": "inventorySourceTarget",
            "properties": {
              "inventorySourceTarget": {
                "$ref": "#/components/schemas/CreateInventorySourceTarget"
              }
            },
            "required": [
              "inventorySourceTarget"
            ]
          },
          {
            "type": "object",
            "title": "adInitiationTarget",
            "properties": {
              "adInitiationTarget": {
                "$ref": "#/components/schemas/CreateAdInitiationTarget"
              }
            },
            "required": [
              "adInitiationTarget"
            ]
          },
          {
            "type": "object",
            "title": "adPlayerSizeTarget",
            "properties": {
              "adPlayerSizeTarget": {
                "$ref": "#/components/schemas/CreateAdPlayerSizeTarget"
              }
            },
            "required": [
              "adPlayerSizeTarget"
            ]
          },
          {
            "type": "object",
            "title": "videoAdFormatTarget",
            "properties": {
              "videoAdFormatTarget": {
                "$ref": "#/components/schemas/CreateVideoAdFormatTarget"
              }
            },
            "required": [
              "videoAdFormatTarget"
            ]
          },
          {
            "type": "object",
            "title": "thirdPartyTarget",
            "properties": {
              "thirdPartyTarget": {
                "$ref": "#/components/schemas/CreateThirdPartyTarget"
              }
            },
            "required": [
              "thirdPartyTarget"
            ]
          },
          {
            "type": "object",
            "title": "themeTarget",
            "properties": {
              "themeTarget": {
                "$ref": "#/components/schemas/CreateThemeTarget"
              }
            },
            "required": [
              "themeTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentInstreamPositionTarget",
            "properties": {
              "contentInstreamPositionTarget": {
                "$ref": "#/components/schemas/CreateContentInstreamPositionTarget"
              }
            },
            "required": [
              "contentInstreamPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentOutstreamPositionTarget",
            "properties": {
              "contentOutstreamPositionTarget": {
                "$ref": "#/components/schemas/CreateContentOutstreamPositionTarget"
              }
            },
            "required": [
              "contentOutstreamPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "videoContentDurationTarget",
            "properties": {
              "videoContentDurationTarget": {
                "$ref": "#/components/schemas/CreateVideoContentDurationTarget"
              }
            },
            "required": [
              "videoContentDurationTarget"
            ]
          },
          {
            "type": "object",
            "title": "foldPositionTarget",
            "properties": {
              "foldPositionTarget": {
                "$ref": "#/components/schemas/CreateFoldPositionTarget"
              }
            },
            "required": [
              "foldPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "nativeContentPositionTarget",
            "properties": {
              "nativeContentPositionTarget": {
                "$ref": "#/components/schemas/CreateNativeContentPositionTarget"
              }
            },
            "required": [
              "nativeContentPositionTarget"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTargetRequest": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetCreate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTargetingSettings": {
        "type": "object",
        "properties": {
          "enableLanguageTargeting": {
            "type": "boolean",
            "description": "If set to true, creatives will only target supply where the content language matches the creative language."
          },
          "amazonViewability": {
            "$ref": "#/components/schemas/CreateAmazonViewability"
          },
          "userLocationSignal": {
            "$ref": "#/components/schemas/UserLocationSignal"
          },
          "timeZoneType": {
            "$ref": "#/components/schemas/TimeZoneType"
          },
          "defaultAudienceTargetingMatchType": {
            "$ref": "#/components/schemas/DefaultAudienceTargetingMatchType"
          },
          "videoCompletionTier": {
            "$ref": "#/components/schemas/VideoCompletionTier"
          },
          "targetedPGDealId": {
            "type": "string",
            "description": "DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here."
          },
          "tacticsConvertersExclusionType": {
            "$ref": "#/components/schemas/TacticsConvertersExclusionType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThemeTarget": {
        "type": "object",
        "description": "Theme targets let advertisers select high-performing targets based on a common theme.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/ThemeMatchType"
          }
        },
        "required": [
          "matchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThirdPartyCreative": {
        "type": "object",
        "properties": {
          "thirdPartyVideoSettings": {
            "$ref": "#/components/schemas/CreateThirdPartyVideoSettings"
          },
          "thirdPartyDisplaySettings": {
            "$ref": "#/components/schemas/CreateThirdPartyDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThirdPartyDisplaySettings": {
        "type": "object",
        "properties": {
          "thirdPartyTagHostingSource": {
            "type": "string",
            "description": "The html tag to use to fetch this creative from the 3p ad server."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional html to be included along with the creative when rendered."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThirdPartyTarget": {
        "type": "object",
        "properties": {
          "thirdPartyTargetType": {
            "$ref": "#/components/schemas/ThirdPartyTargetType"
          },
          "thirdPartyTargetDetails": {
            "$ref": "#/components/schemas/CreateThirdPartyTargetDetails"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThirdPartyTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "doubleVerifyFraudInvalidTraffic",
            "properties": {
              "doubleVerifyFraudInvalidTraffic": {
                "$ref": "#/components/schemas/CreateDoubleVerifyFraudInvalidTraffic"
              }
            },
            "required": [
              "doubleVerifyFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyStandardDisplayBrandSafety",
            "properties": {
              "doubleVerifyStandardDisplayBrandSafety": {
                "$ref": "#/components/schemas/CreateDoubleVerifyStandardDisplayBrandSafety"
              }
            },
            "required": [
              "doubleVerifyStandardDisplayBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyBrandSafety",
            "properties": {
              "doubleVerifyBrandSafety": {
                "$ref": "#/components/schemas/CreateDoubleVerifyBrandSafety"
              }
            },
            "required": [
              "doubleVerifyBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyViewability",
            "properties": {
              "doubleVerifyViewability": {
                "$ref": "#/components/schemas/CreateDoubleVerifyViewability"
              }
            },
            "required": [
              "doubleVerifyViewability"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyAuthenticBrandSafety",
            "properties": {
              "doubleVerifyAuthenticBrandSafety": {
                "$ref": "#/components/schemas/CreateDoubleVerifyAuthenticBrandSafety"
              }
            },
            "required": [
              "doubleVerifyAuthenticBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyCustomContextualSegmentId",
            "properties": {
              "doubleVerifyCustomContextualSegmentId": {
                "$ref": "#/components/schemas/CreateDoubleVerifyCustomContextualSegmentId"
              }
            },
            "required": [
              "doubleVerifyCustomContextualSegmentId"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyAuthenticAttention",
            "properties": {
              "doubleVerifyAuthenticAttention": {
                "$ref": "#/components/schemas/CreateDoubleVerifyAuthenticAttention"
              }
            },
            "required": [
              "doubleVerifyAuthenticAttention"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceFraudInvalidTraffic",
            "properties": {
              "integralAdScienceFraudInvalidTraffic": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceFraudInvalidTraffic"
              }
            },
            "required": [
              "integralAdScienceFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceBrandSafety",
            "properties": {
              "integralAdScienceBrandSafety": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceBrandSafety"
              }
            },
            "required": [
              "integralAdScienceBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceViewability",
            "properties": {
              "integralAdScienceViewability": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceViewability"
              }
            },
            "required": [
              "integralAdScienceViewability"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceContextualTargeting",
            "properties": {
              "integralAdScienceContextualTargeting": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceContextualTargeting"
              }
            },
            "required": [
              "integralAdScienceContextualTargeting"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceContextualAvoidance",
            "properties": {
              "integralAdScienceContextualAvoidance": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceContextualAvoidance"
              }
            },
            "required": [
              "integralAdScienceContextualAvoidance"
            ]
          },
          {
            "type": "object",
            "title": "pixalateFraudInvalidTraffic",
            "properties": {
              "pixalateFraudInvalidTraffic": {
                "$ref": "#/components/schemas/CreatePixalateFraudInvalidTraffic"
              }
            },
            "required": [
              "pixalateFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceQualitySync",
            "properties": {
              "integralAdScienceQualitySync": {
                "$ref": "#/components/schemas/CreateIntegralAdScienceQualitySync"
              }
            },
            "required": [
              "integralAdScienceQualitySync"
            ]
          },
          {
            "type": "object",
            "title": "newsGuardBrandGuardTrustedNewsTargeting",
            "properties": {
              "newsGuardBrandGuardTrustedNewsTargeting": {
                "$ref": "#/components/schemas/CreateNewsGuardBrandGuardTrustedNewsTargeting"
              }
            },
            "required": [
              "newsGuardBrandGuardTrustedNewsTargeting"
            ]
          },
          {
            "type": "object",
            "title": "newsGuardBrandGuardMisinformationSafety",
            "properties": {
              "newsGuardBrandGuardMisinformationSafety": {
                "$ref": "#/components/schemas/CreateNewsGuardBrandGuardMisinformationSafety"
              }
            },
            "required": [
              "newsGuardBrandGuardMisinformationSafety"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateThirdPartyVideoSettings": {
        "type": "object",
        "properties": {
          "vastUrl": {
            "type": "string",
            "description": "The url to use to fetch the VAST XML for this video creative."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTimeOfDay": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]Z$",
            "description": "Selected start time"
          },
          "endTime": {
            "type": "string",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]Z$",
            "description": "Selected end time"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateTwitchContentRating": {
        "type": "object",
        "properties": {
          "twitchContentRating": {
            "$ref": "#/components/schemas/TwitchContentRatingEnum"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideo": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the video asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the video asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideoAdFormatTarget": {
        "type": "object",
        "description": "Target based on the video ad format.",
        "properties": {
          "videoAdFormat": {
            "$ref": "#/components/schemas/VideoAdFormat"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideoCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "learnMoreVideoCallToActionSettings",
            "properties": {
              "learnMoreVideoCallToActionSettings": {
                "$ref": "#/components/schemas/CreateLearnMoreVideoCallToActionSettings"
              }
            },
            "required": [
              "learnMoreVideoCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToUrlVideoCallToActionSettings",
            "properties": {
              "clickToUrlVideoCallToActionSettings": {
                "$ref": "#/components/schemas/CreateClickToUrlVideoCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlVideoCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideoContentDurationTarget": {
        "type": "object",
        "description": "Targets ads to a specific video content duration",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/VideoContentDuration"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideoCreative": {
        "type": "object",
        "properties": {
          "streamingTvSettings": {
            "$ref": "#/components/schemas/CreateStreamingTvSettings"
          },
          "onlineVideoSettings": {
            "$ref": "#/components/schemas/CreateOnlineVideoSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreateVideoLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/VideoLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Creative": {
        "oneOf": [
          {
            "type": "object",
            "title": "audioCreative",
            "properties": {
              "audioCreative": {
                "$ref": "#/components/schemas/AudioCreative"
              }
            },
            "required": [
              "audioCreative"
            ]
          },
          {
            "type": "object",
            "title": "displayCreative",
            "properties": {
              "displayCreative": {
                "$ref": "#/components/schemas/DisplayCreative"
              }
            },
            "required": [
              "displayCreative"
            ]
          },
          {
            "type": "object",
            "title": "thirdPartyCreative",
            "properties": {
              "thirdPartyCreative": {
                "$ref": "#/components/schemas/ThirdPartyCreative"
              }
            },
            "required": [
              "thirdPartyCreative"
            ]
          },
          {
            "type": "object",
            "title": "videoCreative",
            "properties": {
              "videoCreative": {
                "$ref": "#/components/schemas/VideoCreative"
              }
            },
            "required": [
              "videoCreative"
            ]
          },
          {
            "type": "object",
            "title": "componentCreative",
            "properties": {
              "componentCreative": {
                "$ref": "#/components/schemas/ComponentCreative"
              }
            },
            "required": [
              "componentCreative"
            ]
          },
          {
            "type": "object",
            "title": "productCreative",
            "properties": {
              "productCreative": {
                "$ref": "#/components/schemas/ProductCreative"
              }
            },
            "required": [
              "productCreative"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreativeOptimizationGoalKpi": {
        "type": "string",
        "description": "| CreativeOptimizationGoalKpi | Description |\n| --- | --- |\n| `PURCHASE_RATE` |  |\n| `CLICK_THROUGH_RATE` |  |\n| `DETAIL_PAGE_VIEW_RATE` |  |",
        "enum": [
          "PURCHASE_RATE",
          "CLICK_THROUGH_RATE",
          "DETAIL_PAGE_VIEW_RATE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreativeRotationType": {
        "type": "string",
        "description": "| CreativeRotationType | Description |\n| --- | --- |\n| `RANDOM` |  |\n| `WEIGHTED` |  |",
        "enum": [
          "RANDOM",
          "WEIGHTED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreativeStatus": {
        "type": "object",
        "properties": {
          "moderationStatus": {
            "$ref": "#/components/schemas/ModerationStatus"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CreativeTrackingUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A url to be triggered for tracking events."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "CurrencyCode": {
        "type": "string",
        "description": "| CurrencyCode | Description |\n| --- | --- |\n| `AED` |  |\n| `AUD` |  |\n| `BRL` |  |\n| `CAD` |  |\n| `CHF` |  |\n| `CNY` |  |\n| `DKK` |  |\n| `EGP` |  |\n| `EUR` |  |\n| `GBP` |  |\n| `INR` |  |\n| `JPY` |  |\n| `MXN` |  |\n| `MXP` |  |\n| `NGN` |  |\n| `NOK` |  |\n| `PLN` |  |\n| `NZD` |  |\n| `SAR` |  |\n| `SEK` |  |\n| `SGD` |  |\n| `TRY` |  |\n| `USD` |  |\n| `ZAR` |  |",
        "enum": [
          "AED",
          "AUD",
          "BRL",
          "CAD",
          "CHF",
          "CNY",
          "DKK",
          "EGP",
          "EUR",
          "GBP",
          "INR",
          "JPY",
          "MXN",
          "MXP",
          "NGN",
          "NOK",
          "PLN",
          "NZD",
          "SAR",
          "SEK",
          "SGD",
          "TRY",
          "USD",
          "ZAR"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DVBrandSafetyAppAgeRatingType": {
        "type": "string",
        "description": "| DVBrandSafetyAppAgeRatingType | Description |\n| --- | --- |\n| `EVERYONE_4_PLUS` |  |\n| `TWEENS_9_PLUS` |  |\n| `TEENS_12_PLUS` |  |\n| `MATURE_17_PLUS` |  |\n| `ADULTS_ONLY_18_PLUS` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "EVERYONE_4_PLUS",
          "TWEENS_9_PLUS",
          "TEENS_12_PLUS",
          "MATURE_17_PLUS",
          "ADULTS_ONLY_18_PLUS",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DVBrandSafetyAppStarRatingType": {
        "type": "string",
        "description": "App star rating to be used for excluding apps.\n| DVBrandSafetyAppStarRatingType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `APP_STAR_RATING_LT_1_POINT_5_STARS` |  |\n| `APP_STAR_RATING_LT_2_STARS` |  |\n| `APP_STAR_RATING_LT_2_POINT_5_STARS` |  |\n| `APP_STAR_RATING_LT_3_STARS` |  |\n| `APP_STAR_RATING_LT_3_POINT_5_STARS` |  |\n| `APP_STAR_RATING_LT_4_STARS` |  |\n| `APP_STAR_RATING_LT_4_POINT_5_STARS` |  |",
        "enum": [
          "ALLOW_ALL",
          "APP_STAR_RATING_LT_1_POINT_5_STARS",
          "APP_STAR_RATING_LT_2_STARS",
          "APP_STAR_RATING_LT_2_POINT_5_STARS",
          "APP_STAR_RATING_LT_3_STARS",
          "APP_STAR_RATING_LT_3_POINT_5_STARS",
          "APP_STAR_RATING_LT_4_STARS",
          "APP_STAR_RATING_LT_4_POINT_5_STARS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DVBrandSafetyContentCategoriesWithRiskMap": {
        "type": "object",
        "description": "A map from content categories to risk level to exclude from targeting. Available keys are: [ADULT_CONTENT, ALCOHOL, CRIME, DEATH_INJURIES, DISASTER_AVIATION, DISASTER_MAN_MADE, DISASTER_NATURAL, DISASTER_TERRORIST_EVENTS, DISASTER_VEHICLE, HATE_SPEECH, PROFANITY, SUBSTANCE_ABUSE, TOBACCO_ECIGARETTES, VIOLENCE_EXTREME_GRAPHIC].",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/BrandSuitabilityRiskLevelType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DVBrandSafetyContentCategoryType": {
        "type": "string",
        "description": "| DVBrandSafetyContentCategoryType | Description |\n| --- | --- |\n| `AD_SERVER` |  |\n| `CELEBRITY_GOSSIP` |  |\n| `CULTS_SURVIVALISM` |  |\n| `GAMBLING` |  |\n| `INCENTIVIZED_MALWARE_CLUTTER` |  |\n| `INFLAMMATORY_POLITICS_NEWS` |  |\n| `NEGATIVE_NEWS_FINANCIAL` |  |\n| `NEGATIVE_NEWS_PHARMACEUTICAL` |  |\n| `NON_STANDARD_CONTENT_NON_ENGLISH` |  |\n| `NON_STANDARD_CONTENT_PARKING_PAGE` |  |\n| `OCCULT` |  |\n| `PIRACY_COPYRIGHT_INFRINGEMENT` |  |\n| `UNMODERATED_UGC_FORUMS_IMAGES_VIDEO` |  |\n| `EXTREME_GRAPHIC` |  |",
        "enum": [
          "AD_SERVER",
          "CELEBRITY_GOSSIP",
          "CULTS_SURVIVALISM",
          "GAMBLING",
          "INCENTIVIZED_MALWARE_CLUTTER",
          "INFLAMMATORY_POLITICS_NEWS",
          "NEGATIVE_NEWS_FINANCIAL",
          "NEGATIVE_NEWS_PHARMACEUTICAL",
          "NON_STANDARD_CONTENT_NON_ENGLISH",
          "NON_STANDARD_CONTENT_PARKING_PAGE",
          "OCCULT",
          "PIRACY_COPYRIGHT_INFRINGEMENT",
          "UNMODERATED_UGC_FORUMS_IMAGES_VIDEO",
          "EXTREME_GRAPHIC"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DayOfWeek": {
        "type": "string",
        "description": "| DayOfWeek | Description |\n| --- | --- |\n| `MONDAY` |  |\n| `TUESDAY` |  |\n| `WEDNESDAY` |  |\n| `THURSDAY` |  |\n| `FRIDAY` |  |\n| `SATURDAY` |  |\n| `SUNDAY` |  |",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DayPartTarget": {
        "type": "object",
        "description": "Target based on time of day.",
        "properties": {
          "timeOfDay": {
            "$ref": "#/components/schemas/TimeOfDay"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeepLinkingBehavior": {
        "type": "string",
        "description": "| DeepLinkingBehavior | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `DISABLED` |  |",
        "enum": [
          "ENABLED",
          "DISABLED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DefaultAudienceTargetingMatchType": {
        "type": "string",
        "description": "| DefaultAudienceTargetingMatchType | Description |\n| --- | --- |\n| `SIMILAR` | Reach more audiences who are similar to your included audiences. |\n| `EXACT` | Target the exact audiences specified in the ad group audience targeting. |",
        "enum": [
          "SIMILAR",
          "EXACT"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeleteAdAssociationRequest": {
        "type": "object",
        "properties": {
          "adAssociationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeleteAdGroupRequest": {
        "type": "object",
        "properties": {
          "adGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeleteAdRequest": {
        "type": "object",
        "properties": {
          "adIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeleteCampaignRequest": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeleteTargetRequest": {
        "type": "object",
        "properties": {
          "targetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeliveryProfile": {
        "type": "string",
        "description": "| DeliveryProfile | Description |\n| --- | --- |\n| `EVEN` | Even pacing spends your budget consistently across the length of the campaign. |\n| `PACE_AHEAD` | Pace Ahead can deliver up to 25% more than the daily Even pace targets. |\n| `ASAP` | Makes your entire budget available to spend immediately. This is ideal for ad groups with limited inventory or when there's no requirement to spend throughout the length of the campaign.Warning: Selecting ASAP may result in your entire budget being spent immediately. |",
        "enum": [
          "EVEN",
          "PACE_AHEAD",
          "ASAP"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeliveryReason": {
        "type": "string",
        "description": "| DeliveryReason | Description |\n| --- | --- |\n| `AD_ARCHIVED` |  |\n| `AD_CREATION_FAILED` |  |\n| `AD_CREATION_IN_PROGRESS` |  |\n| `AD_CREATIVES_NOT_RUNNING` |  |\n| `AD_GROUP_ARCHIVED` |  |\n| `AD_GROUP_ENDED` |  |\n| `AD_GROUP_INCOMPLETE` |  |\n| `AD_GROUP_LOW_BID` |  |\n| `AD_GROUP_PAUSED` |  |\n| `AD_GROUP_PENDING_REVIEW` |  |\n| `AD_GROUP_PENDING_START_DATE` |  |\n| `AD_GROUP_POLICING_PENDING_REVIEW` |  |\n| `AD_GROUP_POLICING_SUSPENDED` |  |\n| `AD_GROUP_REJECTED` |  |\n| `AD_GROUPS_NOT_RUNNING` |  |\n| `AD_INELIGIBLE` |  |\n| `AD_MISSING_DECORATION` |  |\n| `AD_MISSING_IMAGE` |  |\n| `AD_NOT_ASSOCIATED_WITH_AD_GROUP` |  |\n| `AD_NOT_APPROVED_FOR_ALL_AD_GROUPS` |  |\n| `AD_NOT_DELIVERING` |  |\n| `AD_PAUSED` |  |\n| `AD_POLICING_PENDING_REVIEW` |  |\n| `AD_POLICING_SUSPENDED` |  |\n| `ADVERTISER_ARCHIVED` |  |\n| `ADVERTISER_INELIGIBLE` |  |\n| `ADVERTISER_OUT_OF_BUDGET` | Indicates that an advertiser is out of budget for Sponsored Products campaigns for sellers. |\n| `ADVERTISER_OUT_OF_PREPAY_BALANCE` | Indicates that a prepay advertiser is out of prepay balance for all Sponsored Ads campaigns. |\n| `ADVERTISER_PAUSED` |  |\n| `ADVERTISER_PAYMENT_FAILURE` |  |\n| `ADVERTISER_POLICING_PENDING_REVIEW` |  |\n| `ADVERTISER_POLICING_SUSPENDED` |  |\n| `BRAND_INELIGIBLE` |  |\n| `CAMPAIGN_ARCHIVED` |  |\n| `CAMPAIGN_END_DATE_REACHED` |  |\n| `CAMPAIGN_INCOMPLETE` |  |\n| `CAMPAIGN_OUT_OF_BUDGET` |  |\n| `CAMPAIGN_PAUSED` |  |\n| `CAMPAIGN_PENDING_REVIEW` |  |\n| `CAMPAIGN_PENDING_START_DATE` |  |\n| `CAMPAIGN_POLICING_SUSPENDED` |  |\n| `CAMPAIGN_REJECTED` |  |\n| `CREATIVE_MISSING_ASSET` |  |\n| `CREATIVE_PENDING_REVIEW` |  |\n| `CREATIVE_REJECTED` |  |\n| `LANDING_PAGE_INELIGIBLE` |  |\n| `LANDING_PAGE_NOT_AVAILABLE` |  |\n| `MODERATION_ADULT_NOVELTY_POLICY_VIOLATION` |  |\n| `MODERATION_ADULT_PRODUCT_POLICY_VIOLATION` |  |\n| `MODERATION_ADULT_SOFTLINES_POLICY_VIOLATION` |  |\n| `MODERATION_CLAIM_WEIGHTLOSS_POLICY_VIOLATION` |  |\n| `MODERATION_CONTENT_NUDITY_POLICY_VIOLATION` |  |\n| `MODERATION_CONTENT_PROVOCATIVE_POLICY_VIOLATION` |  |\n| `MODERATION_CONTENT_SMOKING_POLICY_VIOLATION` |  |\n| `MODERATION_CRITICAL_EVENTS_POLICY_VIOLATION` |  |\n| `MODERATION_ERROR_404` |  |\n| `MODERATION_GRAPHICAL_SEXUAL_IMAGES_POLICY_VIOLATION` |  |\n| `MODERATION_HFSS_PRODUCT_POLICY_VIOLATION` |  |\n| `MODERATION_LANGUAGE_OFFENSIVE_POLICY_VIOLATION` |  |\n| `MODERATION_NOT_COMPLIANT_TO_AD_POLICY` |  |\n| `MODERATION_SMOKING_RELATED_POLICY_VIOLATION` |  |\n| `NO_INVENTORY` |  |\n| `NO_PURCHASABLE_OFFER` |  |\n| `NOT_BUYABLE` |  |\n| `NOT_IN_BUYBOX` |  |\n| `NOT_IN_POLICY` |  |\n| `OTHER` |  |\n| `OUT_OF_REWARD_BUDGET` |  |\n| `OUT_OF_STOCK` |  |\n| `PIR_RULE_EXCLUDED` |  |\n| `PORTFOLIO_ARCHIVED` |  |\n| `PORTFOLIO_END_DATE_REACHED` |  |\n| `PORTFOLIO_OUT_OF_BUDGET` |  |\n| `PORTFOLIO_PAUSED` |  |\n| `PORTFOLIO_PENDING_START_DATE` |  |\n| `SECURITY_SCAN_PENDING_REVIEW` |  |\n| `SECURITY_SCAN_REJECTED` |  |\n| `SPEND_LIMIT_EXCEEDED` |  |\n| `STATUS_UNAVAILABLE` |  |\n| `TARGET_ARCHIVED` |  |\n| `TARGET_BLOCKED` |  |\n| `TARGET_PAUSED` |  |\n| `TARGET_POLICING_SUSPENDED` |  |",
        "enum": [
          "AD_ARCHIVED",
          "AD_CREATION_FAILED",
          "AD_CREATION_IN_PROGRESS",
          "AD_CREATIVES_NOT_RUNNING",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_ENDED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_LOW_BID",
          "AD_GROUP_PAUSED",
          "AD_GROUP_PENDING_REVIEW",
          "AD_GROUP_PENDING_START_DATE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_SUSPENDED",
          "AD_GROUP_REJECTED",
          "AD_GROUPS_NOT_RUNNING",
          "AD_INELIGIBLE",
          "AD_MISSING_DECORATION",
          "AD_MISSING_IMAGE",
          "AD_NOT_ASSOCIATED_WITH_AD_GROUP",
          "AD_NOT_APPROVED_FOR_ALL_AD_GROUPS",
          "AD_NOT_DELIVERING",
          "AD_PAUSED",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_INELIGIBLE",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_OUT_OF_PREPAY_BALANCE",
          "ADVERTISER_PAUSED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_POLICING_SUSPENDED",
          "BRAND_INELIGIBLE",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_END_DATE_REACHED",
          "CAMPAIGN_INCOMPLETE",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_PENDING_REVIEW",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_POLICING_SUSPENDED",
          "CAMPAIGN_REJECTED",
          "CREATIVE_MISSING_ASSET",
          "CREATIVE_PENDING_REVIEW",
          "CREATIVE_REJECTED",
          "LANDING_PAGE_INELIGIBLE",
          "LANDING_PAGE_NOT_AVAILABLE",
          "MODERATION_ADULT_NOVELTY_POLICY_VIOLATION",
          "MODERATION_ADULT_PRODUCT_POLICY_VIOLATION",
          "MODERATION_ADULT_SOFTLINES_POLICY_VIOLATION",
          "MODERATION_CLAIM_WEIGHTLOSS_POLICY_VIOLATION",
          "MODERATION_CONTENT_NUDITY_POLICY_VIOLATION",
          "MODERATION_CONTENT_PROVOCATIVE_POLICY_VIOLATION",
          "MODERATION_CONTENT_SMOKING_POLICY_VIOLATION",
          "MODERATION_CRITICAL_EVENTS_POLICY_VIOLATION",
          "MODERATION_ERROR_404",
          "MODERATION_GRAPHICAL_SEXUAL_IMAGES_POLICY_VIOLATION",
          "MODERATION_HFSS_PRODUCT_POLICY_VIOLATION",
          "MODERATION_LANGUAGE_OFFENSIVE_POLICY_VIOLATION",
          "MODERATION_NOT_COMPLIANT_TO_AD_POLICY",
          "MODERATION_SMOKING_RELATED_POLICY_VIOLATION",
          "NO_INVENTORY",
          "NO_PURCHASABLE_OFFER",
          "NOT_BUYABLE",
          "NOT_IN_BUYBOX",
          "NOT_IN_POLICY",
          "OTHER",
          "OUT_OF_REWARD_BUDGET",
          "OUT_OF_STOCK",
          "PIR_RULE_EXCLUDED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_END_DATE_REACHED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_PENDING_START_DATE",
          "SECURITY_SCAN_PENDING_REVIEW",
          "SECURITY_SCAN_REJECTED",
          "SPEND_LIMIT_EXCEEDED",
          "STATUS_UNAVAILABLE",
          "TARGET_ARCHIVED",
          "TARGET_BLOCKED",
          "TARGET_PAUSED",
          "TARGET_POLICING_SUSPENDED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeliveryStatus": {
        "type": "string",
        "description": "| DeliveryStatus | Description |\n| --- | --- |\n| `DELIVERING` | Represents the resource is delivering. For global, DELIVERING status indicates that the resource is delivering in all marketplaces |\n| `NOT_DELIVERING` | Represents the resource is not delivering. For global, NOT_DELIVERING status indicates that the resource is NOT delivering in all marketplaces |\n| `UNAVAILABLE` | Represents unavailable resource status. For global, UNAVAILABLE status indicates that the status is unavailable in all marketplaces |\n| `LIMITED` | Represents partial delivery status, applicable to global resources that have different delivery status across marketplaces |",
        "enum": [
          "DELIVERING",
          "NOT_DELIVERING",
          "UNAVAILABLE",
          "LIMITED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeviceOrientation": {
        "type": "string",
        "description": "| DeviceOrientation | Description |\n| --- | --- |\n| `PORTRAIT` |  |\n| `LANDSCAPE` |  |",
        "enum": [
          "PORTRAIT",
          "LANDSCAPE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeviceTarget": {
        "type": "object",
        "description": "Target based on user device.",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "mobileEnvironment": {
            "$ref": "#/components/schemas/MobileEnvironment"
          },
          "mobileDevice": {
            "$ref": "#/components/schemas/MobileDevice"
          },
          "deviceOrientation": {
            "$ref": "#/components/schemas/DeviceOrientation"
          },
          "mobileOs": {
            "$ref": "#/components/schemas/MobileOs"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DeviceType": {
        "type": "string",
        "description": "| DeviceType | Description |\n| --- | --- |\n| `DESKTOP` |  |\n| `MOBILE` |  |\n| `CONNECTED_TV` |  |\n| `CONNECTED_DEVICE` | Connected TV, smart speakers. Used for audio AdGroup type. |",
        "enum": [
          "DESKTOP",
          "MOBILE",
          "CONNECTED_TV",
          "CONNECTED_DEVICE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DisplayCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "clickToUrlDisplayCallToActionSettings",
            "properties": {
              "clickToUrlDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/ClickToUrlDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlDisplayCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToAppDisplayCallToActionSettings",
            "properties": {
              "clickToAppDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/ClickToAppDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToAppDisplayCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DisplayCreative": {
        "type": "object",
        "properties": {
          "standardDisplaySettings": {
            "$ref": "#/components/schemas/StandardDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainFileTarget": {
        "type": "object",
        "description": "Targets domains based on list provided via file upload.",
        "properties": {
          "domainFileId": {
            "type": "string",
            "description": "The ID associated to the domain file to target. Read-only and created based on the inputted domainFileKey."
          },
          "domainFileKey": {
            "type": "string",
            "description": "The URL of the domain to target."
          },
          "domainFileName": {
            "type": "string",
            "description": "The name of the file."
          },
          "domainFileUrl": {
            "type": "string",
            "description": "The file containing the domains uploaded. It expires in one hour."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainListTarget": {
        "type": "object",
        "description": "Targets domains based on an existing domain list.",
        "properties": {
          "domainListId": {
            "type": "string",
            "description": "The ID of the domain list to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainNameTarget": {
        "type": "object",
        "description": "Targets domains based on URL.",
        "properties": {
          "domainName": {
            "type": "string",
            "description": "The URL of the domain to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainTarget": {
        "type": "object",
        "description": "Target based on a specified domain.",
        "properties": {
          "domainTargetType": {
            "$ref": "#/components/schemas/DomainTargetTypes"
          },
          "domainTargetDetails": {
            "$ref": "#/components/schemas/DomainTargetDetails"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "domainListTarget",
            "properties": {
              "domainListTarget": {
                "$ref": "#/components/schemas/DomainListTarget"
              }
            },
            "required": [
              "domainListTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainNameTarget",
            "properties": {
              "domainNameTarget": {
                "$ref": "#/components/schemas/DomainNameTarget"
              }
            },
            "required": [
              "domainNameTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainFileTarget",
            "properties": {
              "domainFileTarget": {
                "$ref": "#/components/schemas/DomainFileTarget"
              }
            },
            "required": [
              "domainFileTarget"
            ]
          },
          {
            "type": "object",
            "title": "advertiserDomainList",
            "properties": {
              "advertiserDomainList": {
                "$ref": "#/components/schemas/AdvertiserDomainList"
              }
            },
            "required": [
              "advertiserDomainList"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DomainTargetTypes": {
        "type": "string",
        "description": "| DomainTargetTypes | Description |\n| --- | --- |\n| `DOMAIN_LIST` |  |\n| `DOMAIN_NAME` |  |\n| `DOMAIN_FILE` |  |\n| `ADVERTISER_DOMAIN_LIST` |  |",
        "enum": [
          "DOMAIN_LIST",
          "DOMAIN_NAME",
          "DOMAIN_FILE",
          "ADVERTISER_DOMAIN_LIST"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyAuthenticAttention": {
        "type": "object",
        "properties": {
          "universalAttention": {
            "type": "boolean",
            "description": "One omni-channel segment that is informed by data from all DV campaigns to help avoid serving ads on generally poor performing apps and domains."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyAuthenticBrandSafety": {
        "type": "object",
        "properties": {
          "doubleVerifySegmentId": {
            "type": "string",
            "pattern": "^51[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyBrandSafety": {
        "type": "object",
        "properties": {
          "appStarRating": {
            "$ref": "#/components/schemas/DVBrandSafetyAppStarRatingType"
          },
          "contentCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoryType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of content categories to exclude from targeting."
          },
          "appAgeRating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyAppAgeRatingType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of app age ratings to be used for excluding apps. For example, TEENS_12_PLUS will only exclude apps with content rated for everyone ages 12 and over. UNKNOWN will exclude apps with content unrated or unknown to Double Verify."
          },
          "excludeAppsWithInsufficientRating": {
            "type": "boolean",
            "description": "Set to true to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime)."
          },
          "contentCategoriesWithRisk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoriesWithRiskMap"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "unknownContent": {
            "type": "boolean",
            "description": "Set to true to exclude unknown content."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyCustomContextualSegmentId": {
        "type": "object",
        "properties": {
          "doubleVerifySegmentId": {
            "type": "string",
            "pattern": "^52[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeImpressions": {
            "type": "boolean",
            "description": "Set to true to exclude impressions delivered to devices identified to be fraudulent or invalid."
          },
          "excludeAppsAndSites": {
            "$ref": "#/components/schemas/ExcludeAppsAndSitesType"
          },
          "blockAppAndSites": {
            "type": "boolean",
            "description": "Set to true to block applications and sites with insufficient historical fraud and invalid traffic statistics. This will not be applicable if ALLOW_ALL is chosen."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyStandardDisplayBrandSafety": {
        "type": "object",
        "properties": {
          "contentCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoryType"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "A list of content categories to exclude from targeting."
          },
          "contentCategoriesWithRisk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DVBrandSafetyContentCategoriesWithRiskMap"
            },
            "maxItems": 50,
            "minItems": 0
          },
          "unknownContent": {
            "type": "boolean",
            "description": "Set to true to exclude unknown content."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DoubleVerifyViewability": {
        "type": "object",
        "properties": {
          "averageCompletionAndFullyViewableRateTargeting": {
            "$ref": "#/components/schemas/AverageCompletionAndFullyViewableRateTargetingType"
          },
          "brandExposureViewabilityTargeting": {
            "$ref": "#/components/schemas/BrandExposureViewabilityTargetingType"
          },
          "mrcViewabilityTargeting": {
            "$ref": "#/components/schemas/MrcViewabilityTargetingType"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Set to true to include impressions where impressions can't be measured."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DspContentRating": {
        "type": "object",
        "properties": {
          "dspContentRating": {
            "$ref": "#/components/schemas/DspContentRatingEnum"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DspContentRatingEnum": {
        "type": "string",
        "description": "| DspContentRatingEnum | Description |\n| --- | --- |\n| `SUITABLE_FOR_ALL_AUDIENCES` | Equivalent to content that is rated G (film), TV-Y (TV), TV-Y7 (TV), TV-G (TV), EC (game), or E (game). |\n| `SUITABLE_FOR_MOST_AUDIENCES_WITH_PARENTAL_GUIDANCE` | Equivalent to content that is rated PG (film), TV-PG (TV), or E-10+ (game). |\n| `SUITABLE_FOR_TEEN_AND_OLDER_AUDIENCES` | Equivalent to content that is rated PG-13 (film), TV-14 (TV), or T (game). |\n| `SUITABLE_FOR_MATURE_AUDIENCES` | Ages 17+. Equivalent to content that is rated R (film), TV-MA (TV), or M (game). |\n| `SUITABLE_FOR_ADULTS` | Ages 18+. Equivalent to content that is rated NC-17 (film). |\n| `RATING_NOT_AVAILABLE` | Content where rating isn't available from the publisher. |",
        "enum": [
          "SUITABLE_FOR_ALL_AUDIENCES",
          "SUITABLE_FOR_MOST_AUDIENCES_WITH_PARENTAL_GUIDANCE",
          "SUITABLE_FOR_TEEN_AND_OLDER_AUDIENCES",
          "SUITABLE_FOR_MATURE_AUDIENCES",
          "SUITABLE_FOR_ADULTS",
          "RATING_NOT_AVAILABLE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "DynamicCollectionSettings": {
        "type": "object",
        "description": "A collection of multi-format creative assets intended for use across a group of products.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvertisedProducts"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "The products to be used in the ad."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "fieldLocation": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ErrorCode": {
        "type": "string",
        "description": "| ErrorCode | Description |\n| --- | --- |\n| `INTERNAL_ERROR` | The server encountered an unexpected condition that prevented it from fulfilling the request. |\n| `UNAUTHORIZED` | The request lacks the necessary credentials. |\n| `FORBIDDEN` | The caller is not authorized to make the given request. |\n| `TOO_MANY_REQUESTS` | There have been too many requests, please slow down your call rate. |\n| `CONTENT_TOO_LARGE` | The request is too large. Consider splitting it into multiple requests. |\n| `NOT_FOUND` | The requested resource does not exist. |\n| `BAD_REQUEST` | The request is not valid considering the documented schema. |\n| `CONFLICT` | Operation could not be completed due to a conflict. Please retry your request. |\n| `FEATURE_NOT_AVAILABLE` | The requested feature is not available. |\n| `DUPLICATE_RESOURCE_ID_FOUND` | Multiple resources share the same ID. Remove the duplicate ID. |\n| `DUPLICATE_FIELD_VALUE_FOUND` | Multiple resources share the non-unique field values. Remove the non-unique field value. |\n| `TOTAL_RESOURCE_LIMIT_EXCEEDED` | Too many resources. Remove resources and try again. |\n| `ACTIVE_RESOURCE_LIMIT_EXCEEDED` | Too many live resources. Remove resources and try again. |\n| `ARCHIVED_RESOURCE_CANNOT_EDIT` | Archived resources cannot be edited. |\n| `ARCHIVED_PARENT_CANNOT_CREATE` | New resources cannot be created within an archived parent. |\n| `ARCHIVED_PARENT_CANNOT_EDIT` | Resources within an archived parent cannot be edited. |\n| `ACTION_NOT_SUPPORTED` | The request is not supported. |\n| `FIELD_VALUE_CANNOT_EDIT` | Field value cannot be edited. |\n| `AUTOCREATED_ENTITY_CANNOT_EDIT` | Autocreated entities cannot be edited. To complete this action, create the resource manually. |\n| `RESOURCE_ID_NOT_FOUND` | Resource ID not found. Try again with valid ID. |\n| `FIELD_VALUE_NOT_FOUND` | Resource specified in the field value not found. Try again with valid value. |\n| `FIELD_VALUE_NOT_UNIQUE` | Resource field value conflicts with existing resource. Try again with an unique field value. |\n| `UNSUPPORTED_MARKETPLACE` | Marketplace not supported. Try again with a supported marketplace. |\n| `PAYMENT_ISSUE` | Payment failed. |\n| `PRODUCT_INELIGIBLE` | Product is not eligible for advertising. Try again with a valid product. |\n| `RESOURCE_DOES_NOT_BELONG_TO_PARENT` | Resource does not belong to the specified parent. Try again with a valid parent ID. |\n| `RESOURCE_IS_IN_TERMINAL_STATE` | Resource is in terminal state. |\n| `RESOURCE_IS_NULL` | Update the request with the required information for this resource. |\n| `RESOURCE_IS_EMPTY` | Update the request with the required information for this resource. |\n| `FIELD_VALUE_IS_NULL` | Update the request with the required information for this resource. |\n| `FIELD_VALUE_IS_EMPTY` | Update the request with the required information for this resource. |\n| `FIELD_VALUE_IS_INVALID` | Update the request with the required information for this resource. |\n| `FIELD_VALUE_CONTAINS_INVALID_CHARACTERS` | Remove the invalid characters and try again. |\n| `FIELD_VALUE_MISMATCH` | Mismatch among resource field values. |\n| `FIELD_VALUE_IS_OUT_OF_RANGE` | Update the value to be within the required range. |\n| `FIELD_VALUE_IS_ABOVE_MAXIMUM_LIMIT` | Update the value to be within the required range. |\n| `FIELD_VALUE_IS_BELOW_MINIMUM_LIMIT` | Update the value to be within the required range. |\n| `FIELD_SIZE_IS_ABOVE_MAXIMUM_LIMIT` | Update the value to be within the required range. |\n| `FIELD_SIZE_IS_BELOW_MINIMUM_LIMIT` | Update the value to be within the required range. |\n| `FIELD_SIZE_IS_OUT_OF_RANGE` | Update the value to be within the required range. |\n| `FIELD_VALUE_CONTAINS_BLOCKLISTED_WORDS` | Update the request with the required information for this resource. |\n| `FIELD_VALUE_MUST_BE_EMPTY_OR_NULL` | Update the request with the required information for this resource. |\n| `DATE_CANNOT_BE_IN_PAST` | Update the date to be in the future. |\n| `DATE_CANNOT_BE_NULL` | Update the date. |\n| `DATE_TOO_SOON` | Update the date to be further in the future. |\n| `DURATION_TOO_SHORT` | Update the length to be within the required range. |\n| `FEATURE_DISCONTINUED` | Feature has been discontinued. |",
        "enum": [
          "INTERNAL_ERROR",
          "UNAUTHORIZED",
          "FORBIDDEN",
          "TOO_MANY_REQUESTS",
          "CONTENT_TOO_LARGE",
          "NOT_FOUND",
          "BAD_REQUEST",
          "CONFLICT",
          "FEATURE_NOT_AVAILABLE",
          "DUPLICATE_RESOURCE_ID_FOUND",
          "DUPLICATE_FIELD_VALUE_FOUND",
          "TOTAL_RESOURCE_LIMIT_EXCEEDED",
          "ACTIVE_RESOURCE_LIMIT_EXCEEDED",
          "ARCHIVED_RESOURCE_CANNOT_EDIT",
          "ARCHIVED_PARENT_CANNOT_CREATE",
          "ARCHIVED_PARENT_CANNOT_EDIT",
          "ACTION_NOT_SUPPORTED",
          "FIELD_VALUE_CANNOT_EDIT",
          "AUTOCREATED_ENTITY_CANNOT_EDIT",
          "RESOURCE_ID_NOT_FOUND",
          "FIELD_VALUE_NOT_FOUND",
          "FIELD_VALUE_NOT_UNIQUE",
          "UNSUPPORTED_MARKETPLACE",
          "PAYMENT_ISSUE",
          "PRODUCT_INELIGIBLE",
          "RESOURCE_DOES_NOT_BELONG_TO_PARENT",
          "RESOURCE_IS_IN_TERMINAL_STATE",
          "RESOURCE_IS_NULL",
          "RESOURCE_IS_EMPTY",
          "FIELD_VALUE_IS_NULL",
          "FIELD_VALUE_IS_EMPTY",
          "FIELD_VALUE_IS_INVALID",
          "FIELD_VALUE_CONTAINS_INVALID_CHARACTERS",
          "FIELD_VALUE_MISMATCH",
          "FIELD_VALUE_IS_OUT_OF_RANGE",
          "FIELD_VALUE_IS_ABOVE_MAXIMUM_LIMIT",
          "FIELD_VALUE_IS_BELOW_MINIMUM_LIMIT",
          "FIELD_SIZE_IS_ABOVE_MAXIMUM_LIMIT",
          "FIELD_SIZE_IS_BELOW_MINIMUM_LIMIT",
          "FIELD_SIZE_IS_OUT_OF_RANGE",
          "FIELD_VALUE_CONTAINS_BLOCKLISTED_WORDS",
          "FIELD_VALUE_MUST_BE_EMPTY_OR_NULL",
          "DATE_CANNOT_BE_IN_PAST",
          "DATE_CANNOT_BE_NULL",
          "DATE_TOO_SOON",
          "DURATION_TOO_SHORT",
          "FEATURE_DISCONTINUED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ErrorsIndex": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "required": [
          "errors",
          "index"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ExcludeAppsAndSitesType": {
        "type": "string",
        "description": "| ExcludeAppsAndSitesType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_100` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_50` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_25` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_10` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_08` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_06` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_04` |  |\n| `FRAUD_TRAFFIC_LEVEL_GTE_02` |  |",
        "enum": [
          "ALLOW_ALL",
          "FRAUD_TRAFFIC_LEVEL_GTE_100",
          "FRAUD_TRAFFIC_LEVEL_GTE_50",
          "FRAUD_TRAFFIC_LEVEL_GTE_25",
          "FRAUD_TRAFFIC_LEVEL_GTE_10",
          "FRAUD_TRAFFIC_LEVEL_GTE_08",
          "FRAUD_TRAFFIC_LEVEL_GTE_06",
          "FRAUD_TRAFFIC_LEVEL_GTE_04",
          "FRAUD_TRAFFIC_LEVEL_GTE_02"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Fee": {
        "type": "object",
        "properties": {
          "feeType": {
            "$ref": "#/components/schemas/FeeType"
          },
          "addToBudgetSpentAmount": {
            "type": "boolean",
            "description": "Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports."
          },
          "thirdPartyProvider": {
            "$ref": "#/components/schemas/FeesThirdPartyProvider"
          },
          "feeValueType": {
            "$ref": "#/components/schemas/FeeValueType"
          },
          "feeValue": {
            "type": "number",
            "description": "The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FeeType": {
        "type": "string",
        "description": "| FeeType | Description |\n| --- | --- |\n| `AMAZON_DSP` | A service fee for using Amazon DSP and subtracted from the budget. This fee is applied as a percent of supply cost. |\n| `AMAZON_AUDIENCE` | CPM fee for using Amazon audiences. |\n| `THIRD_PARTY_AUDIENCE` | CPM fee for using a third party audience. |\n| `OMNICHANNEL_METRICS` | Fee for using Amazon Omnichannel Metrics. |\n| `THIRD_PARTY_APPLIED` | User added CPM fee for using third-party data to track CPM costs. This fee is applied as a percent of supply cost. |\n| `THIRD_PARTY_TARGETING` | CPM fee for using targeting provided by a third-party data provider. |\n| `AGENCY` | A service fee that is subtracted from the campaign budget as a percent of budget. |\n| `MANAGED_SERVICE_FEE` | The percentage-based fee applied to the Supply Cost for Amazon programmatic managed service. |",
        "enum": [
          "AMAZON_DSP",
          "AMAZON_AUDIENCE",
          "THIRD_PARTY_AUDIENCE",
          "OMNICHANNEL_METRICS",
          "THIRD_PARTY_APPLIED",
          "THIRD_PARTY_TARGETING",
          "AGENCY",
          "MANAGED_SERVICE_FEE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FeeValueType": {
        "type": "string",
        "description": "| FeeValueType | Description |\n| --- | --- |\n| `FIXED_CPM` | Charged based on a fixed CPM. The currency depends on the feeType. |\n| `PERCENTAGE_OF_SUPPLY_COST` | Charged as a percent of supply (media) cost. Ranges from 0 to 1 where 0.15 represents 15%. |\n| `PERCENTAGE_OF_BUDGET` | Subtracted from the campaign budget as a percent of budget |",
        "enum": [
          "FIXED_CPM",
          "PERCENTAGE_OF_SUPPLY_COST",
          "PERCENTAGE_OF_BUDGET"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FeesThirdPartyProvider": {
        "type": "string",
        "description": "| FeesThirdPartyProvider | Description |\n| --- | --- |\n| `INTEGRAL_AD_SCIENCE` |  |\n| `DOUBLE_VERIFY` |  |\n| `DOUBLE_CLICK_CAMPAIGN_MANAGER` |  |\n| `COM_SCORE` |  |\n| `CPM_1` |  |\n| `CPM_2` |  |\n| `CPM_3` |  |",
        "enum": [
          "INTEGRAL_AD_SCIENCE",
          "DOUBLE_VERIFY",
          "DOUBLE_CLICK_CAMPAIGN_MANAGER",
          "COM_SCORE",
          "CPM_1",
          "CPM_2",
          "CPM_3"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FoldPosition": {
        "type": "string",
        "description": "| FoldPosition | Description |\n| --- | --- |\n| `ABOVE_THE_FOLD` |  |\n| `BELOW_THE_FOLD` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "ABOVE_THE_FOLD",
          "BELOW_THE_FOLD",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FoldPositionTarget": {
        "type": "object",
        "description": "Targets ads in the specified fold position",
        "properties": {
          "foldPosition": {
            "$ref": "#/components/schemas/FoldPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ForbiddenResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FormatProperties": {
        "type": "object",
        "properties": {
          "top": {
            "type": "integer",
            "description": "The number of pixels from the top of the image where the crop should begin.",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "description": "The number of pixels from the left of the image where the crop should begin.",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "The width (in pixels) of the cropped image.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height (in pixels) of the cropped image.",
            "format": "int32"
          },
          "applyBorder": {
            "type": "boolean",
            "description": "Apply a boarder to the image to fit rules for some supplies."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Frequency": {
        "type": "object",
        "properties": {
          "timeUnit": {
            "$ref": "#/components/schemas/TimeUnit"
          },
          "timeCount": {
            "type": "integer",
            "maximum": 60,
            "minimum": 1,
            "description": "The value associated with the time and unit of time for this frequency cap.",
            "format": "int32"
          },
          "eventMaxCount": {
            "type": "integer",
            "maximum": 99000,
            "minimum": 1,
            "description": "The maximum number of times an EventType is served per user.",
            "format": "int32"
          },
          "frequencyTargetingSetting": {
            "$ref": "#/components/schemas/FrequencyTargetingSetting"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "FrequencyTargetingSetting": {
        "type": "string",
        "description": "| FrequencyTargetingSetting | Description |\n| --- | --- |\n| `USER` | Control frequency an ad will be selected to a person. |\n| `HOUSEHOLD` | Control frequency an ad will be selected across people within the same household. |",
        "enum": [
          "USER",
          "HOUSEHOLD"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "GatewayTimeoutResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "GlobalStoreSettings": {
        "type": "object",
        "properties": {
          "catalogSourceMarketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Goal": {
        "type": "string",
        "description": "| Goal | Description |\n| --- | --- |\n| `AWARENESS` | Indicates a goal of driving awareness. |\n| `CONSIDERATION` | Indicates a goal of driving consideration. |\n| `CONVERSIONS` | Indicates a goal of driving conversions. |",
        "enum": [
          "AWARENESS",
          "CONSIDERATION",
          "CONVERSIONS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "GoalSettings": {
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/Goal"
          },
          "kpi": {
            "$ref": "#/components/schemas/KPI"
          },
          "kpiValue": {
            "type": "number",
            "description": "The value of the KPI that the campaign is working to optimize.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IASBrandSafetyLevelType": {
        "type": "string",
        "description": "The IAS brand safety risk level.\n| IASBrandSafetyLevelType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `BRAND_SAFETY_EXCLUDE_HIGH_RISK` |  |\n| `BRAND_SAFETY_EXCLUDE_HIGH_AND_MODERATE_RISK` |  |",
        "enum": [
          "ALLOW_ALL",
          "BRAND_SAFETY_EXCLUDE_HIGH_RISK",
          "BRAND_SAFETY_EXCLUDE_HIGH_AND_MODERATE_RISK"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IASFraudInvalidTrafficType": {
        "type": "string",
        "description": "The type of fraud invalid traffic.\n| IASFraudInvalidTrafficType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_RISK` |  |\n| `FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_MODERATE_RISK` |  |",
        "enum": [
          "ALLOW_ALL",
          "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_RISK",
          "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_MODERATE_RISK"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IASViewabilityStandardType": {
        "type": "string",
        "description": "The viewability standard.\n| IASViewabilityStandardType | Description |\n| --- | --- |\n| `NONE` |  |\n| `MRC` |  |\n| `GROUPM` |  |\n| `PUBLICIS` |  |",
        "enum": [
          "NONE",
          "MRC",
          "GROUPM",
          "PUBLICIS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Image": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the image asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the image asset."
          },
          "formatProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormatProperties"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The cropping and positioning properties associated with the asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "InGroupOperator": {
        "type": "string",
        "description": "| InGroupOperator | Description |\n| --- | --- |\n| `ANY` |  |\n| `ALL` |  |",
        "enum": [
          "ANY",
          "ALL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceBrandSafety": {
        "type": "object",
        "properties": {
          "iasBrandSafetyOffensiveLanguage": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "excludeContent": {
            "type": "boolean",
            "description": "Set to true to exclude content that Integral Ad Science is not able to rate."
          },
          "iasBrandSafetyAlcohol": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyIllegalDownloads": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyHateSpeech": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyIllegalDrugs": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyAdult": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyViolence": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          },
          "iasBrandSafetyGambling": {
            "$ref": "#/components/schemas/IASBrandSafetyLevelType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceContextualAvoidance": {
        "type": "object",
        "properties": {
          "avoidanceSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual avoidance segment"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceContextualTargeting": {
        "type": "object",
        "properties": {
          "topicalSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual topical targeting segment"
          },
          "verticalSegments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 200,
            "minItems": 0,
            "description": "The unique identifier of the IAS contextual vertical targeting segment"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "targetSetting": {
            "$ref": "#/components/schemas/IASFraudInvalidTrafficType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceQualitySync": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "string",
            "pattern": "^4[0-9]{6}$"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "IntegralAdScienceViewability": {
        "type": "object",
        "description": "The IAS viewability standard.",
        "properties": {
          "standard": {
            "$ref": "#/components/schemas/IASViewabilityStandardType"
          },
          "viewabilityTargeting": {
            "$ref": "#/components/schemas/ViewabilityTierType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "InternalServerErrorResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "InventorySourceTarget": {
        "type": "object",
        "description": "Target based on the source of the inventory.",
        "properties": {
          "inventorySourceType": {
            "$ref": "#/components/schemas/InventorySourceType"
          },
          "inventorySourceId": {
            "$ref": "#/components/schemas/MarketplaceStringValue"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "InventorySourceType": {
        "type": "string",
        "description": "| InventorySourceType | Description |\n| --- | --- |\n| `AMAZON` |  |\n| `APD` |  |\n| `THIRD_PARTY_EXCHANGE` |  |\n| `DEAL` |  |\n| `INVENTORY_GROUP` |  |",
        "enum": [
          "AMAZON",
          "APD",
          "THIRD_PARTY_EXCHANGE",
          "DEAL",
          "INVENTORY_GROUP"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "InventoryType": {
        "type": "string",
        "description": "| InventoryType | Description |\n| --- | --- |\n| `STANDARD_DISPLAY` |  |\n| `AMAZON_MOBILE_DISPLAY` |  |\n| `AAP_MOBILE_APP` |  |\n| `DISPLAY` |  |\n| `VIDEO` |  |\n| `STREAMING_TV` |  |\n| `ONLINE_VIDEO` |  |",
        "enum": [
          "STANDARD_DISPLAY",
          "AMAZON_MOBILE_DISPLAY",
          "AAP_MOBILE_APP",
          "DISPLAY",
          "VIDEO",
          "STREAMING_TV",
          "ONLINE_VIDEO"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "KPI": {
        "type": "string",
        "description": "| KPI | Description |\n| --- | --- |\n| `TOP_OF_SEARCH_IMPRESSION_SHARE` | Indicates a goal of maximizing impression for top search placement. |\n| `NEW_TO_BRAND_PURCHASES` | Indicates a goal of maximizing new to brand purchases. |\n| `CLICKS` | Indicates a goal of driving clicks. |\n| `CLICK_THROUGH_RATE` | Indicates a goal of driving clickthrough rate. |\n| `COST_PER_ACTION` | Indicates a goal of driving improved cost per action. |\n| `COST_PER_CLICK` | Indicates a goal of driving improved cost per click. |\n| `COST_PER_DETAIL_PAGE_VIEW` | Indicates a goal of driving improved cost per detail page view. |\n| `COST_PER_FIRST_APP_OPEN` | Indicates a goal of improved cost per first app open. |\n| `COST_PER_INSTALL` | Indicates a goal of driving improved cost per app install. |\n| `COST_PER_SIGN_UP` | Indicates a goal of driving improved cost per sign up. |\n| `COST_PER_VIDEO_COMPLETION` | Indicates a goal of driving improved cost per video completion. |\n| `DETAIL_PAGE_VIEW_RATE` | Indicates a goal of driving improved detail page view rate. |\n| `COMBINED_RETURN_ON_AD_SPEND` | Indicates a goal of driving improved combined return on ad spend . |\n| `RETURN_ON_AD_SPEND` | Indicates a goal of driving improved return of ad spend (ROAS). |\n| `TOTAL_RETURN_ON_AD_SPEND` | Indicates a goal of driving improved total return of ad spend. |\n| `REACH` | Indicates a goal of driving improved reach. |\n| `VIDEO_COMPLETION_RATE` | Indicates a goal of driving improved video completion rate. |\n| `FREQUENCY_AVERAGE` | Indicates a goal of driving to a target frequency. |",
        "enum": [
          "TOP_OF_SEARCH_IMPRESSION_SHARE",
          "NEW_TO_BRAND_PURCHASES",
          "CLICKS",
          "CLICK_THROUGH_RATE",
          "COST_PER_ACTION",
          "COST_PER_CLICK",
          "COST_PER_DETAIL_PAGE_VIEW",
          "COST_PER_FIRST_APP_OPEN",
          "COST_PER_INSTALL",
          "COST_PER_SIGN_UP",
          "COST_PER_VIDEO_COMPLETION",
          "DETAIL_PAGE_VIEW_RATE",
          "COMBINED_RETURN_ON_AD_SPEND",
          "RETURN_ON_AD_SPEND",
          "TOTAL_RETURN_ON_AD_SPEND",
          "REACH",
          "VIDEO_COMPLETION_RATE",
          "FREQUENCY_AVERAGE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "KeywordMatchType": {
        "type": "string",
        "description": "| KeywordMatchType | Description |\n| --- | --- |\n| `EXACT` | Exact match search terms. |\n| `PHRASE` | Phrase match search terms. |\n| `BROAD` | Braod match search terms. |",
        "enum": [
          "EXACT",
          "PHRASE",
          "BROAD"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "KeywordTarget": {
        "type": "object",
        "description": "Targets a specific customer search term.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/KeywordMatchType"
          },
          "keyword": {
            "type": "string",
            "description": "The customer search term or text to target"
          },
          "nativeLanguageKeyword": {
            "type": "string",
            "description": "The unlocalized keyword text in the preferred locale of the advertiser."
          },
          "nativeLanguageLocale": {
            "$ref": "#/components/schemas/LanguageLocale"
          }
        },
        "required": [
          "keyword",
          "matchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "LandingPageAsins": {
        "type": "object",
        "properties": {
          "asins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "description": "For landing page of type ASIN_LIST, the list of ASINs used to create the landing page."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "LanguageLocale": {
        "type": "string",
        "description": "A combination of ISO-639 standard for language code and ISO-3166 for country code.\n| LanguageLocale | Description |\n| --- | --- |\n| `ak_GH` | Akan (Ghana). |\n| `am_ET` | Amharic (Ethiopia). |\n| `an_ES` | Aragonese (Spain). |\n| `ar_AE` | Arabic (UAE). |\n| `as_IN` | Assamese (India). |\n| `av_RU` | Avaric (Russia). |\n| `ay_BO` | Aymara (Bolivia). |\n| `ba_RU` | Bashkir (Russia). |\n| `be_BY` | Belarusian (Belarus). |\n| `bg_BG` | Bulgarian (Bulgaria). |\n| `bh_IN` | Bihari (India). |\n| `bi_VU` | Bislama (Vanuatu). |\n| `bm_ML` | Bambara (Mali). |\n| `bo_CN` | Tibetan (China). |\n| `bs_BA` | Bosnian (Bosnia and Herzegovina). |\n| `ca_ES` | Catalan (Spain). |\n| `ce_RU` | Chechen (Russia). |\n| `ch_GU` | Chamorro (Guam). |\n| `de_DE` | German (Germany). |\n| `el_GR` | Greek (Greece). |\n| `en_US` | English (United States). |\n| `eo_INT` | Esperanto (International). |\n| `es_ES` | Spanish (Spain). |\n| `et_EE` | Estonian (Estonia). |\n| `eu_ES` | Basque (Spain). |\n| `fa_IR` | Persian (Iran). |\n| `fi_FI` | Finnish (Finland). |\n| `fj_FJ` | Fijian (Fiji). |\n| `fo_FO` | Faroese (Faroe Islands). |\n| `fr_FR` | French (France). |\n| `fy_NL` | Western Frisian (Netherlands). |\n| `ga_IE` | Irish (Ireland). |\n| `gd_GB` | Scottish Gaelic (United Kingdom). |\n| `gl_ES` | Galician (Spain). |\n| `gn_PY` | Guarani (Paraguay). |\n| `gu_IN` | Gujarati (India). |\n| `gv_IM` | Manx (Isle of Man). |\n| `ha_NG` | Hausa (Nigeria). |\n| `he_IL` | Hebrew (Israel). |\n| `hi_IN` | Hindi (India). |\n| `ho_PG` | Hiri Motu (Papua New Guinea). |\n| `hr_HR` | Croatian (Croatia). |\n| `ht_HT` | Haitian Creole (Haiti). |\n| `hu_HU` | Hungarian (Hungary). |\n| `hy_AM` | Armenian (Armenia). |\n| `hz_NA` | Herero (Namibia). |\n| `ia_INT` | Interlingua (International). |\n| `id_ID` | Indonesian (Indonesia). |\n| `ie_INT` | Interlingue (International). |\n| `ig_NG` | Igbo (Nigeria). |\n| `ii_CN` | Sichuan Yi (China). |\n| `ik_US` | Inupiaq (United States). |\n| `io_INT` | Ido (International). |\n| `is_IS` | Icelandic (Iceland). |\n| `it_IT` | Italian (Italy). |\n| `iu_CA` | Inuktitut (Canada). |\n| `ja_JP` | Japanese (Japan). |\n| `jv_ID` | Javanese (Indonesia). |\n| `ka_GE` | Georgian (Georgia). |\n| `kg_CD` | Kongo (Democratic Republic of the Congo). |\n| `ki_KE` | Kikuyu (Kenya). |\n| `kj_NA` | Kwanyama (Namibia). |\n| `kk_KZ` | Kazakh (Kazakhstan). |\n| `kl_GL` | Kalaallisut (Greenland). |\n| `km_KH` | Khmer (Cambodia). |\n| `kn_IN` | Kannada (India). |\n| `ko_KR` | Korean (South Korea). |\n| `kr_NG` | Kanuri (Nigeria). |\n| `ks_IN` | Kashmiri (India). |\n| `ku_TR` | Kurdish (Turkey). |\n| `kv_RU` | Komi (Russia). |\n| `kw_GB` | Cornish (United Kingdom). |\n| `ky_KG` | Kyrgyz (Kyrgyzstan). |\n| `la_VA` | Latin (Vatican City). |\n| `lb_LU` | Luxembourgish (Luxembourg). |\n| `lg_UG` | Ganda (Uganda). |\n| `li_NL` | Limburgish (Netherlands). |\n| `ln_CD` | Lingala (Democratic Republic of the Congo). |\n| `lo_LA` | Lao (Laos). |\n| `lt_LT` | Lithuanian (Lithuania). |\n| `lu_CD` | Luba-Katanga (Democratic Republic of the Congo). |\n| `lv_LV` | Latvian (Latvia). |\n| `mg_MG` | Malagasy (Madagascar). |\n| `mh_MH` | Marshallese (Marshall Islands). |\n| `mi_NZ` | Māori (New Zealand). |\n| `mk_MK` | Macedonian (North Macedonia). |\n| `ml_IN` | Malayalam (India). |\n| `mn_MN` | Mongolian (Mongolia). |\n| `mr_IN` | Marathi (India). |\n| `ms_MY` | Malay (Malaysia). |\n| `mt_MT` | Maltese (Malta). |\n| `my_MM` | Burmese (Myanmar). |\n| `na_NR` | Nauru (Nauru). |\n| `nb_NO` | Norwegian Bokmål (Norway). |\n| `nd_ZW` | North Ndebele (Zimbabwe). |\n| `ne_NP` | Nepali (Nepal). |\n| `ng_NA` | Ndonga (Namibia). |\n| `nl_NL` | Dutch (Netherlands). |\n| `nn_NO` | Norwegian Nynorsk (Norway). |\n| `no_NO` | Norwegian (Norway). |\n| `nr_ZA` | South Ndebele (South Africa). |\n| `nv_US` | Navajo (United States). |\n| `ny_MW` | Chichewa (Malawi). |\n| `oc_FR` | Occitan (France). |\n| `oj_CA` | Ojibwa (Canada). |\n| `om_ET` | Oromo (Ethiopia). |\n| `or_IN` | Oriya (India). |\n| `os_RU` | Ossetian (Russia). |\n| `pa_IN` | Punjabi (India). |\n| `pi_IN` | Pali (India). |\n| `pl_PL` | Polish (Poland). |\n| `ps_AF` | Pashto (Afghanistan). |\n| `pt_PT` | Portuguese (Portugal). |\n| `qu_PE` | Quechua (Peru). |\n| `rm_CH` | Romansh (Switzerland). |\n| `rn_BI` | Kirundi (Burundi). |\n| `ro_RO` | Romanian (Romania). |\n| `ru_RU` | Russian (Russia). |\n| `rw_RW` | Kinyarwanda (Rwanda). |\n| `sa_IN` | Sanskrit (India). |\n| `sc_IT` | Sardinian (Italy). |\n| `sd_PK` | Sindhi (Pakistan). |\n| `se_NO` | Northern Sami (Norway). |\n| `sg_CF` | Sango (Central African Republic). |\n| `si_LK` | Sinhala (Sri Lanka). |\n| `sk_SK` | Slovak (Slovakia). |\n| `sl_SI` | Slovenian (Slovenia). |\n| `sm_WS` | Samoan (Samoa). |\n| `sn_ZW` | Shona (Zimbabwe). |\n| `so_SO` | Somali (Somalia). |\n| `sq_AL` | Albanian (Albania). |\n| `sr_RS` | Serbian (Serbia). |\n| `ss_SZ` | Swati (Eswatini). |\n| `st_LS` | Southern Sotho (Lesotho). |\n| `su_ID` | Sundanese (Indonesia). |\n| `sv_SE` | Swedish (Sweden). |\n| `sw_TZ` | Swahili (Tanzania). |\n| `ta_IN` | Tamil (India). |\n| `te_IN` | Telugu (India). |\n| `tg_TJ` | Tajik (Tajikistan). |\n| `th_TH` | Thai (Thailand). |\n| `ti_ET` | Tigrinya (Ethiopia). |\n| `tk_TM` | Turkmen (Turkmenistan). |\n| `tl_PH` | Tagalog (Philippines). |\n| `tn_BW` | Tswana (Botswana). |\n| `to_TO` | Tonga (Tonga). |\n| `tr_TR` | Turkish (Turkey). |\n| `ts_ZA` | Tsonga (South Africa). |\n| `tt_RU` | Tatar (Russia). |\n| `tw_GH` | Twi (Ghana). |\n| `ty_PF` | Tahitian (French Polynesia). |\n| `ug_CN` | Uyghur (China). |\n| `uk_UA` | Ukrainian (Ukraine). |\n| `ur_PK` | Urdu (Pakistan). |\n| `uz_UZ` | Uzbek (Uzbekistan). |\n| `ve_ZA` | Venda (South Africa). |\n| `vi_VN` | Vietnamese (Vietnam). |\n| `vo_INT` | Volapük (International). |\n| `wa_BE` | Walloon (Belgium). |\n| `wo_SN` | Wolof (Senegal). |\n| `xh_ZA` | Xhosa (South Africa). |\n| `yi_IL` | Yiddish (Israel). |\n| `yo_NG` | Yoruba (Nigeria). |\n| `za_CN` | Zhuang (China). |\n| `zh_CN` | Chinese (China). |\n| `zu_ZA` | Zulu (South Africa). |",
        "enum": [
          "ak_GH",
          "am_ET",
          "an_ES",
          "ar_AE",
          "as_IN",
          "av_RU",
          "ay_BO",
          "ba_RU",
          "be_BY",
          "bg_BG",
          "bh_IN",
          "bi_VU",
          "bm_ML",
          "bo_CN",
          "bs_BA",
          "ca_ES",
          "ce_RU",
          "ch_GU",
          "de_DE",
          "el_GR",
          "en_US",
          "eo_INT",
          "es_ES",
          "et_EE",
          "eu_ES",
          "fa_IR",
          "fi_FI",
          "fj_FJ",
          "fo_FO",
          "fr_FR",
          "fy_NL",
          "ga_IE",
          "gd_GB",
          "gl_ES",
          "gn_PY",
          "gu_IN",
          "gv_IM",
          "ha_NG",
          "he_IL",
          "hi_IN",
          "ho_PG",
          "hr_HR",
          "ht_HT",
          "hu_HU",
          "hy_AM",
          "hz_NA",
          "ia_INT",
          "id_ID",
          "ie_INT",
          "ig_NG",
          "ii_CN",
          "ik_US",
          "io_INT",
          "is_IS",
          "it_IT",
          "iu_CA",
          "ja_JP",
          "jv_ID",
          "ka_GE",
          "kg_CD",
          "ki_KE",
          "kj_NA",
          "kk_KZ",
          "kl_GL",
          "km_KH",
          "kn_IN",
          "ko_KR",
          "kr_NG",
          "ks_IN",
          "ku_TR",
          "kv_RU",
          "kw_GB",
          "ky_KG",
          "la_VA",
          "lb_LU",
          "lg_UG",
          "li_NL",
          "ln_CD",
          "lo_LA",
          "lt_LT",
          "lu_CD",
          "lv_LV",
          "mg_MG",
          "mh_MH",
          "mi_NZ",
          "mk_MK",
          "ml_IN",
          "mn_MN",
          "mr_IN",
          "ms_MY",
          "mt_MT",
          "my_MM",
          "na_NR",
          "nb_NO",
          "nd_ZW",
          "ne_NP",
          "ng_NA",
          "nl_NL",
          "nn_NO",
          "no_NO",
          "nr_ZA",
          "nv_US",
          "ny_MW",
          "oc_FR",
          "oj_CA",
          "om_ET",
          "or_IN",
          "os_RU",
          "pa_IN",
          "pi_IN",
          "pl_PL",
          "ps_AF",
          "pt_PT",
          "qu_PE",
          "rm_CH",
          "rn_BI",
          "ro_RO",
          "ru_RU",
          "rw_RW",
          "sa_IN",
          "sc_IT",
          "sd_PK",
          "se_NO",
          "sg_CF",
          "si_LK",
          "sk_SK",
          "sl_SI",
          "sm_WS",
          "sn_ZW",
          "so_SO",
          "sq_AL",
          "sr_RS",
          "ss_SZ",
          "st_LS",
          "su_ID",
          "sv_SE",
          "sw_TZ",
          "ta_IN",
          "te_IN",
          "tg_TJ",
          "th_TH",
          "ti_ET",
          "tk_TM",
          "tl_PH",
          "tn_BW",
          "to_TO",
          "tr_TR",
          "ts_ZA",
          "tt_RU",
          "tw_GH",
          "ty_PF",
          "ug_CN",
          "uk_UA",
          "ur_PK",
          "uz_UZ",
          "ve_ZA",
          "vi_VN",
          "vo_INT",
          "wa_BE",
          "wo_SN",
          "xh_ZA",
          "yi_IL",
          "yo_NG",
          "za_CN",
          "zh_CN",
          "zu_ZA"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "LearnMoreVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to drive users to learn more via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "LocationTarget": {
        "type": "object",
        "description": "Target based on geographic location.",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "The ID of the geographic location to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Marketplace": {
        "type": "string",
        "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |",
        "enum": [
          "AE",
          "AU",
          "BE",
          "BR",
          "CA",
          "DE",
          "EG",
          "ES",
          "FR",
          "GB",
          "IN",
          "IT",
          "JP",
          "MX",
          "NL",
          "PL",
          "SA",
          "SE",
          "SG",
          "TR",
          "US"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MarketplaceScope": {
        "type": "string",
        "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |",
        "enum": [
          "GLOBAL",
          "SINGLE_MARKETPLACE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MarketplaceStringValue": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "The default value. Either the default value or the marketplace settings should always be specified"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The marketplace specific value pairs. Either the default value or the marketplace settings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MatchType": {
        "type": "string",
        "description": "| MatchType | Description |\n| --- | --- |\n| `KEYWORDS_RELATED_TO_YOUR_BRAND` | Search terms related to your brand. |\n| `KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES` | Search terms related to your landing pages. |\n| `KEYWORDS_RELATED_TO_GIFTS` | Search terms related to gifts. |\n| `KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY` | Search terms shoppers often use to search for products in the same category as the products you're advertising. |\n| `KEYWORDS_RELATED_TO_PRIME_DAY` | Search terms that shoppers are likely to use during Prime Day. These keywords can include terms related to the event, like \"prime day\", combined with product-specific terms. These keywords can help you expand reach to shoppers during the sales event. These keywords will only match queries through the end of Prime Day. |\n| `PRODUCTS_SIMILAR_TO_ADVERTISED_PRODUCTS` | Products similar to products advertised as part of the ad group. |\n| `KEYWORDS_LOOSE_MATCH` | Search terms loosely matching advertised product. |\n| `KEYWORDS_CLOSE_MATCH` | Search terms closely matching advertised product. |\n| `PRODUCT_SUBSTITUTES` | Products that can be substituted for advertised product. |\n| `PRODUCT_COMPLEMENTS` | Products that complement advertised product. |\n| `PRODUCT_EXACT` | Products exactly matching the specified product. |\n| `PRODUCT_SIMILAR` | Products similar to the specified product. |\n| `EXACT` | Exact match search terms. |\n| `PHRASE` | Phrase match search terms. |\n| `BROAD` | Braod match search terms. |",
        "enum": [
          "KEYWORDS_RELATED_TO_YOUR_BRAND",
          "KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES",
          "KEYWORDS_RELATED_TO_GIFTS",
          "KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY",
          "KEYWORDS_RELATED_TO_PRIME_DAY",
          "PRODUCTS_SIMILAR_TO_ADVERTISED_PRODUCTS",
          "KEYWORDS_LOOSE_MATCH",
          "KEYWORDS_CLOSE_MATCH",
          "PRODUCT_SUBSTITUTES",
          "PRODUCT_COMPLEMENTS",
          "PRODUCT_EXACT",
          "PRODUCT_SIMILAR",
          "EXACT",
          "PHRASE",
          "BROAD"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MobileDevice": {
        "type": "string",
        "description": "| MobileDevice | Description |\n| --- | --- |\n| `IPHONE` |  |\n| `IPAD` |  |\n| `ANDROID` |  |\n| `KINDLE_FIRE` |  |\n| `KINDLE_FIRE_HD` |  |",
        "enum": [
          "IPHONE",
          "IPAD",
          "ANDROID",
          "KINDLE_FIRE",
          "KINDLE_FIRE_HD"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MobileEnvironment": {
        "type": "string",
        "description": "| MobileEnvironment | Description |\n| --- | --- |\n| `WEB` |  |\n| `APP` |  |",
        "enum": [
          "WEB",
          "APP"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MobileOs": {
        "type": "string",
        "description": "| MobileOs | Description |\n| --- | --- |\n| `IOS` |  |\n| `ANDROID` |  |",
        "enum": [
          "IOS",
          "ANDROID"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ModerationStatus": {
        "type": "string",
        "description": "| ModerationStatus | Description |\n| --- | --- |\n| `PUBLISHED` | The creative passed moderation and is serving. |\n| `SUBMITTED_FOR_MODERATION` | The creative has been submitted, but has not yet been reviewed. |\n| `REJECTED_BY_MODERATION` | The creative was rejected during the moderation process. |\n| `PENDING_TRANSLATION` | The creative is pending creative Translations. |\n| `APPROVED_WITH_EXCEPTIONS` | The creative passed basic moderation but was found to be invalid for some supplies. The creative is serving on approved supplies. |",
        "enum": [
          "PUBLISHED",
          "SUBMITTED_FOR_MODERATION",
          "REJECTED_BY_MODERATION",
          "PENDING_TRANSLATION",
          "APPROVED_WITH_EXCEPTIONS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MonetaryBudget": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "value": {
            "type": "number",
            "description": "The monetary amount of the budget cap in the given currency.",
            "format": "double"
          },
          "ruleValue": {
            "type": "number",
            "description": "The monetary amount of the budget when a budget rule is applied.",
            "format": "double"
          }
        },
        "required": [
          "currencyCode",
          "value"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MonetaryBudgetMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "monetaryBudget": {
            "$ref": "#/components/schemas/MonetaryBudget"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MonetaryBudgetValue": {
        "type": "object",
        "properties": {
          "monetaryBudget": {
            "$ref": "#/components/schemas/MonetaryBudget"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonetaryBudgetMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of Monetary Budget values selectively applied at the given marketplace level"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "MrcViewabilityTargetingType": {
        "type": "string",
        "description": "The type of MRC viewability targeting.\n| MrcViewabilityTargetingType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `MRC_VIEWABILITY_GTE_80` |  |\n| `MRC_VIEWABILITY_GTE_75` |  |\n| `MRC_VIEWABILITY_GTE_70` |  |\n| `MRC_VIEWABILITY_GTE_65` |  |\n| `MRC_VIEWABILITY_GTE_60` |  |\n| `MRC_VIEWABILITY_GTE_55` |  |\n| `MRC_VIEWABILITY_GTE_50` |  |\n| `MRC_VIEWABILITY_GTE_40` |  |\n| `MRC_VIEWABILITY_GTE_30` |  |",
        "enum": [
          "ALLOW_ALL",
          "MRC_VIEWABILITY_GTE_80",
          "MRC_VIEWABILITY_GTE_75",
          "MRC_VIEWABILITY_GTE_70",
          "MRC_VIEWABILITY_GTE_65",
          "MRC_VIEWABILITY_GTE_60",
          "MRC_VIEWABILITY_GTE_55",
          "MRC_VIEWABILITY_GTE_50",
          "MRC_VIEWABILITY_GTE_40",
          "MRC_VIEWABILITY_GTE_30"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NativeContentPosition": {
        "type": "string",
        "description": "| NativeContentPosition | Description |\n| --- | --- |\n| `IN_ARTICLE` | Positioned in the atomic unit of the content (e.g., in the article page or single image page). |\n| `IN_FEED` | Positioned in the feed of content (e.g., as an item inside the organic feed, grid, listing, carousel, etc.). |\n| `PERIPHERAL` | Positioned utside the core content (e.g., in the ads section on the right rail, as a banner-style placement near the content, etc.). |\n| `RECOMMENDATION` | Positioned in recommendation widget; most commonly presented below article content. |\n| `UNKNOWN` | Unknown position. |",
        "enum": [
          "IN_ARTICLE",
          "IN_FEED",
          "PERIPHERAL",
          "RECOMMENDATION",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NativeContentPositionTarget": {
        "type": "object",
        "description": "Targets ads to a specific native content position",
        "properties": {
          "nativePosition": {
            "$ref": "#/components/schemas/NativeContentPosition"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NewsGuardBrandGuardMisinformationSafety": {
        "type": "object",
        "properties": {
          "avoidanceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsGuardBrandGuardMisinformationSafetyType"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The unique identifiers of misinformation targets"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NewsGuardBrandGuardMisinformationSafetyType": {
        "type": "string",
        "description": "| NewsGuardBrandGuardMisinformationSafetyType | Description |\n| --- | --- |\n| `MAX_EXCLUDE` |  |\n| `HIGH_EXCLUDE` |  |\n| `BASIC_EXCLUDE` |  |\n| `OPINIONATED_NEWS` |  |\n| `MISINFORMATION_SITES` |  |\n| `ELECTION_MISINFORMATION` |  |\n| `HEALTH_MISINFORMATION` |  |\n| `VACCINE_MISINFORMATION` |  |\n| `COVID_MISINFORMATION` |  |\n| `QANON_MISINFORMATION` |  |\n| `CLIMATE_MISINFORMATION` |  |\n| `UKRAINE_MISINFORMATION` |  |\n| `ISRAEL_HAMAS_MISINFORMATION` |  |\n| `AI_GENERATED_MFA` |  |",
        "enum": [
          "MAX_EXCLUDE",
          "HIGH_EXCLUDE",
          "BASIC_EXCLUDE",
          "OPINIONATED_NEWS",
          "MISINFORMATION_SITES",
          "ELECTION_MISINFORMATION",
          "HEALTH_MISINFORMATION",
          "VACCINE_MISINFORMATION",
          "COVID_MISINFORMATION",
          "QANON_MISINFORMATION",
          "CLIMATE_MISINFORMATION",
          "UKRAINE_MISINFORMATION",
          "ISRAEL_HAMAS_MISINFORMATION",
          "AI_GENERATED_MFA"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NewsGuardBrandGuardTrustedNewsTargeting": {
        "type": "object",
        "description": "Only applicable for Web supply.",
        "properties": {
          "targetingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsGuardBrandGuardTrustedNewsTargetingType"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The unique identifiers of trusted news targets"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NewsGuardBrandGuardTrustedNewsTargetingType": {
        "type": "string",
        "description": "| NewsGuardBrandGuardTrustedNewsTargetingType | Description |\n| --- | --- |\n| `MAX_INCLUDE` |  |\n| `HIGH_INCLUDE` |  |\n| `BASIC_INCLUDE` |  |\n| `LOCAL_INCLUDE` |  |\n| `POLITICS_INCLUDE` |  |\n| `HEALTH_INCLUDE` |  |\n| `BUSINESS_INCLUDE` |  |\n| `COMMUNITY_INCLUDE` |  |\n| `LIFESTYLE_INCLUDE` |  |\n| `TECH_INCLUDE` |  |",
        "enum": [
          "MAX_INCLUDE",
          "HIGH_INCLUDE",
          "BASIC_INCLUDE",
          "LOCAL_INCLUDE",
          "POLITICS_INCLUDE",
          "HEALTH_INCLUDE",
          "BUSINESS_INCLUDE",
          "COMMUNITY_INCLUDE",
          "LIFESTYLE_INCLUDE",
          "TECH_INCLUDE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "NotFoundResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "OffAmazonBudgetControlStrategy": {
        "type": "string",
        "description": "| OffAmazonBudgetControlStrategy | Description |\n| --- | --- |\n| `MAXIMIZE_REACH` |  |\n| `MINIMIZE_SPEND` |  |",
        "enum": [
          "MAXIMIZE_REACH",
          "MINIMIZE_SPEND"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "OnlineVideoSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/Video"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/VideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/AdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Optimization": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/AdGroupBudgetSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Pacing": {
        "type": "object",
        "properties": {
          "deliveryProfile": {
            "$ref": "#/components/schemas/DeliveryProfile"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PixalateFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeIpAddressAndUserAgents": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from IPV4 and IPV6 addresses and user agents identified to be fraudulent or invalid."
          },
          "excludeOttAndMobileDevices": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from OTT and Mobile devices identified to be fraudulent or invalid."
          },
          "excludeRemovedAppsFromAppStores": {
            "type": "boolean",
            "description": "Set to true to exlude traffic from Apps that have been removed from the google play and apple app stores in the last 6 months."
          },
          "excludeAppsAndDomains": {
            "type": "boolean",
            "description": "Set to true to exclude traffic from Apps and Domains identified to be fraudulent or invalid."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Placement": {
        "type": "string",
        "description": "| Placement | Description |\n| --- | --- |\n| `HOME_PAGE` | Home page. |\n| `PRODUCT_PAGE` | Placements on the product detail page, and all nonsearch placements such as the add-to-cart page. |\n| `TOP_OF_SEARCH` | Placements on the top row of the first-page search results. |\n| `SITE_AMAZON_BUSINESS` | Amazon Business site placements. |\n| `REST_OF_SEARCH` | Placements on the middle or the bottom of the first-page search results. Also refers to ads on the second page of search results and beyond. |",
        "enum": [
          "HOME_PAGE",
          "PRODUCT_PAGE",
          "TOP_OF_SEARCH",
          "SITE_AMAZON_BUSINESS",
          "REST_OF_SEARCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PlacementBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given placement and bid adjustment settings.",
            "format": "int32"
          },
          "placement": {
            "$ref": "#/components/schemas/Placement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Portfolio": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "A unique identifier for a portfolio"
          },
          "name": {
            "type": "string",
            "description": "The name of the portfolio"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the portfolio. Only applicable if budget recurrenceTimePeriod is LIFETIME",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the portfolio. Only applicable if budget recurrenceTimePeriod is LIFETIME",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "required": [
          "marketplaceScope",
          "name",
          "portfolioId",
          "state",
          "status"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the portfolio"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "budget": {
            "$ref": "#/components/schemas/CreateBudget"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date time for the portfolio. Only applicable if budget recurrenceTimePeriod is LIFETIME",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date time for the portfolio. Only applicable if budget recurrenceTimePeriod is LIFETIME",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          }
        },
        "required": [
          "marketplaceScope",
          "name",
          "state"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioMarketplaceScopeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceScope"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioMultiStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioMultiStatusSuccess"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "portfolio": {
            "$ref": "#/components/schemas/Portfolio"
          }
        },
        "required": [
          "index",
          "portfolio"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioNameFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/PortfolioNameFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioNameFilterType": {
        "type": "string",
        "description": "| PortfolioNameFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioPortfolioIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioStateFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "portfolios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Portfolio"
            },
            "maxItems": 5000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PortfolioUpdate": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "A unique identifier for a portfolio"
          },
          "name": {
            "type": "string"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "budget": {
            "$ref": "#/components/schemas/UpdateBudget"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          }
        },
        "required": [
          "portfolioId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "PrimaryInventoryType": {
        "type": "string",
        "description": "| PrimaryInventoryType | Description |\n| --- | --- |\n| `DISPLAY` |  |\n| `VIDEO_OLV` |  |\n| `VIDEO_STV` |  |\n| `AUDIO` |  |",
        "enum": [
          "DISPLAY",
          "VIDEO_OLV",
          "VIDEO_STV",
          "AUDIO"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCategoryRefinement": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "string",
            "description": "The product category ID to target."
          },
          "productCategoryIdResolved": {
            "type": "string",
            "description": "The resolved product category."
          },
          "productBrandId": {
            "type": "string",
            "description": "The brand ID to target."
          },
          "productBrandIdResolved": {
            "type": "string",
            "description": "The resolved name of the brand."
          },
          "productPriceLessThan": {
            "type": "number",
            "description": "Refinement to target products with a price less than the value within the product category.",
            "format": "double"
          },
          "productPriceGreaterThan": {
            "type": "number",
            "description": "Refinement to target products with a price greater than the value within the product category.",
            "format": "double"
          },
          "productRatingLessThan": {
            "type": "number",
            "description": "Refinement to target products with a rating less than the value within the product category.",
            "format": "double"
          },
          "productRatingGreaterThan": {
            "type": "number",
            "description": "Refinement to target products with a rating greater than the value within the product category.",
            "format": "double"
          },
          "productAgeRangeId": {
            "type": "string",
            "description": "The age range ID to target."
          },
          "productAgeRangeIdResolved": {
            "type": "string",
            "description": "The resolved age range to target."
          },
          "productPrimeShippingEligible": {
            "type": "boolean",
            "description": "Target based on if a product is Prime-shipping eligible."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCategoryRefinementMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/ProductCategoryRefinement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCategoryRefinementValue": {
        "type": "object",
        "properties": {
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/ProductCategoryRefinement"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryRefinementMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "Marketplace specific product category refinements. Either the value or the marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCategoryTarget": {
        "type": "object",
        "description": "Targets a specific customer search term.",
        "properties": {
          "productCategoryRefinement": {
            "$ref": "#/components/schemas/ProductCategoryRefinementValue"
          },
          "productGenreRefinement": {
            "$ref": "#/components/schemas/ProductGenreRefinement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCollectionLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/ProductCollectionLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL associated to the landing page. Read only if landingPageType is ASIN_LIST"
          },
          "landingPageAsins": {
            "$ref": "#/components/schemas/LandingPageAsins"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCollectionLandingPageType": {
        "type": "string",
        "description": "| ProductCollectionLandingPageType | Description |\n| --- | --- |\n| `ASIN_LIST` | A list of products based on the products promoted in the ad creative. |\n| `STORE` | A brand Store landing page. |\n| `CUSTOM_URL` | A custom landing page. Available for vendors only. |",
        "enum": [
          "ASIN_LIST",
          "STORE",
          "CUSTOM_URL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCollectionSettings": {
        "type": "object",
        "description": "An ad creative that contains multiple products and a custom image.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the ad."
          },
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "untranslatedHeadlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headlines entered by the advertiser."
          },
          "landingPage": {
            "$ref": "#/components/schemas/ProductCollectionLandingPage"
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "moderationStatus": {
            "$ref": "#/components/schemas/CreativeStatus"
          },
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The set of custom images featured in the ad."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCreative": {
        "type": "object",
        "properties": {
          "productCreativeSettings": {
            "$ref": "#/components/schemas/ProductCreativeSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductCreativeSettings": {
        "type": "object",
        "description": "An ad with a creative built based on the product being advertised.",
        "properties": {
          "advertisedProduct": {
            "$ref": "#/components/schemas/AdvertisedProducts"
          },
          "headline": {
            "type": "string",
            "description": "The headline/custom text associated with the ad creative."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductGenreRefinement": {
        "type": "object",
        "properties": {
          "productGenreId": {
            "type": "string",
            "description": "The product genre ID to target."
          },
          "productGenreIdResolved": {
            "type": "string",
            "description": "The resolved product genre to target."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductIdType": {
        "type": "string",
        "description": "| ProductIdType | Description |\n| --- | --- |\n| `ASIN` | ASIN identifier type. |\n| `SKU` | SKU identifier type. |",
        "enum": [
          "ASIN",
          "SKU"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductMarketplaceSetting": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product id applicable at the specified marketplace."
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductMatchType": {
        "type": "string",
        "description": "| ProductMatchType | Description |\n| --- | --- |\n| `PRODUCT_EXACT` | Products exactly matching the specified product. |\n| `PRODUCT_SIMILAR` | Products similar to the specified product. |",
        "enum": [
          "PRODUCT_EXACT",
          "PRODUCT_SIMILAR"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductTarget": {
        "type": "object",
        "description": "Targets a specific product.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/ProductMatchType"
          },
          "product": {
            "$ref": "#/components/schemas/ProductValue"
          },
          "productIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          }
        },
        "required": [
          "matchType",
          "product",
          "productIdType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductValue": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product identifier. Either the product id or the marketplace settings should always be specified"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The product ids at specific marketplace level. Either the product id or the marketplace settings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ProductVideoSettings": {
        "type": "object",
        "description": "An ad with a creative that includes a video.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "untranslatedHeadlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The headline entered by the advertiser."
          },
          "landingPage": {
            "$ref": "#/components/schemas/VideoLandingPage"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the video ad."
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The video assets used in the ad."
          },
          "untranslatedVideos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The original video assets submitted as part of the creative."
          },
          "moderationStatus": {
            "$ref": "#/components/schemas/CreativeStatus"
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryAdAssociationRequest": {
        "type": "object",
        "properties": {
          "adAssociationIdFilter": {
            "$ref": "#/components/schemas/AdAssociationAdAssociationIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/AdAssociationAdGroupIdFilter"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/AdAssociationAdIdFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "default": 100,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryAdGroupRequest": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/AdGroupAdGroupIdFilter"
          },
          "adProductFilter": {
            "$ref": "#/components/schemas/AdGroupAdProductFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/AdGroupCampaignIdFilter"
          },
          "marketplaceScopeFilter": {
            "$ref": "#/components/schemas/AdGroupMarketplaceScopeFilter"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/AdGroupNameFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/AdGroupStateFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "default": 1000,
            "maximum": 5000,
            "minimum": 0,
            "format": "int32"
          }
        },
        "required": [
          "adProductFilter"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryAdRequest": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/AdAdGroupIdFilter"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/AdAdIdFilter"
          },
          "adProductFilter": {
            "$ref": "#/components/schemas/AdAdProductFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/AdCampaignIdFilter"
          },
          "marketplaceScopeFilter": {
            "$ref": "#/components/schemas/AdMarketplaceScopeFilter"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/AdNameFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/AdStateFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "maximum": 1000,
            "minimum": 0,
            "format": "int32"
          }
        },
        "required": [
          "adProductFilter"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryCampaignRequest": {
        "type": "object",
        "properties": {
          "adProductFilter": {
            "$ref": "#/components/schemas/CampaignAdProductFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/CampaignCampaignIdFilter"
          },
          "goalFilter": {
            "$ref": "#/components/schemas/CampaignGoalFilter"
          },
          "marketplaceScopeFilter": {
            "$ref": "#/components/schemas/CampaignMarketplaceScopeFilter"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/CampaignNameFilter"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/CampaignPortfolioIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/CampaignStateFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "maximum": 5000,
            "minimum": 0,
            "format": "int32"
          }
        },
        "required": [
          "adProductFilter"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryPortfolioRequest": {
        "type": "object",
        "properties": {
          "marketplaceScopeFilter": {
            "$ref": "#/components/schemas/PortfolioMarketplaceScopeFilter"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/PortfolioNameFilter"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/PortfolioPortfolioIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/PortfolioStateFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "default": 5000,
            "maximum": 5000,
            "minimum": 0,
            "format": "int32"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "QueryTargetRequest": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/TargetAdGroupIdFilter"
          },
          "adProductFilter": {
            "$ref": "#/components/schemas/TargetAdProductFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/TargetCampaignIdFilter"
          },
          "keywordFilter": {
            "$ref": "#/components/schemas/TargetKeywordFilter"
          },
          "nativeLanguageLocaleFilter": {
            "$ref": "#/components/schemas/TargetLanguageLocaleFilter"
          },
          "marketplaceScopeFilter": {
            "$ref": "#/components/schemas/TargetMarketplaceScopeFilter"
          },
          "matchTypeFilter": {
            "$ref": "#/components/schemas/TargetMatchTypeFilter"
          },
          "negativeFilter": {
            "$ref": "#/components/schemas/TargetNegativeFilter"
          },
          "productIdFilter": {
            "$ref": "#/components/schemas/TargetProductIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/TargetStateFilter"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/TargetTargetIdFilter"
          },
          "targetTypeFilter": {
            "$ref": "#/components/schemas/TargetTargetTypeFilter"
          },
          "nextToken": {
            "type": "string"
          },
          "maxResults": {
            "type": "integer",
            "default": 5000,
            "maximum": 5000,
            "minimum": 1,
            "format": "int32"
          }
        },
        "required": [
          "adProductFilter"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Recurrence": {
        "type": "string",
        "description": "| Recurrence | Description |\n| --- | --- |\n| `DAILY` |  |\n| `MONTHLY` |  |\n| `LIFETIME` |  |",
        "enum": [
          "DAILY",
          "MONTHLY",
          "LIFETIME"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ResponsiveEcommerceAdVariations": {
        "type": "string",
        "description": "| ResponsiveEcommerceAdVariations | Description |\n| --- | --- |\n| `ADD_TO_CART` |  |\n| `COUPON` |  |\n| `SHOP_NOW` |  |\n| `CUSTOMER_REVIEWS` |  |",
        "enum": [
          "ADD_TO_CART",
          "COUPON",
          "SHOP_NOW",
          "CUSTOMER_REVIEWS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ResponsiveEcommerceCreativePropertiesToOptimize": {
        "type": "string",
        "description": "| ResponsiveEcommerceCreativePropertiesToOptimize | Description |\n| --- | --- |\n| `HEADLINE` | The headline in the creative. |",
        "enum": [
          "HEADLINE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ResponsiveEcommerceSettings": {
        "type": "object",
        "properties": {
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvertisedProducts"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The products advertised for the Responsive eCommerce experience."
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/Image"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "string",
            "description": "The headline to use for the Responsive eCommerce experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimer to use for the Responsive eCommerce experience."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "recAdVariations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceAdVariations"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The rendering variations selected for the Responsive eCommerce experience."
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Size"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          },
          "supportedThirdPartySellers": {
            "$ref": "#/components/schemas/SupportedThirdPartySellers"
          },
          "creativePropertiesToOptimize": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceCreativePropertiesToOptimize"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The CreativeProperty Amazon will enhance or generate based on various factors like audience, placement etc."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ResponsiveSizingBehavior": {
        "type": "string",
        "description": "| ResponsiveSizingBehavior | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `DISABLED` |  |",
        "enum": [
          "ENABLED",
          "DISABLED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "SalesChannel": {
        "type": "string",
        "description": "| SalesChannel | Description |\n| --- | --- |\n| `AMAZON` | A product sold on Amazon-owned sites. |\n| `OFF_AMAZON` | A product sold on a site not owned by Amazon. |",
        "enum": [
          "AMAZON",
          "OFF_AMAZON"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ServiceUnavailableErrorResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ShopperSegment": {
        "type": "string",
        "description": "| ShopperSegment | Description |\n| --- | --- |\n| `NEW_TO_BRAND` |  |",
        "enum": [
          "NEW_TO_BRAND"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ShopperSegmentBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given shopper segment and bid adjustment settings.",
            "format": "int32"
          },
          "shopperSegment": {
            "$ref": "#/components/schemas/ShopperSegment"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "SiteLanguage": {
        "type": "string",
        "description": "| SiteLanguage | Description |\n| --- | --- |\n| `AR` |  |\n| `BN` |  |\n| `CS` |  |\n| `DA` |  |\n| `DE` |  |\n| `EN` |  |\n| `ES` |  |\n| `FI` |  |\n| `FR` |  |\n| `GU` |  |\n| `HI` |  |\n| `IT` |  |\n| `JA` |  |\n| `KN` |  |\n| `ML` |  |\n| `MR` |  |\n| `NL` |  |\n| `NO` |  |\n| `PL` |  |\n| `PT` |  |\n| `PA` |  |\n| `SV` |  |\n| `TA` |  |\n| `TE` |  |\n| `TR` |  |\n| `ZH` |  |\n| `OTHER` |  |",
        "enum": [
          "AR",
          "BN",
          "CS",
          "DA",
          "DE",
          "EN",
          "ES",
          "FI",
          "FR",
          "GU",
          "HI",
          "IT",
          "JA",
          "KN",
          "ML",
          "MR",
          "NL",
          "NO",
          "PL",
          "PT",
          "PA",
          "SV",
          "TA",
          "TE",
          "TR",
          "ZH",
          "OTHER"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "SiteRestriction": {
        "type": "string",
        "description": "| SiteRestriction | Description |\n| --- | --- |\n| `AMAZON_BUSINESS` | Restrict the ad to only show on Amazon Business. |\n| `AMAZON_HAUL` | Restrict the ad to only show on Amazon Haul. |",
        "enum": [
          "AMAZON_BUSINESS",
          "AMAZON_HAUL"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Size": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "The width of the creative placement.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height of the creative placement.",
            "format": "int32"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StandardAudioExperienceSettings": {
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/AdvertisedProducts"
          },
          "audio": {
            "$ref": "#/components/schemas/Audio"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded. Urls cannot exceed 2048 characters."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StandardDisplaySettings": {
        "type": "object",
        "properties": {
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The custom images to use for the standard display experience."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "callToAction": {
            "$ref": "#/components/schemas/DisplayCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Size"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "State": {
        "type": "string",
        "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Status": {
        "type": "object",
        "properties": {
          "deliveryStatus": {
            "$ref": "#/components/schemas/DeliveryStatus"
          },
          "deliveryReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReason"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "This is the list of reasons behind the delivery status."
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The list of marketplace level delivery status and reasons of global resources, for all the marketplaces the global resource is applicable in."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StatusMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/DeliveryStatus"
          },
          "deliveryReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReason"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "This is the list of reasons behind the delivery status."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StoreSpotlightLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/StoreSpotlightLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StoreSpotlightLandingPageType": {
        "type": "string",
        "description": "| StoreSpotlightLandingPageType | Description |\n| --- | --- |\n| `STORE` | A brand Store landing page. |",
        "enum": [
          "STORE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StoreSpotlightSettings": {
        "type": "object",
        "description": "An ad creative that contains ASINs within a brand Store.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "untranslatedHeadlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline entered by the advertiser."
          },
          "landingPage": {
            "$ref": "#/components/schemas/StoreSpotlightLandingPage"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardCreativeElement"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The sub-elements of the creative. Each card highlights a different ASIN associated to a brand Store."
          },
          "moderationStatus": {
            "$ref": "#/components/schemas/CreativeStatus"
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StreamingTvSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/Video"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/VideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/AdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "StringMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "value": {
            "type": "string",
            "description": "The value applicable at the specified marketplace."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "SupportedThirdPartySellers": {
        "type": "string",
        "description": "| SupportedThirdPartySellers | Description |\n| --- | --- |\n| `ALL` |  |\n| `NONE` |  |",
        "enum": [
          "ALL",
          "NONE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TacticsConvertersExclusionType": {
        "type": "string",
        "description": "| TacticsConvertersExclusionType | Description |\n| --- | --- |\n| `NO_EXCLUSION` |  |\n| `RECENT_CONVERTERS` |  |",
        "enum": [
          "NO_EXCLUSION",
          "RECENT_CONVERTERS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          },
          "value": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Target": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string",
            "description": "A unique identifier for the target."
          },
          "adGroupId": {
            "type": "string",
            "description": "A unique identifier for the ad group associated with the target. Only used for ad-group level targets."
          },
          "campaignId": {
            "type": "string",
            "description": "A unique identifier for the campaign associated with the target. Only used for campaign-level targets."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "negative": {
            "type": "boolean",
            "description": "Indicates whether the target is negative or not."
          },
          "targetLevel": {
            "$ref": "#/components/schemas/TargetLevel"
          },
          "creationDateTime": {
            "type": "string",
            "description": "The date time the target was created.",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The date time the target was last updated.",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "targetType": {
            "$ref": "#/components/schemas/TargetType"
          },
          "bid": {
            "$ref": "#/components/schemas/TargetBid"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/TargetDetails"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the target"
          }
        },
        "required": [
          "adProduct",
          "creationDateTime",
          "lastUpdatedDateTime",
          "marketplaceScope",
          "negative",
          "state",
          "status",
          "targetDetails",
          "targetId",
          "targetLevel",
          "targetType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetAdGroupIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetAdProductFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdProduct"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| AdProduct | Description |\n| --- | --- |\n| `SPONSORED_PRODUCTS` |  |\n| `SPONSORED_BRANDS` |  |\n| `AMAZON_DSP` |  |\n| `FULL_FUNNEL` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetBid": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetCampaignIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetCreate": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "type": "string",
            "description": "A unique identifier for the ad group associated with the target. Only used for ad-group level targets."
          },
          "campaignId": {
            "type": "string",
            "description": "A unique identifier for the campaign associated with the target. Only used for campaign-level targets."
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "marketplaceScope": {
            "$ref": "#/components/schemas/MarketplaceScope"
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/CreateState"
          },
          "negative": {
            "type": "boolean",
            "description": "Indicates whether the target is negative or not."
          },
          "targetType": {
            "$ref": "#/components/schemas/TargetType"
          },
          "bid": {
            "$ref": "#/components/schemas/CreateTargetBid"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/CreateTargetDetails"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTag"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "Open ended labels with a key value pair applied to the target"
          }
        },
        "required": [
          "adProduct",
          "marketplaceScope",
          "negative",
          "state",
          "targetDetails",
          "targetType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "keywordTarget",
            "properties": {
              "keywordTarget": {
                "$ref": "#/components/schemas/KeywordTarget"
              }
            },
            "required": [
              "keywordTarget"
            ]
          },
          {
            "type": "object",
            "title": "productTarget",
            "properties": {
              "productTarget": {
                "$ref": "#/components/schemas/ProductTarget"
              }
            },
            "required": [
              "productTarget"
            ]
          },
          {
            "type": "object",
            "title": "productCategoryTarget",
            "properties": {
              "productCategoryTarget": {
                "$ref": "#/components/schemas/ProductCategoryTarget"
              }
            },
            "required": [
              "productCategoryTarget"
            ]
          },
          {
            "type": "object",
            "title": "audienceTarget",
            "properties": {
              "audienceTarget": {
                "$ref": "#/components/schemas/AudienceTarget"
              }
            },
            "required": [
              "audienceTarget"
            ]
          },
          {
            "type": "object",
            "title": "locationTarget",
            "properties": {
              "locationTarget": {
                "$ref": "#/components/schemas/LocationTarget"
              }
            },
            "required": [
              "locationTarget"
            ]
          },
          {
            "type": "object",
            "title": "domainTarget",
            "properties": {
              "domainTarget": {
                "$ref": "#/components/schemas/DomainTarget"
              }
            },
            "required": [
              "domainTarget"
            ]
          },
          {
            "type": "object",
            "title": "appTarget",
            "properties": {
              "appTarget": {
                "$ref": "#/components/schemas/AppTarget"
              }
            },
            "required": [
              "appTarget"
            ]
          },
          {
            "type": "object",
            "title": "deviceTarget",
            "properties": {
              "deviceTarget": {
                "$ref": "#/components/schemas/DeviceTarget"
              }
            },
            "required": [
              "deviceTarget"
            ]
          },
          {
            "type": "object",
            "title": "dayPartTarget",
            "properties": {
              "dayPartTarget": {
                "$ref": "#/components/schemas/DayPartTarget"
              }
            },
            "required": [
              "dayPartTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentCategoryTarget",
            "properties": {
              "contentCategoryTarget": {
                "$ref": "#/components/schemas/ContentCategoryTarget"
              }
            },
            "required": [
              "contentCategoryTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentGenreTarget",
            "properties": {
              "contentGenreTarget": {
                "$ref": "#/components/schemas/ContentGenreTarget"
              }
            },
            "required": [
              "contentGenreTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentRatingTarget",
            "properties": {
              "contentRatingTarget": {
                "$ref": "#/components/schemas/ContentRatingTarget"
              }
            },
            "required": [
              "contentRatingTarget"
            ]
          },
          {
            "type": "object",
            "title": "inventorySourceTarget",
            "properties": {
              "inventorySourceTarget": {
                "$ref": "#/components/schemas/InventorySourceTarget"
              }
            },
            "required": [
              "inventorySourceTarget"
            ]
          },
          {
            "type": "object",
            "title": "adInitiationTarget",
            "properties": {
              "adInitiationTarget": {
                "$ref": "#/components/schemas/AdInitiationTarget"
              }
            },
            "required": [
              "adInitiationTarget"
            ]
          },
          {
            "type": "object",
            "title": "adPlayerSizeTarget",
            "properties": {
              "adPlayerSizeTarget": {
                "$ref": "#/components/schemas/AdPlayerSizeTarget"
              }
            },
            "required": [
              "adPlayerSizeTarget"
            ]
          },
          {
            "type": "object",
            "title": "videoAdFormatTarget",
            "properties": {
              "videoAdFormatTarget": {
                "$ref": "#/components/schemas/VideoAdFormatTarget"
              }
            },
            "required": [
              "videoAdFormatTarget"
            ]
          },
          {
            "type": "object",
            "title": "thirdPartyTarget",
            "properties": {
              "thirdPartyTarget": {
                "$ref": "#/components/schemas/ThirdPartyTarget"
              }
            },
            "required": [
              "thirdPartyTarget"
            ]
          },
          {
            "type": "object",
            "title": "themeTarget",
            "properties": {
              "themeTarget": {
                "$ref": "#/components/schemas/ThemeTarget"
              }
            },
            "required": [
              "themeTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentInstreamPositionTarget",
            "properties": {
              "contentInstreamPositionTarget": {
                "$ref": "#/components/schemas/ContentInstreamPositionTarget"
              }
            },
            "required": [
              "contentInstreamPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "contentOutstreamPositionTarget",
            "properties": {
              "contentOutstreamPositionTarget": {
                "$ref": "#/components/schemas/ContentOutstreamPositionTarget"
              }
            },
            "required": [
              "contentOutstreamPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "videoContentDurationTarget",
            "properties": {
              "videoContentDurationTarget": {
                "$ref": "#/components/schemas/VideoContentDurationTarget"
              }
            },
            "required": [
              "videoContentDurationTarget"
            ]
          },
          {
            "type": "object",
            "title": "foldPositionTarget",
            "properties": {
              "foldPositionTarget": {
                "$ref": "#/components/schemas/FoldPositionTarget"
              }
            },
            "required": [
              "foldPositionTarget"
            ]
          },
          {
            "type": "object",
            "title": "nativeContentPositionTarget",
            "properties": {
              "nativeContentPositionTarget": {
                "$ref": "#/components/schemas/NativeContentPositionTarget"
              }
            },
            "required": [
              "nativeContentPositionTarget"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetKeywordFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/TargetKeywordFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetKeywordFilterType": {
        "type": "string",
        "description": "| TargetKeywordFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetLanguageLocaleFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageLocale"
            },
            "maxItems": 2,
            "minItems": 1,
            "description": "| NativeLanguageLocale | Description |\n| --- | --- |\n| `ak_GH` | Akan (Ghana). |\n| `am_ET` | Amharic (Ethiopia). |\n| `an_ES` | Aragonese (Spain). |\n| `ar_AE` | Arabic (UAE). |\n| `as_IN` | Assamese (India). |\n| `av_RU` | Avaric (Russia). |\n| `ay_BO` | Aymara (Bolivia). |\n| `ba_RU` | Bashkir (Russia). |\n| `be_BY` | Belarusian (Belarus). |\n| `bg_BG` | Bulgarian (Bulgaria). |\n| `bh_IN` | Bihari (India). |\n| `bi_VU` | Bislama (Vanuatu). |\n| `bm_ML` | Bambara (Mali). |\n| `bo_CN` | Tibetan (China). |\n| `bs_BA` | Bosnian (Bosnia and Herzegovina). |\n| `ca_ES` | Catalan (Spain). |\n| `ce_RU` | Chechen (Russia). |\n| `ch_GU` | Chamorro (Guam). |\n| `de_DE` | German (Germany). |\n| `el_GR` | Greek (Greece). |\n| `en_US` | English (United States). |\n| `eo_INT` | Esperanto (International). |\n| `es_ES` | Spanish (Spain). |\n| `et_EE` | Estonian (Estonia). |\n| `eu_ES` | Basque (Spain). |\n| `fa_IR` | Persian (Iran). |\n| `fi_FI` | Finnish (Finland). |\n| `fj_FJ` | Fijian (Fiji). |\n| `fo_FO` | Faroese (Faroe Islands). |\n| `fr_FR` | French (France). |\n| `fy_NL` | Western Frisian (Netherlands). |\n| `ga_IE` | Irish (Ireland). |\n| `gd_GB` | Scottish Gaelic (United Kingdom). |\n| `gl_ES` | Galician (Spain). |\n| `gn_PY` | Guarani (Paraguay). |\n| `gu_IN` | Gujarati (India). |\n| `gv_IM` | Manx (Isle of Man). |\n| `ha_NG` | Hausa (Nigeria). |\n| `he_IL` | Hebrew (Israel). |\n| `hi_IN` | Hindi (India). |\n| `ho_PG` | Hiri Motu (Papua New Guinea). |\n| `hr_HR` | Croatian (Croatia). |\n| `ht_HT` | Haitian Creole (Haiti). |\n| `hu_HU` | Hungarian (Hungary). |\n| `hy_AM` | Armenian (Armenia). |\n| `hz_NA` | Herero (Namibia). |\n| `ia_INT` | Interlingua (International). |\n| `id_ID` | Indonesian (Indonesia). |\n| `ie_INT` | Interlingue (International). |\n| `ig_NG` | Igbo (Nigeria). |\n| `ii_CN` | Sichuan Yi (China). |\n| `ik_US` | Inupiaq (United States). |\n| `io_INT` | Ido (International). |\n| `is_IS` | Icelandic (Iceland). |\n| `it_IT` | Italian (Italy). |\n| `iu_CA` | Inuktitut (Canada). |\n| `ja_JP` | Japanese (Japan). |\n| `jv_ID` | Javanese (Indonesia). |\n| `ka_GE` | Georgian (Georgia). |\n| `kg_CD` | Kongo (Democratic Republic of the Congo). |\n| `ki_KE` | Kikuyu (Kenya). |\n| `kj_NA` | Kwanyama (Namibia). |\n| `kk_KZ` | Kazakh (Kazakhstan). |\n| `kl_GL` | Kalaallisut (Greenland). |\n| `km_KH` | Khmer (Cambodia). |\n| `kn_IN` | Kannada (India). |\n| `ko_KR` | Korean (South Korea). |\n| `kr_NG` | Kanuri (Nigeria). |\n| `ks_IN` | Kashmiri (India). |\n| `ku_TR` | Kurdish (Turkey). |\n| `kv_RU` | Komi (Russia). |\n| `kw_GB` | Cornish (United Kingdom). |\n| `ky_KG` | Kyrgyz (Kyrgyzstan). |\n| `la_VA` | Latin (Vatican City). |\n| `lb_LU` | Luxembourgish (Luxembourg). |\n| `lg_UG` | Ganda (Uganda). |\n| `li_NL` | Limburgish (Netherlands). |\n| `ln_CD` | Lingala (Democratic Republic of the Congo). |\n| `lo_LA` | Lao (Laos). |\n| `lt_LT` | Lithuanian (Lithuania). |\n| `lu_CD` | Luba-Katanga (Democratic Republic of the Congo). |\n| `lv_LV` | Latvian (Latvia). |\n| `mg_MG` | Malagasy (Madagascar). |\n| `mh_MH` | Marshallese (Marshall Islands). |\n| `mi_NZ` | Māori (New Zealand). |\n| `mk_MK` | Macedonian (North Macedonia). |\n| `ml_IN` | Malayalam (India). |\n| `mn_MN` | Mongolian (Mongolia). |\n| `mr_IN` | Marathi (India). |\n| `ms_MY` | Malay (Malaysia). |\n| `mt_MT` | Maltese (Malta). |\n| `my_MM` | Burmese (Myanmar). |\n| `na_NR` | Nauru (Nauru). |\n| `nb_NO` | Norwegian Bokmål (Norway). |\n| `nd_ZW` | North Ndebele (Zimbabwe). |\n| `ne_NP` | Nepali (Nepal). |\n| `ng_NA` | Ndonga (Namibia). |\n| `nl_NL` | Dutch (Netherlands). |\n| `nn_NO` | Norwegian Nynorsk (Norway). |\n| `no_NO` | Norwegian (Norway). |\n| `nr_ZA` | South Ndebele (South Africa). |\n| `nv_US` | Navajo (United States). |\n| `ny_MW` | Chichewa (Malawi). |\n| `oc_FR` | Occitan (France). |\n| `oj_CA` | Ojibwa (Canada). |\n| `om_ET` | Oromo (Ethiopia). |\n| `or_IN` | Oriya (India). |\n| `os_RU` | Ossetian (Russia). |\n| `pa_IN` | Punjabi (India). |\n| `pi_IN` | Pali (India). |\n| `pl_PL` | Polish (Poland). |\n| `ps_AF` | Pashto (Afghanistan). |\n| `pt_PT` | Portuguese (Portugal). |\n| `qu_PE` | Quechua (Peru). |\n| `rm_CH` | Romansh (Switzerland). |\n| `rn_BI` | Kirundi (Burundi). |\n| `ro_RO` | Romanian (Romania). |\n| `ru_RU` | Russian (Russia). |\n| `rw_RW` | Kinyarwanda (Rwanda). |\n| `sa_IN` | Sanskrit (India). |\n| `sc_IT` | Sardinian (Italy). |\n| `sd_PK` | Sindhi (Pakistan). |\n| `se_NO` | Northern Sami (Norway). |\n| `sg_CF` | Sango (Central African Republic). |\n| `si_LK` | Sinhala (Sri Lanka). |\n| `sk_SK` | Slovak (Slovakia). |\n| `sl_SI` | Slovenian (Slovenia). |\n| `sm_WS` | Samoan (Samoa). |\n| `sn_ZW` | Shona (Zimbabwe). |\n| `so_SO` | Somali (Somalia). |\n| `sq_AL` | Albanian (Albania). |\n| `sr_RS` | Serbian (Serbia). |\n| `ss_SZ` | Swati (Eswatini). |\n| `st_LS` | Southern Sotho (Lesotho). |\n| `su_ID` | Sundanese (Indonesia). |\n| `sv_SE` | Swedish (Sweden). |\n| `sw_TZ` | Swahili (Tanzania). |\n| `ta_IN` | Tamil (India). |\n| `te_IN` | Telugu (India). |\n| `tg_TJ` | Tajik (Tajikistan). |\n| `th_TH` | Thai (Thailand). |\n| `ti_ET` | Tigrinya (Ethiopia). |\n| `tk_TM` | Turkmen (Turkmenistan). |\n| `tl_PH` | Tagalog (Philippines). |\n| `tn_BW` | Tswana (Botswana). |\n| `to_TO` | Tonga (Tonga). |\n| `tr_TR` | Turkish (Turkey). |\n| `ts_ZA` | Tsonga (South Africa). |\n| `tt_RU` | Tatar (Russia). |\n| `tw_GH` | Twi (Ghana). |\n| `ty_PF` | Tahitian (French Polynesia). |\n| `ug_CN` | Uyghur (China). |\n| `uk_UA` | Ukrainian (Ukraine). |\n| `ur_PK` | Urdu (Pakistan). |\n| `uz_UZ` | Uzbek (Uzbekistan). |\n| `ve_ZA` | Venda (South Africa). |\n| `vi_VN` | Vietnamese (Vietnam). |\n| `vo_INT` | Volapük (International). |\n| `wa_BE` | Walloon (Belgium). |\n| `wo_SN` | Wolof (Senegal). |\n| `xh_ZA` | Xhosa (South Africa). |\n| `yi_IL` | Yiddish (Israel). |\n| `yo_NG` | Yoruba (Nigeria). |\n| `za_CN` | Zhuang (China). |\n| `zh_CN` | Chinese (China). |\n| `zu_ZA` | Zulu (South Africa). |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetLevel": {
        "type": "string",
        "description": "| TargetLevel | Description |\n| --- | --- |\n| `CAMPAIGN` |  |\n| `AD_GROUP` |  |",
        "enum": [
          "CAMPAIGN",
          "AD_GROUP"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetMarketplaceScopeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceScope"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "| MarketplaceScope | Description |\n| --- | --- |\n| `GLOBAL` |  |\n| `SINGLE_MARKETPLACE` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetMatchTypeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchType"
            },
            "maxItems": 10,
            "minItems": 1,
            "description": "| MatchType | Description |\n| --- | --- |\n| `KEYWORDS_RELATED_TO_YOUR_BRAND` | Search terms related to your brand. |\n| `KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES` | Search terms related to your landing pages. |\n| `KEYWORDS_RELATED_TO_GIFTS` | Search terms related to gifts. |\n| `KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY` | Search terms shoppers often use to search for products in the same category as the products you're advertising. |\n| `KEYWORDS_RELATED_TO_PRIME_DAY` | Search terms that shoppers are likely to use during Prime Day. These keywords can include terms related to the event, like \"prime day\", combined with product-specific terms. These keywords can help you expand reach to shoppers during the sales event. These keywords will only match queries through the end of Prime Day. |\n| `PRODUCTS_SIMILAR_TO_ADVERTISED_PRODUCTS` | Products similar to products advertised as part of the ad group. |\n| `KEYWORDS_LOOSE_MATCH` | Search terms loosely matching advertised product. |\n| `KEYWORDS_CLOSE_MATCH` | Search terms closely matching advertised product. |\n| `PRODUCT_SUBSTITUTES` | Products that can be substituted for advertised product. |\n| `PRODUCT_COMPLEMENTS` | Products that complement advertised product. |\n| `PRODUCT_EXACT` | Products exactly matching the specified product. |\n| `PRODUCT_SIMILAR` | Products similar to the specified product. |\n| `EXACT` | Exact match search terms. |\n| `PHRASE` | Phrase match search terms. |\n| `BROAD` | Braod match search terms. |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetMultiStatusResponseWithPartialErrors": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetMultiStatusSuccess"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "partialSuccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetPartialIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorsIndex"
            },
            "maxItems": 1000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetMultiStatusSuccess": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          }
        },
        "required": [
          "index",
          "target"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetNegativeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "maxItems": 2,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetPartialIndex": {
        "type": "object",
        "properties": {
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "index": {
            "type": "integer",
            "maximum": 999,
            "minimum": 0,
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "required": [
          "errors",
          "index",
          "target"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetProductIdFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/TargetProductIdFilterType"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include",
          "queryTermMatchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetProductIdFilterType": {
        "type": "string",
        "description": "| TargetProductIdFilterType | Description |\n| --- | --- |\n| `EXACT_MATCH` | Filter by exact match. |\n| `BROAD_MATCH` | Filter by broad match. |",
        "enum": [
          "EXACT_MATCH",
          "BROAD_MATCH"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetStateFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "maxItems": 3,
            "minItems": 1,
            "description": "| State | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |\n| `ARCHIVED` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetSuccessResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "maxItems": 5000,
            "minItems": 0
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetTargetIdFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetTargetTypeFilter": {
        "type": "object",
        "properties": {
          "include": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetType"
            },
            "maxItems": 17,
            "minItems": 1,
            "description": "| TargetType | Description |\n| --- | --- |\n| `KEYWORD` |  |\n| `PRODUCT` |  |\n| `PRODUCT_CATEGORY` |  |\n| `AUDIENCE` |  |\n| `LOCATION` |  |\n| `DOMAIN` |  |\n| `APP` |  |\n| `DEVICE` |  |\n| `DAYPART` |  |\n| `CONTENT_CATEGORY` |  |\n| `CONTENT_GENRE` |  |\n| `CONTENT_RATING` |  |\n| `INVENTORY_SOURCE` |  |\n| `AD_INITIATION` |  |\n| `AD_PLAYER_SIZE` |  |\n| `VIDEO_AD_FORMAT` |  |\n| `THIRD_PARTY` |  |\n| `THEME` |  |\n| `CONTENT_INSTREAM_POSITION` |  |\n| `CONTENT_OUTSTREAM_POSITION` |  |\n| `VIDEO_CONTENT_DURATION` |  |\n| `FOLD_POSITION` |  |\n| `NATIVE_CONTENT_POSITION` |  |"
          }
        },
        "required": [
          "include"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetType": {
        "type": "string",
        "description": "| TargetType | Description |\n| --- | --- |\n| `KEYWORD` |  |\n| `PRODUCT` |  |\n| `PRODUCT_CATEGORY` |  |\n| `AUDIENCE` |  |\n| `LOCATION` |  |\n| `DOMAIN` |  |\n| `APP` |  |\n| `DEVICE` |  |\n| `DAYPART` |  |\n| `CONTENT_CATEGORY` |  |\n| `CONTENT_GENRE` |  |\n| `CONTENT_RATING` |  |\n| `INVENTORY_SOURCE` |  |\n| `AD_INITIATION` |  |\n| `AD_PLAYER_SIZE` |  |\n| `VIDEO_AD_FORMAT` |  |\n| `THIRD_PARTY` |  |\n| `THEME` |  |\n| `CONTENT_INSTREAM_POSITION` |  |\n| `CONTENT_OUTSTREAM_POSITION` |  |\n| `VIDEO_CONTENT_DURATION` |  |\n| `FOLD_POSITION` |  |\n| `NATIVE_CONTENT_POSITION` |  |",
        "enum": [
          "KEYWORD",
          "PRODUCT",
          "PRODUCT_CATEGORY",
          "AUDIENCE",
          "LOCATION",
          "DOMAIN",
          "APP",
          "DEVICE",
          "DAYPART",
          "CONTENT_CATEGORY",
          "CONTENT_GENRE",
          "CONTENT_RATING",
          "INVENTORY_SOURCE",
          "AD_INITIATION",
          "AD_PLAYER_SIZE",
          "VIDEO_AD_FORMAT",
          "THIRD_PARTY",
          "THEME",
          "CONTENT_INSTREAM_POSITION",
          "CONTENT_OUTSTREAM_POSITION",
          "VIDEO_CONTENT_DURATION",
          "FOLD_POSITION",
          "NATIVE_CONTENT_POSITION"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetUpdate": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string",
            "description": "A unique identifier for the target."
          },
          "marketplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "A list of country codes representing Amazon marketplaces\n| Marketplace | Description |\n| --- | --- |\n| `AE` |  |\n| `AU` |  |\n| `BE` |  |\n| `BR` |  |\n| `CA` |  |\n| `DE` |  |\n| `EG` |  |\n| `ES` |  |\n| `FR` |  |\n| `GB` |  |\n| `IN` |  |\n| `IT` |  |\n| `JP` |  |\n| `MX` |  |\n| `NL` |  |\n| `PL` |  |\n| `SA` |  |\n| `SE` |  |\n| `SG` |  |\n| `TR` |  |\n| `US` |  |"
          },
          "state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "bid": {
            "$ref": "#/components/schemas/UpdateTargetBid"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTag"
            },
            "maxItems": 50,
            "minItems": 0
          }
        },
        "required": [
          "targetId"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TargetingSettings": {
        "type": "object",
        "properties": {
          "siteLanguage": {
            "$ref": "#/components/schemas/SiteLanguage"
          },
          "enableLanguageTargeting": {
            "type": "boolean",
            "description": "If set to true, creatives will only target supply where the content language matches the creative language."
          },
          "amazonViewability": {
            "$ref": "#/components/schemas/AmazonViewability"
          },
          "userLocationSignal": {
            "$ref": "#/components/schemas/UserLocationSignal"
          },
          "timeZoneType": {
            "$ref": "#/components/schemas/TimeZoneType"
          },
          "automatedTargetingTactic": {
            "$ref": "#/components/schemas/AutomatedTargetingTactic"
          },
          "defaultAudienceTargetingMatchType": {
            "$ref": "#/components/schemas/DefaultAudienceTargetingMatchType"
          },
          "videoCompletionTier": {
            "$ref": "#/components/schemas/VideoCompletionTier"
          },
          "targetedPGDealId": {
            "type": "string",
            "description": "DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here."
          },
          "tacticsConvertersExclusionType": {
            "$ref": "#/components/schemas/TacticsConvertersExclusionType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThemeMatchType": {
        "type": "string",
        "description": "| ThemeMatchType | Description |\n| --- | --- |\n| `KEYWORDS_RELATED_TO_YOUR_BRAND` | Search terms related to your brand. |\n| `KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES` | Search terms related to your landing pages. |\n| `KEYWORDS_RELATED_TO_GIFTS` | Search terms related to gifts. |\n| `KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY` | Search terms shoppers often use to search for products in the same category as the products you're advertising. |\n| `KEYWORDS_RELATED_TO_PRIME_DAY` | Search terms that shoppers are likely to use during Prime Day. These keywords can include terms related to the event, like \"prime day\", combined with product-specific terms. These keywords can help you expand reach to shoppers during the sales event. These keywords will only match queries through the end of Prime Day. |\n| `PRODUCTS_SIMILAR_TO_ADVERTISED_PRODUCTS` | Products similar to products advertised as part of the ad group. |\n| `KEYWORDS_LOOSE_MATCH` | Search terms loosely matching advertised product. |\n| `KEYWORDS_CLOSE_MATCH` | Search terms closely matching advertised product. |\n| `PRODUCT_SUBSTITUTES` | Products that can be substituted for advertised product. |\n| `PRODUCT_COMPLEMENTS` | Products that complement advertised product. |",
        "enum": [
          "KEYWORDS_RELATED_TO_YOUR_BRAND",
          "KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES",
          "KEYWORDS_RELATED_TO_GIFTS",
          "KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY",
          "KEYWORDS_RELATED_TO_PRIME_DAY",
          "PRODUCTS_SIMILAR_TO_ADVERTISED_PRODUCTS",
          "KEYWORDS_LOOSE_MATCH",
          "KEYWORDS_CLOSE_MATCH",
          "PRODUCT_SUBSTITUTES",
          "PRODUCT_COMPLEMENTS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThemeTarget": {
        "type": "object",
        "description": "Theme targets let advertisers select high-performing targets based on a common theme.",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/ThemeMatchType"
          }
        },
        "required": [
          "matchType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyCreative": {
        "type": "object",
        "properties": {
          "thirdPartyVideoSettings": {
            "$ref": "#/components/schemas/ThirdPartyVideoSettings"
          },
          "thirdPartyDisplaySettings": {
            "$ref": "#/components/schemas/ThirdPartyDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyDisplaySettings": {
        "type": "object",
        "properties": {
          "thirdPartyTagHostingSource": {
            "type": "string",
            "description": "The html tag to use to fetch this creative from the 3p ad server."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional html to be included along with the creative when rendered."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Size"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyTarget": {
        "type": "object",
        "properties": {
          "thirdPartyTargetType": {
            "$ref": "#/components/schemas/ThirdPartyTargetType"
          },
          "thirdPartyTargetDetails": {
            "$ref": "#/components/schemas/ThirdPartyTargetDetails"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "doubleVerifyFraudInvalidTraffic",
            "properties": {
              "doubleVerifyFraudInvalidTraffic": {
                "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
              }
            },
            "required": [
              "doubleVerifyFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyStandardDisplayBrandSafety",
            "properties": {
              "doubleVerifyStandardDisplayBrandSafety": {
                "$ref": "#/components/schemas/DoubleVerifyStandardDisplayBrandSafety"
              }
            },
            "required": [
              "doubleVerifyStandardDisplayBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyBrandSafety",
            "properties": {
              "doubleVerifyBrandSafety": {
                "$ref": "#/components/schemas/DoubleVerifyBrandSafety"
              }
            },
            "required": [
              "doubleVerifyBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyViewability",
            "properties": {
              "doubleVerifyViewability": {
                "$ref": "#/components/schemas/DoubleVerifyViewability"
              }
            },
            "required": [
              "doubleVerifyViewability"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyAuthenticBrandSafety",
            "properties": {
              "doubleVerifyAuthenticBrandSafety": {
                "$ref": "#/components/schemas/DoubleVerifyAuthenticBrandSafety"
              }
            },
            "required": [
              "doubleVerifyAuthenticBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyCustomContextualSegmentId",
            "properties": {
              "doubleVerifyCustomContextualSegmentId": {
                "$ref": "#/components/schemas/DoubleVerifyCustomContextualSegmentId"
              }
            },
            "required": [
              "doubleVerifyCustomContextualSegmentId"
            ]
          },
          {
            "type": "object",
            "title": "doubleVerifyAuthenticAttention",
            "properties": {
              "doubleVerifyAuthenticAttention": {
                "$ref": "#/components/schemas/DoubleVerifyAuthenticAttention"
              }
            },
            "required": [
              "doubleVerifyAuthenticAttention"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceFraudInvalidTraffic",
            "properties": {
              "integralAdScienceFraudInvalidTraffic": {
                "$ref": "#/components/schemas/IntegralAdScienceFraudInvalidTraffic"
              }
            },
            "required": [
              "integralAdScienceFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceBrandSafety",
            "properties": {
              "integralAdScienceBrandSafety": {
                "$ref": "#/components/schemas/IntegralAdScienceBrandSafety"
              }
            },
            "required": [
              "integralAdScienceBrandSafety"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceViewability",
            "properties": {
              "integralAdScienceViewability": {
                "$ref": "#/components/schemas/IntegralAdScienceViewability"
              }
            },
            "required": [
              "integralAdScienceViewability"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceContextualTargeting",
            "properties": {
              "integralAdScienceContextualTargeting": {
                "$ref": "#/components/schemas/IntegralAdScienceContextualTargeting"
              }
            },
            "required": [
              "integralAdScienceContextualTargeting"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceContextualAvoidance",
            "properties": {
              "integralAdScienceContextualAvoidance": {
                "$ref": "#/components/schemas/IntegralAdScienceContextualAvoidance"
              }
            },
            "required": [
              "integralAdScienceContextualAvoidance"
            ]
          },
          {
            "type": "object",
            "title": "pixalateFraudInvalidTraffic",
            "properties": {
              "pixalateFraudInvalidTraffic": {
                "$ref": "#/components/schemas/PixalateFraudInvalidTraffic"
              }
            },
            "required": [
              "pixalateFraudInvalidTraffic"
            ]
          },
          {
            "type": "object",
            "title": "integralAdScienceQualitySync",
            "properties": {
              "integralAdScienceQualitySync": {
                "$ref": "#/components/schemas/IntegralAdScienceQualitySync"
              }
            },
            "required": [
              "integralAdScienceQualitySync"
            ]
          },
          {
            "type": "object",
            "title": "newsGuardBrandGuardTrustedNewsTargeting",
            "properties": {
              "newsGuardBrandGuardTrustedNewsTargeting": {
                "$ref": "#/components/schemas/NewsGuardBrandGuardTrustedNewsTargeting"
              }
            },
            "required": [
              "newsGuardBrandGuardTrustedNewsTargeting"
            ]
          },
          {
            "type": "object",
            "title": "newsGuardBrandGuardMisinformationSafety",
            "properties": {
              "newsGuardBrandGuardMisinformationSafety": {
                "$ref": "#/components/schemas/NewsGuardBrandGuardMisinformationSafety"
              }
            },
            "required": [
              "newsGuardBrandGuardMisinformationSafety"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyTargetType": {
        "type": "string",
        "description": "| ThirdPartyTargetType | Description |\n| --- | --- |\n| `DOUBLE_VERIFY_FRAUD_INVALID_TRAFFIC` |  |\n| `DOUBLE_VERIFY_STANDARD_DISPLAY_BRAND_SAFETY` |  |\n| `DOUBLE_VERIFY_BRAND_SAFETY` |  |\n| `DOUBLE_VERIFY_VIEWABILITY` |  |\n| `DOUBLE_VERIFY_AUTHENTIC_BRAND_SAFETY` |  |\n| `DOUBLE_VERIFY_CUSTOM_CONTEXTUAL_SEGMENT_ID` |  |\n| `DOUBLE_VERIFY_AUTHENTIC_ATTENTION` |  |\n| `INTEGRAL_AD_SCIENCE_FRAUD_INVALID_TRAFFIC` |  |\n| `INTEGRAL_AD_SCIENCE_BRAND_SAFETY` |  |\n| `INTEGRAL_AD_SCIENCE_VIEWABILITY` |  |\n| `INTEGRAL_AD_SCIENCE_CONTEXTUAL_TARGETING` |  |\n| `INTEGRAL_AD_SCIENCE_CONTEXTUAL_AVOIDANCE` |  |\n| `PIXALATE_FRAUD_INVALID_TRAFFIC` |  |\n| `INTEGRAL_AD_SCIENCE_QUALITY_SYNC` | Integral Ad Science (IAS) Quality |\n| `NEWS_GUARD_BRAND_GUARD_TRUSTED_NEWS_TARGETING` | NewsGuard Trusted News Targeting. NewsGuard is a rating system for news and information websites. |\n| `NEWS_GUARD_BRAND_GUARD_MISINFORMATION_SAFETY` | NewsGuard Misinformation Safety. NewsGuard is a rating system for news and information websites. |",
        "enum": [
          "DOUBLE_VERIFY_FRAUD_INVALID_TRAFFIC",
          "DOUBLE_VERIFY_STANDARD_DISPLAY_BRAND_SAFETY",
          "DOUBLE_VERIFY_BRAND_SAFETY",
          "DOUBLE_VERIFY_VIEWABILITY",
          "DOUBLE_VERIFY_AUTHENTIC_BRAND_SAFETY",
          "DOUBLE_VERIFY_CUSTOM_CONTEXTUAL_SEGMENT_ID",
          "DOUBLE_VERIFY_AUTHENTIC_ATTENTION",
          "INTEGRAL_AD_SCIENCE_FRAUD_INVALID_TRAFFIC",
          "INTEGRAL_AD_SCIENCE_BRAND_SAFETY",
          "INTEGRAL_AD_SCIENCE_VIEWABILITY",
          "INTEGRAL_AD_SCIENCE_CONTEXTUAL_TARGETING",
          "INTEGRAL_AD_SCIENCE_CONTEXTUAL_AVOIDANCE",
          "PIXALATE_FRAUD_INVALID_TRAFFIC",
          "INTEGRAL_AD_SCIENCE_QUALITY_SYNC",
          "NEWS_GUARD_BRAND_GUARD_TRUSTED_NEWS_TARGETING",
          "NEWS_GUARD_BRAND_GUARD_MISINFORMATION_SAFETY"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ThirdPartyVideoSettings": {
        "type": "object",
        "properties": {
          "vastUrl": {
            "type": "string",
            "description": "The url to use to fetch the VAST XML for this video creative."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TimeOfDay": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]Z$",
            "description": "Selected start time"
          },
          "endTime": {
            "type": "string",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]Z$",
            "description": "Selected end time"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TimeUnit": {
        "type": "string",
        "description": "| TimeUnit | Description |\n| --- | --- |\n| `DAYS` |  |\n| `HOURS` |  |\n| `MINUTES` |  |",
        "enum": [
          "DAYS",
          "HOURS",
          "MINUTES"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TimeZoneType": {
        "type": "string",
        "description": "| TimeZoneType | Description |\n| --- | --- |\n| `VIEWER` |  |\n| `ADVERTISER_REGION` |  |",
        "enum": [
          "VIEWER",
          "ADVERTISER_REGION"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TooManyRequestsResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TwitchContentRating": {
        "type": "object",
        "properties": {
          "twitchContentRating": {
            "$ref": "#/components/schemas/TwitchContentRatingEnum"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "TwitchContentRatingEnum": {
        "type": "string",
        "description": "| TwitchContentRatingEnum | Description |\n| --- | --- |\n| `TWITCH_MODERATE` | Twitch Content with moderate content exclusions based on content classification labels received from Twitch. |\n| `TWITCH_RESTRICTIVE` | Twitch Content with restrictive content exlcusions based on content classification labels received from Twitch. |",
        "enum": [
          "TWITCH_MODERATE",
          "TWITCH_RESTRICTIVE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UnauthorizedResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdAssociationRequest": {
        "type": "object",
        "properties": {
          "adAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdAssociationUpdate"
            },
            "maxItems": 20,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdGroupBid": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "baseBid": {
            "type": "number",
            "description": "The lower bound bid used for the ads in the ad group.",
            "format": "double"
          },
          "maxAverageBid": {
            "type": "number",
            "description": "The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).",
            "format": "double"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdGroupBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdGroupBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "defaultBid": {
            "type": "number",
            "description": "The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdGroupBudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "dailyMinSpendValue": {
            "type": "number",
            "description": "Denotes the daily minimum spend on the ad group in local currency.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdGroupRequest": {
        "type": "object",
        "properties": {
          "adGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupUpdate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdRequest": {
        "type": "object",
        "properties": {
          "ads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdUpdate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdvertisedProductMarketplaceSetting": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "$ref": "#/components/schemas/UpdateGlobalStoreSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAdvertisedProducts": {
        "type": "object",
        "properties": {
          "productIdType": {
            "$ref": "#/components/schemas/ProductIdType"
          },
          "productId": {
            "type": "string",
            "description": "The identifier of the advertised product."
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/UpdateGlobalStoreSettings"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdvertisedProductMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of advertised product selectively applied at the given marketplace level"
          }
        },
        "required": [
          "productIdType"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAmazonViewability": {
        "type": "object",
        "properties": {
          "viewabilityTier": {
            "$ref": "#/components/schemas/ViewabilityTier"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAssetBasedCreativeCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "assetBasedCreativeCallToActionSettings",
            "properties": {
              "assetBasedCreativeCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateAssetBasedCreativeCallToActionSettings"
              }
            },
            "required": [
              "assetBasedCreativeCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAssetBasedCreativeCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetBasedCreativeCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for AssetBasedCreative."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAssetBasedCreativeSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The logos to use for the Asset Based Creative experience."
          },
          "customVideos": {
            "$ref": "#/components/schemas/UpdateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Asset Based Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Asset Based Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Asset Based Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/UpdateAssetBasedCreativeCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAudienceBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given audience and bid adjustment settings.",
            "format": "int32"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the Audience to apply bid adjustment."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAudio": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the audio asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the audio asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateAudioCreative": {
        "type": "object",
        "properties": {
          "standardAudioSettings": {
            "$ref": "#/components/schemas/UpdateStandardAudioExperienceSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBidAdjustments": {
        "type": "object",
        "properties": {
          "placementBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatePlacementBidAdjustment"
            },
            "maxItems": 4,
            "minItems": 0,
            "description": "Bid adjustments based on ad placements."
          },
          "audienceBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAudienceBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Bid Adjustments based on the audiences"
          },
          "shopperSegmentBidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateShopperSegmentBidAdjustment"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "Legacy SB field (marked for deprecation)"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBidSettings": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "bidAdjustments": {
            "$ref": "#/components/schemas/UpdateBidAdjustments"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBrandStoreCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "brandStoreCallToActionSettings",
            "properties": {
              "brandStoreCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateBrandStoreCallToActionSettings"
              }
            },
            "required": [
              "brandStoreCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBrandStoreCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "callToActionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandStoreCallToActionType"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "Type of CallToAction for BrandStore."
          },
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBrandStoreSettings": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The brand of the product(s) being advertised."
          },
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "squareImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The square image(s) to use."
          },
          "tallImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The tall image(s) to use."
          },
          "wideImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The wide image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/UpdateImage"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The headline(s) to use for the Brand Store Creative experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimers to use for the Brand Store Creative experience."
          },
          "bodyText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The body text to use for the Brand Store Creative experience."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional HTML to include with the render response for display inventory targets."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/UpdateBrandStoreCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBudget": {
        "type": "object",
        "properties": {
          "recurrenceTimePeriod": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "budgetValue": {
            "$ref": "#/components/schemas/UpdateBudgetValue"
          }
        },
        "required": [
          "budgetValue",
          "recurrenceTimePeriod"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBudgetSettings": {
        "type": "object",
        "properties": {
          "budgetAllocation": {
            "$ref": "#/components/schemas/BudgetAllocation"
          },
          "offAmazonBudgetControlStrategy": {
            "$ref": "#/components/schemas/OffAmazonBudgetControlStrategy"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateBudgetValue": {
        "oneOf": [
          {
            "type": "object",
            "title": "monetaryBudgetValue",
            "properties": {
              "monetaryBudgetValue": {
                "$ref": "#/components/schemas/UpdateMonetaryBudgetValue"
              }
            },
            "required": [
              "monetaryBudgetValue"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCampaignFlight": {
        "type": "object",
        "properties": {
          "flightId": {
            "type": "string",
            "description": "The ID associated with the flight."
          },
          "budget": {
            "$ref": "#/components/schemas/UpdateBudget"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date of the flight.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCampaignOptimizations": {
        "type": "object",
        "properties": {
          "bidSettings": {
            "$ref": "#/components/schemas/UpdateBidSettings"
          },
          "goalSettings": {
            "$ref": "#/components/schemas/UpdateGoalSettings"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/UpdateBudgetSettings"
          },
          "primaryInventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryInventoryType"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "Primary inventory type of the campaign for filtering KPIs and recommending tactics."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCampaignRequest": {
        "type": "object",
        "properties": {
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignUpdate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCardCreativeElement": {
        "type": "object",
        "properties": {
          "headline": {
            "type": "string",
            "description": "The headline used for the card."
          },
          "landingPage": {
            "$ref": "#/components/schemas/UpdateStoreSpotlightLandingPage"
          },
          "products": {
            "$ref": "#/components/schemas/UpdateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateClickToAppDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The app that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateClickToUrlDisplayCallToActionSettings": {
        "type": "object",
        "description": "A CTA that directs a customer to a provided url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The application url that customers are directed to."
          },
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateClickToUrlVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "deepLinkingBehavior": {
            "$ref": "#/components/schemas/DeepLinkingBehavior"
          },
          "url": {
            "type": "string",
            "description": "The url to redirect the user via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateComponentCreative": {
        "type": "object",
        "properties": {
          "responsiveEcommerceSettings": {
            "$ref": "#/components/schemas/UpdateResponsiveEcommerceSettings"
          },
          "brandStoreSettings": {
            "$ref": "#/components/schemas/UpdateBrandStoreSettings"
          },
          "assetBasedCreativeSettings": {
            "$ref": "#/components/schemas/UpdateAssetBasedCreativeSettings"
          },
          "productVideoSettings": {
            "$ref": "#/components/schemas/UpdateProductVideoSettings"
          },
          "storeSpotlightSettings": {
            "$ref": "#/components/schemas/UpdateStoreSpotlightSettings"
          },
          "productCollectionSettings": {
            "$ref": "#/components/schemas/UpdateProductCollectionSettings"
          },
          "dynamicCollectionSettings": {
            "$ref": "#/components/schemas/UpdateDynamicCollectionSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCreative": {
        "oneOf": [
          {
            "type": "object",
            "title": "audioCreative",
            "properties": {
              "audioCreative": {
                "$ref": "#/components/schemas/UpdateAudioCreative"
              }
            },
            "required": [
              "audioCreative"
            ]
          },
          {
            "type": "object",
            "title": "displayCreative",
            "properties": {
              "displayCreative": {
                "$ref": "#/components/schemas/UpdateDisplayCreative"
              }
            },
            "required": [
              "displayCreative"
            ]
          },
          {
            "type": "object",
            "title": "thirdPartyCreative",
            "properties": {
              "thirdPartyCreative": {
                "$ref": "#/components/schemas/UpdateThirdPartyCreative"
              }
            },
            "required": [
              "thirdPartyCreative"
            ]
          },
          {
            "type": "object",
            "title": "videoCreative",
            "properties": {
              "videoCreative": {
                "$ref": "#/components/schemas/UpdateVideoCreative"
              }
            },
            "required": [
              "videoCreative"
            ]
          },
          {
            "type": "object",
            "title": "componentCreative",
            "properties": {
              "componentCreative": {
                "$ref": "#/components/schemas/UpdateComponentCreative"
              }
            },
            "required": [
              "componentCreative"
            ]
          },
          {
            "type": "object",
            "title": "productCreative",
            "properties": {
              "productCreative": {
                "$ref": "#/components/schemas/UpdateProductCreative"
              }
            },
            "required": [
              "productCreative"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateCreativeTrackingUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A url to be triggered for tracking events."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateDisplayCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "clickToUrlDisplayCallToActionSettings",
            "properties": {
              "clickToUrlDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateClickToUrlDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlDisplayCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToAppDisplayCallToActionSettings",
            "properties": {
              "clickToAppDisplayCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateClickToAppDisplayCallToActionSettings"
              }
            },
            "required": [
              "clickToAppDisplayCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateDisplayCreative": {
        "type": "object",
        "properties": {
          "standardDisplaySettings": {
            "$ref": "#/components/schemas/UpdateStandardDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateDynamicCollectionSettings": {
        "type": "object",
        "description": "A collection of multi-format creative assets intended for use across a group of products.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdvertisedProducts"
            },
            "maxItems": 50,
            "minItems": 0,
            "description": "The products to be used in the ad."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateFee": {
        "type": "object",
        "properties": {
          "feeType": {
            "$ref": "#/components/schemas/FeeType"
          },
          "addToBudgetSpentAmount": {
            "type": "boolean",
            "description": "Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports."
          },
          "thirdPartyProvider": {
            "$ref": "#/components/schemas/FeesThirdPartyProvider"
          },
          "feeValue": {
            "type": "number",
            "description": "The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateFormatProperties": {
        "type": "object",
        "properties": {
          "top": {
            "type": "integer",
            "description": "The number of pixels from the top of the image where the crop should begin.",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "description": "The number of pixels from the left of the image where the crop should begin.",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "The width (in pixels) of the cropped image.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height (in pixels) of the cropped image.",
            "format": "int32"
          },
          "applyBorder": {
            "type": "boolean",
            "description": "Apply a boarder to the image to fit rules for some supplies."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateFrequency": {
        "type": "object",
        "properties": {
          "timeUnit": {
            "$ref": "#/components/schemas/TimeUnit"
          },
          "timeCount": {
            "type": "integer",
            "maximum": 60,
            "minimum": 1,
            "description": "The value associated with the time and unit of time for this frequency cap.",
            "format": "int32"
          },
          "eventMaxCount": {
            "type": "integer",
            "maximum": 99000,
            "minimum": 1,
            "description": "The maximum number of times an EventType is served per user.",
            "format": "int32"
          },
          "frequencyTargetingSetting": {
            "$ref": "#/components/schemas/FrequencyTargetingSetting"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateGlobalStoreSettings": {
        "type": "object",
        "properties": {
          "catalogSourceMarketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateGoalSettings": {
        "type": "object",
        "properties": {
          "kpi": {
            "$ref": "#/components/schemas/KPI"
          },
          "kpiValue": {
            "type": "number",
            "description": "The value of the KPI that the campaign is working to optimize.",
            "format": "double"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateImage": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the image asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the image asset."
          },
          "formatProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateFormatProperties"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The cropping and positioning properties associated with the asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateLandingPageAsins": {
        "type": "object",
        "properties": {
          "asins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "description": "For landing page of type ASIN_LIST, the list of ASINs used to create the landing page."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateLearnMoreVideoCallToActionSettings": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to drive users to learn more via the video CallToAction."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateMonetaryBudget": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The monetary amount of the budget cap in the given currency.",
            "format": "double"
          }
        },
        "required": [
          "value"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateMonetaryBudgetMarketplaceSetting": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "monetaryBudget": {
            "$ref": "#/components/schemas/UpdateMonetaryBudget"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateMonetaryBudgetValue": {
        "type": "object",
        "properties": {
          "monetaryBudget": {
            "$ref": "#/components/schemas/UpdateMonetaryBudget"
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateMonetaryBudgetMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "List of Monetary Budget values selectively applied at the given marketplace level"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateOnlineVideoSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/UpdateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/UpdateVideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/UpdateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateOptimization": {
        "type": "object",
        "properties": {
          "bidStrategy": {
            "$ref": "#/components/schemas/BidStrategy"
          },
          "budgetSettings": {
            "$ref": "#/components/schemas/UpdateAdGroupBudgetSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdatePacing": {
        "type": "object",
        "properties": {
          "deliveryProfile": {
            "$ref": "#/components/schemas/DeliveryProfile"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdatePlacementBidAdjustment": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "The selection of the percentage change associated with a given placement and bid adjustment settings.",
            "format": "int32"
          },
          "placement": {
            "$ref": "#/components/schemas/Placement"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdatePortfolioRequest": {
        "type": "object",
        "properties": {
          "portfolios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioUpdate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateProductCollectionLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/ProductCollectionLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL associated to the landing page. Read only if landingPageType is ASIN_LIST"
          },
          "landingPageAsins": {
            "$ref": "#/components/schemas/UpdateLandingPageAsins"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateProductCollectionSettings": {
        "type": "object",
        "description": "An ad creative that contains multiple products and a custom image.",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the ad."
          },
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/UpdateProductCollectionLandingPage"
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The set of custom images featured in the ad."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateProductCreative": {
        "type": "object",
        "properties": {
          "productCreativeSettings": {
            "$ref": "#/components/schemas/UpdateProductCreativeSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateProductCreativeSettings": {
        "type": "object",
        "description": "An ad with a creative built based on the product being advertised.",
        "properties": {
          "advertisedProduct": {
            "$ref": "#/components/schemas/UpdateAdvertisedProducts"
          },
          "headline": {
            "type": "string",
            "description": "The headline/custom text associated with the ad creative."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateProductVideoSettings": {
        "type": "object",
        "description": "An ad with a creative that includes a video.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/UpdateVideoLandingPage"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdvertisedProducts"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The products featured in the video ad."
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateVideo"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The video assets used in the ad."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateResponsiveEcommerceSettings": {
        "type": "object",
        "properties": {
          "optimizationGoalKpi": {
            "$ref": "#/components/schemas/CreativeOptimizationGoalKpi"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdvertisedProducts"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The products advertised for the Responsive eCommerce experience."
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The image(s) to use."
          },
          "logos": {
            "$ref": "#/components/schemas/UpdateImage"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "headlines": {
            "type": "string",
            "description": "The headline to use for the Responsive eCommerce experience."
          },
          "disclaimers": {
            "type": "string",
            "description": "The disclaimer to use for the Responsive eCommerce experience."
          },
          "inventoryTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInventoryType"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The inventory types this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          },
          "recAdVariations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceAdVariations"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The rendering variations selected for the Responsive eCommerce experience."
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The placement sizes this creative should serve on."
          },
          "responsiveSizingBehavior": {
            "$ref": "#/components/schemas/ResponsiveSizingBehavior"
          },
          "supportedThirdPartySellers": {
            "$ref": "#/components/schemas/SupportedThirdPartySellers"
          },
          "creativePropertiesToOptimize": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponsiveEcommerceCreativePropertiesToOptimize"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The CreativeProperty Amazon will enhance or generate based on various factors like audience, placement etc."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateShopperSegmentBidAdjustment": {
        "type": "object",
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateSize": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "The width of the creative placement.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The height of the creative placement.",
            "format": "int32"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateStandardAudioExperienceSettings": {
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/UpdateAdvertisedProducts"
          },
          "audio": {
            "$ref": "#/components/schemas/UpdateAudio"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded. Urls cannot exceed 2048 characters."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateStandardDisplaySettings": {
        "type": "object",
        "properties": {
          "customImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 10,
            "minItems": 0,
            "description": "The custom images to use for the standard display experience."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "callToAction": {
            "$ref": "#/components/schemas/UpdateDisplayCallToAction"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateState": {
        "type": "string",
        "description": "| UpdateState | Description |\n| --- | --- |\n| `ENABLED` |  |\n| `PAUSED` |  |",
        "enum": [
          "ENABLED",
          "PAUSED"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateStoreSpotlightLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/StoreSpotlightLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateStoreSpotlightSettings": {
        "type": "object",
        "description": "An ad creative that contains ASINs within a brand Store.",
        "properties": {
          "brand": {
            "type": "string",
            "description": "The name of the brand being advertised."
          },
          "brandLogos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateImage"
            },
            "maxItems": 2,
            "minItems": 0,
            "description": "The brand logo image assets to be used in the ad."
          },
          "headlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0,
            "description": "The headline submitted as part of the ad creative. During your campaign, Amazon will optimize amongst the headlines you provide to match customer intent."
          },
          "landingPage": {
            "$ref": "#/components/schemas/UpdateStoreSpotlightLandingPage"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCardCreativeElement"
            },
            "maxItems": 3,
            "minItems": 0,
            "description": "The sub-elements of the creative. Each card highlights a different ASIN associated to a brand Store."
          },
          "enableCreativeAutoTranslation": {
            "type": "boolean",
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateStreamingTvSettings": {
        "type": "object",
        "properties": {
          "videos": {
            "$ref": "#/components/schemas/UpdateVideo"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "callToActions": {
            "$ref": "#/components/schemas/UpdateVideoCallToAction"
          },
          "products": {
            "$ref": "#/components/schemas/UpdateAdvertisedProducts"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateTag": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          },
          "value": {
            "type": "string",
            "description": "A custom key value pair entered by the advertiser."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateTargetBid": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double",
            "nullable": true
          },
          "marketplaceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTargetBidMarketplaceSetting"
            },
            "maxItems": 30,
            "minItems": 0,
            "description": "The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract",
        "nullable": true
      },
      "UpdateTargetBidMarketplaceSetting": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The maximum bid for a target.",
            "format": "double"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateTargetRequest": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetUpdate"
            },
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateTargetingSettings": {
        "type": "object",
        "properties": {
          "enableLanguageTargeting": {
            "type": "boolean",
            "description": "If set to true, creatives will only target supply where the content language matches the creative language."
          },
          "amazonViewability": {
            "$ref": "#/components/schemas/UpdateAmazonViewability"
          },
          "userLocationSignal": {
            "$ref": "#/components/schemas/UserLocationSignal"
          },
          "timeZoneType": {
            "$ref": "#/components/schemas/TimeZoneType"
          },
          "defaultAudienceTargetingMatchType": {
            "$ref": "#/components/schemas/DefaultAudienceTargetingMatchType"
          },
          "videoCompletionTier": {
            "$ref": "#/components/schemas/VideoCompletionTier"
          },
          "targetedPGDealId": {
            "type": "string",
            "description": "DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here."
          },
          "tacticsConvertersExclusionType": {
            "$ref": "#/components/schemas/TacticsConvertersExclusionType"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateThirdPartyCreative": {
        "type": "object",
        "properties": {
          "thirdPartyVideoSettings": {
            "$ref": "#/components/schemas/UpdateThirdPartyVideoSettings"
          },
          "thirdPartyDisplaySettings": {
            "$ref": "#/components/schemas/UpdateThirdPartyDisplaySettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateThirdPartyDisplaySettings": {
        "type": "object",
        "properties": {
          "thirdPartyTagHostingSource": {
            "type": "string",
            "description": "The html tag to use to fetch this creative from the 3p ad server."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Additional html to be included along with the creative when rendered."
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/AdChoicesPosition"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "creativeSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSize"
            },
            "maxItems": 20,
            "minItems": 0,
            "description": "The list of placement sizes this creative should serve on."
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          },
          "clickTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an click is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateThirdPartyVideoSettings": {
        "type": "object",
        "properties": {
          "vastUrl": {
            "type": "string",
            "description": "The url to use to fetch the VAST XML for this video creative."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageLocale"
          },
          "impressionTrackingUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCreativeTrackingUrl"
            },
            "maxItems": 5,
            "minItems": 0,
            "description": "The third party urls to trigger when an impression is recorded."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateVideo": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the video asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the video asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateVideoCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "learnMoreVideoCallToActionSettings",
            "properties": {
              "learnMoreVideoCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateLearnMoreVideoCallToActionSettings"
              }
            },
            "required": [
              "learnMoreVideoCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToUrlVideoCallToActionSettings",
            "properties": {
              "clickToUrlVideoCallToActionSettings": {
                "$ref": "#/components/schemas/UpdateClickToUrlVideoCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlVideoCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateVideoCreative": {
        "type": "object",
        "properties": {
          "streamingTvSettings": {
            "$ref": "#/components/schemas/UpdateStreamingTvSettings"
          },
          "onlineVideoSettings": {
            "$ref": "#/components/schemas/UpdateOnlineVideoSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UpdateVideoLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/VideoLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "UserLocationSignal": {
        "type": "string",
        "description": "| UserLocationSignal | Description |\n| --- | --- |\n| `CURRENT` |  |\n| `MULTIPLE_SIGNALS` |  |",
        "enum": [
          "CURRENT",
          "MULTIPLE_SIGNALS"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "Video": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The asset library ID associated with the video asset."
          },
          "assetVersion": {
            "type": "string",
            "description": "The asset library version associated with the video asset."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoAdFormat": {
        "type": "string",
        "description": "| VideoAdFormat | Description |\n| --- | --- |\n| `INSTREAM` |  |\n| `FULL_EPISODE_PLAYER` |  |\n| `OUTSTREAM` |  |",
        "enum": [
          "INSTREAM",
          "FULL_EPISODE_PLAYER",
          "OUTSTREAM"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoAdFormatTarget": {
        "type": "object",
        "description": "Target based on the video ad format.",
        "properties": {
          "videoAdFormat": {
            "$ref": "#/components/schemas/VideoAdFormat"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoCallToAction": {
        "oneOf": [
          {
            "type": "object",
            "title": "learnMoreVideoCallToActionSettings",
            "properties": {
              "learnMoreVideoCallToActionSettings": {
                "$ref": "#/components/schemas/LearnMoreVideoCallToActionSettings"
              }
            },
            "required": [
              "learnMoreVideoCallToActionSettings"
            ]
          },
          {
            "type": "object",
            "title": "clickToUrlVideoCallToActionSettings",
            "properties": {
              "clickToUrlVideoCallToActionSettings": {
                "$ref": "#/components/schemas/ClickToUrlVideoCallToActionSettings"
              }
            },
            "required": [
              "clickToUrlVideoCallToActionSettings"
            ]
          }
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoCompletionTier": {
        "type": "string",
        "description": "| VideoCompletionTier | Description |\n| --- | --- |\n| `ALL_TIERS` |  |\n| `GREATER_THAN_10_PERCENT` |  |\n| `GREATER_THAN_20_PERCENT` |  |\n| `GREATER_THAN_30_PERCENT` |  |\n| `GREATER_THAN_40_PERCENT` |  |\n| `GREATER_THAN_50_PERCENT` |  |\n| `GREATER_THAN_60_PERCENT` |  |\n| `GREATER_THAN_70_PERCENT` |  |\n| `GREATER_THAN_80_PERCENT` |  |\n| `GREATER_THAN_90_PERCENT` |  |",
        "enum": [
          "ALL_TIERS",
          "GREATER_THAN_10_PERCENT",
          "GREATER_THAN_20_PERCENT",
          "GREATER_THAN_30_PERCENT",
          "GREATER_THAN_40_PERCENT",
          "GREATER_THAN_50_PERCENT",
          "GREATER_THAN_60_PERCENT",
          "GREATER_THAN_70_PERCENT",
          "GREATER_THAN_80_PERCENT",
          "GREATER_THAN_90_PERCENT"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoContentDuration": {
        "type": "string",
        "description": "| VideoContentDuration | Description |\n| --- | --- |\n| `SHORT` | Video content duration of 0 to 10 minutes |\n| `MEDIUM` | Video content duration of 10 to 30 minutes |\n| `LONG` | Video content duration of 30 to 60 minutes |\n| `EXTENDED` | Video content duration of 60+ minutes |\n| `UNKNOWN` | Unknown video content duration |",
        "enum": [
          "SHORT",
          "MEDIUM",
          "LONG",
          "EXTENDED",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoContentDurationTarget": {
        "type": "object",
        "description": "Targets ads to a specific video content duration",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/VideoContentDuration"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoCreative": {
        "type": "object",
        "properties": {
          "streamingTvSettings": {
            "$ref": "#/components/schemas/StreamingTvSettings"
          },
          "onlineVideoSettings": {
            "$ref": "#/components/schemas/OnlineVideoSettings"
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoInitiationType": {
        "type": "string",
        "description": "| VideoInitiationType | Description |\n| --- | --- |\n| `USER_INITIATED` |  |\n| `AUTOPLAY` |  |\n| `UNKNOWN` |  |",
        "enum": [
          "USER_INITIATED",
          "AUTOPLAY",
          "UNKNOWN"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoLandingPage": {
        "type": "object",
        "properties": {
          "landingPageType": {
            "$ref": "#/components/schemas/VideoLandingPageType"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "The URL of landing page where the ad directs."
          }
        },
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "VideoLandingPageType": {
        "type": "string",
        "description": "| VideoLandingPageType | Description |\n| --- | --- |\n| `DETAIL_PAGE` | A product detail page. |\n| `STORE` | A brand Store landing page. |",
        "enum": [
          "DETAIL_PAGE",
          "STORE"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ViewabilityTier": {
        "type": "string",
        "description": "| ViewabilityTier | Description |\n| --- | --- |\n| `ALL_TIERS` |  |\n| `LESS_THAN_40_PERCENT` |  |\n| `GREATER_THAN_40_PERCENT` |  |\n| `GREATER_THAN_50_PERCENT` |  |\n| `GREATER_THAN_60_PERCENT` |  |\n| `GREATER_THAN_70_PERCENT` |  |",
        "enum": [
          "ALL_TIERS",
          "LESS_THAN_40_PERCENT",
          "GREATER_THAN_40_PERCENT",
          "GREATER_THAN_50_PERCENT",
          "GREATER_THAN_60_PERCENT",
          "GREATER_THAN_70_PERCENT"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      },
      "ViewabilityTierType": {
        "type": "string",
        "description": "The type of viewability tier.\n| ViewabilityTierType | Description |\n| --- | --- |\n| `ALLOW_ALL` |  |\n| `VIEWABILITY_TIER_GT_70` |  |\n| `VIEWABILITY_TIER_GT_60` |  |\n| `VIEWABILITY_TIER_GT_50` |  |\n| `VIEWABILITY_TIER_GT_40` |  |\n| `VIEWABILITY_TIER_LT_40` |  |",
        "enum": [
          "ALLOW_ALL",
          "VIEWABILITY_TIER_GT_70",
          "VIEWABILITY_TIER_GT_60",
          "VIEWABILITY_TIER_GT_50",
          "VIEWABILITY_TIER_GT_40",
          "VIEWABILITY_TIER_LT_40"
        ],
        "x-amazon-advertising-package": "AdsCampaignManagementApiContract"
      }
    },
    "parameters": {
      "AccountIdHeader": {
        "name": "Amazon-Ads-AccountId",
        "in": "header",
        "description": "The identifier of an Amazon Ads Advertiser Account.",
        "schema": {
          "type": "string"
        }
      },
      "ClientIdHeader": {
        "name": "Amazon-Ads-ClientId",
        "in": "header",
        "description": "The identifier of a client associated with a 'Login with Amazon' account.",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "ScopeHeader": {
        "name": "Amazon-Advertising-API-Scope",
        "in": "header",
        "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id profileId from the response to pass it as input.",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "x-amazon-apigateway-request-validator": "full",
  "x-amazon-apigateway-request-validators": {
    "full": {
      "validateRequestParameters": true,
      "validateRequestBody": true
    }
  }
}